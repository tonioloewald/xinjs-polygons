{"mappings":"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","sources":["<anon>","demo/index.ts","src/index.ts","src/polygons.ts","demo/svg-test.ts","node_modules/xinjs/dist/module.js","node_modules/xinjs/dist/src/index.ts","node_modules/xinjs/dist/src/bind.ts","node_modules/xinjs/dist/src/xin.ts","node_modules/xinjs/dist/src/settings.ts","node_modules/xinjs/dist/src/path-listener.ts","node_modules/xinjs/dist/src/metadata.ts","node_modules/xinjs/dist/src/deep-clone.ts","node_modules/xinjs/dist/src/by-path.ts","node_modules/xinjs/dist/src/make-error.ts","node_modules/xinjs/dist/src/bindings.ts","node_modules/xinjs/dist/src/list-binding.ts","node_modules/xinjs/dist/src/dom.ts","node_modules/xinjs/dist/src/throttle.ts","node_modules/xinjs/dist/src/css.ts","node_modules/xinjs/dist/src/color.ts","node_modules/xinjs/dist/src/more-math.ts","node_modules/xinjs/dist/src/elements.ts","node_modules/xinjs/dist/src/string-case.ts","node_modules/xinjs/dist/src/component.ts","node_modules/xinjs/dist/src/hot-reload.ts","node_modules/xinjs/dist/src/xin-types.ts","node_modules/xinjs/dist/src/xin-proxy.ts"],"sourcesContent":["// polygon utilies, used for cleaning up region data\n// will be broken out to its own library\nfunction $38bb96f6372300b3$export$7fcd0f4809a1f255(a, b) {\n    return a.y * b.x - 0.5 * (a.x * a.y + b.x * b.y + (b.x - a.x) * (a.y - b.y));\n}\nfunction $38bb96f6372300b3$export$a01e6b5107f59da5(source) {\n    const [polygon, leftover] = source.split(\",\").reduce((acc, num)=>{\n        const [p, x] = acc;\n        if (x === undefined) return [\n            p,\n            Number(num)\n        ];\n        else {\n            p.push({\n                x: x,\n                y: Number(num)\n            });\n            return [\n                p,\n                undefined\n            ];\n        }\n    }, [\n        [],\n        undefined\n    ]);\n    if (leftover !== undefined) throw new Error(\"odd number of coordinates (expected even)\");\n    return polygon;\n}\nfunction $38bb96f6372300b3$export$7e15f8e95de272d5(points) {\n    return points.map((p)=>`${p.x},${p.y}`).join(\",\");\n}\nfunction $38bb96f6372300b3$export$798b53621063651(points, threshold = 0.5) {\n    if (points.length < 4) return points;\n    return points.reduce((poly, p)=>{\n        if (poly.length < 2) poly.unshift(p);\n        else if ($38bb96f6372300b3$export$bb3edc44842b5f2e(p, poly[0], poly[1]) < threshold) poly[0] = p;\n        else poly.unshift(p);\n        return poly;\n    }, []);\n}\nfunction $38bb96f6372300b3$export$bb3edc44842b5f2e(...points) {\n    if (points.length < 3) return 0;\n    else return Math.abs(points.reduce((totalArea, p, index)=>{\n        const q = index === 0 ? points[points.length - 1] : points[index - 1];\n        return totalArea + $38bb96f6372300b3$export$7fcd0f4809a1f255(p, q);\n    }, 0));\n}\n\n\n\n\nvar $cc01f8693f40d7ee$export$2e2bcd8739ae039 = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg viewBox=\"0 0 500 250\">\n<polygon points=\"241,118,240,119,240,117,238,116,238,115,239,114,239,113,239,113,239,111,241,110,241,111,243,111,244,112,246,111,247,113,245,116,246,118,241,118\"></polygon>\n<polygon points=\"251,117,247,118,246,118,246,118,246,116,247,114,246,110,250,110,251,113,251,116,252,116,251,117\"></polygon>\n<polygon points=\"313,118,311,118,308,120,307,119,305,120,300,119,299,116,296,114,296,113,297,113,298,110,299,110,300,107,300,107,301,105,302,105,303,104,303,105,307,105,309,108,308,110,310,110,309,110,310,112,317,114,313,118\"></polygon>\n<polygon points=\"263,83,264,86,264,88,263,89,264,91,266,91,267,92,258,98,255,99,254,97,252,97,250,95,238,87,238,85,239,85,243,83,243,82,245,82,245,81,246,81,246,80,248,80,249,80,248,79,248,77,247,76,254,74,262,74,261,74,262,77,260,78,263,81,263,83\"></polygon>\n<polygon points=\"306,104,310,107,309,108,306,105,303,105,303,104,302,105,301,105,301,101,304,100,305,104,305,103,306,104\"></polygon>\n<polygon points=\"244,107,244,108,242,109,242,111,241,111,241,110,240,111,239,110,239,111,238,110,238,110,238,109,237,108,235,108,234,108,234,107,233,105,234,103,235,104,237,103,242,103,241,90,243,90,252,96,252,97,254,97,255,99,256,98,256,101,255,104,249,104,246,105,245,107,244,106,244,107\"></polygon>\n<polygon points=\"284,118,283,119,282,118,281,119,277,118,276,119,276,120,273,120,272,122,270,119,270,117,272,115,276,114,276,113,278,112,280,110,281,110,283,111,283,113,284,113,284,113,285,114,288,118,285,118,285,118,284,118\"></polygon>\n<polygon points=\"231,106,227,106,229,106,231,106\"></polygon>\n<polygon points=\"228,109,228,109,228,109\"></polygon>\n<polygon points=\"298,144,300,146,299,149,298,147,298,145,297,145,295,144,297,142,296,140,297,140,296,138,298,139,299,141,298,142,298,144\"></polygon>\n<polygon points=\"266,131,267,130,266,128,267,128,268,128,270,128,270,128,270,126,269,125,270,124,269,123,268,123,268,122,272,123,273,120,276,120,275,126,273,128,272,130,270,132,270,131,269,132,268,131,267,132,266,131\"></polygon>\n<polygon points=\"292,131,291,131,290,129,291,129,292,128,292,128,293,130,292,131\"></polygon>\n<polygon points=\"316,55,317,56,318,56,317,55,319,54,320,53,323,53,326,54,326,56,323,58,321,57,319,58,315,58,316,55\"></polygon>\n<polygon points=\"294,94,285,94,284,83,285,81,290,82,293,81,294,81,295,82,298,82,298,84,298,86,296,85,295,83,295,84,300,92,299,92,299,93,297,95,294,94\" class=\"active\"></polygon>\n<polygon points=\"242,84,240,84,238,85,238,87,232,87,236,84,237,83,236,81,237,80,241,78,242,75,243,75,244,76,246,76,248,77,248,80,246,80,246,81,245,81,245,82,243,82,242,84\"></polygon>\n<polygon points=\"243,75,243,75,243,75\"></polygon>\n<polygon points=\"238,114,237,115,236,113,235,114,235,113,234,111,233,111,232,112,231,111,230,110,229,109,231,109,231,107,234,108,235,108,237,108,238,109,238,110,238,110,239,111,239,112,239,113,239,113,239,114,238,114\"></polygon>\n<polygon points=\"227,107,229,106,231,106,229,106,227,106,226,105,227,102,230,102,233,105,234,108,229,107,227,108,227,108,227,108,227,107\"></polygon>\n<polygon points=\"306,139,306,139,306,140,302,141,299,141,297,138,293,137,291,134,291,132,293,130,292,129,293,128,292,126,297,126,302,129,302,130,304,131,304,134,305,135,305,137,306,139\"></polygon>\n<polygon points=\"333,53,335,54,335,54,333,55,331,54,329,54,327,55,326,54,326,55,324,53,321,53,322,51,322,50,324,50,325,49,324,48,325,48,324,47,326,47,325,46,326,46,325,44,325,43,324,43,325,42,323,41,322,40,326,40,329,40,332,39,333,35,342,31,341,31,342,31,341,31,341,30,340,29,342,29,342,29,341,29,345,30,346,29,345,28,343,28,344,28,344,27,343,27,345,25,346,24,351,24,350,26,351,27,351,27,351,29,352,30,350,32,346,32,346,33,350,33,354,31,353,30,356,29,357,30,357,31,358,31,361,32,358,31,359,30,358,29,353,29,352,28,353,27,351,26,354,25,354,24,355,25,354,26,355,26,359,27,356,25,358,25,357,25,358,25,362,25,360,26,362,26,362,27,360,28,365,29,365,30,364,31,364,31,364,32,366,32,366,34,367,34,367,35,369,35,369,36,368,37,369,37,367,39,369,40,369,40,364,41,357,40,356,42,353,44,349,44,348,44,348,45,350,46,348,47,348,48,346,48,341,50,335,50,335,51,336,51,335,51,334,52,335,52,333,53\"></polygon>\n<polygon points=\"310,109,310,109,310,109\"></polygon>\n<polygon points=\"270,117,270,119,272,121,272,123,270,122,264,122,263,119,263,120,262,119,262,117,264,116,265,115,266,116,266,115,269,110,270,109,270,107,271,107,271,110,272,111,269,112,272,114,270,117\"></polygon>\n<polygon points=\"235,115,234,115,232,114,232,112,233,111,234,111,235,112,235,114,236,114,235,115\"></polygon>\n<polygon points=\"287,158,285,161,282,160,281,162,279,162,279,161,278,159,278,156,279,156,279,150,282,150,283,151,285,150,286,152,289,153,289,155,291,156,287,158\"></polygon>\n<polygon points=\"293,156,289,155,289,153,286,152,285,150,288,150,291,147,296,148,295,151,296,153,295,155,293,156\"></polygon>\n<polygon points=\"233,89,233,92,232,93,232,95,227,95,226,96,226,95,228,92,228,92,229,91,230,89,231,88,232,87,238,87,238,89,233,89\"></polygon>\n<polygon points=\"283,172,278,173,276,172,276,173,275,171,275,170,275,169,273,165,274,164,274,165,275,165,278,164,278,159,279,161,279,162,280,162,282,160,285,161,288,158,290,156,293,156,294,159,294,161,294,161,293,162,294,163,294,163,294,162,296,162,295,165,289,171,286,172,283,172\"></polygon>\n<polygon points=\"299,117,299,118,300,118,300,119,298,119,297,120,293,120,291,119,289,119,289,119,287,116,284,113,285,111,286,111,287,112,290,112,292,111,293,111,295,110,295,108,296,108,296,110,297,111,297,113,296,113,296,114,297,115,299,117\"></polygon>\n<polygon points=\"293,126,291,127,292,124,293,122,293,122,293,120,297,120,297,119,299,122,297,125,297,126,293,126\"></polygon>\n<polygon points=\"300,107,299,110,298,110,297,112,296,110,296,108,295,108,295,108,295,110,293,111,292,111,290,112,287,112,286,111,285,111,284,113,283,113,283,111,282,110,281,107,280,107,282,103,283,103,283,97,285,97,285,94,294,94,297,95,299,93,301,94,302,96,302,99,304,100,301,101,301,106,300,107,300,107\"></polygon>\n<polygon points=\"271,131,272,130,273,128,275,126,276,119,277,118,277,118,279,119,283,120,281,120,283,122,281,122,281,123,283,125,282,126,283,126,282,126,284,127,281,128,281,128,281,128,279,128,279,131,278,131,278,135,277,135,277,136,274,136,273,133,267,133,268,131,269,132,270,131,270,132,271,131\"></polygon>\n<polygon points=\"261,119,258,119,256,116,254,116,254,112,255,110,255,109,256,106,258,106,260,107,261,106,263,107,265,106,267,107,269,106,270,108,270,109,269,110,266,115,266,116,264,115,262,117,262,118,261,119\"></polygon>\n<polygon points=\"269,125,270,126,270,128,267,128,267,128,266,128,267,130,266,131,263,128,262,126,263,126,263,125,264,125,263,124,263,124,266,124,266,122,268,122,268,123,270,123,270,124,269,125\"></polygon>\n<polygon points=\"252,116,251,116,251,113,250,110,251,110,251,111,252,111,253,116,252,116\"></polygon>\n<polygon points=\"292,128,291,129,290,129,291,127,292,126,293,128,292,128\"></polygon>\n<polygon points=\"281,140,281,141,283,140,283,143,281,143,281,148,283,149,279,150,276,149,269,149,268,149,266,149,267,144,269,142,269,140,268,138,269,137,267,133,273,133,274,136,277,136,277,135,280,135,280,138,281,140\"></polygon>\n<polygon points=\"291,132,291,134,293,136,290,137,289,138,290,139,289,141,290,142,291,142,291,144,290,144,288,141,287,142,286,142,285,141,284,141,283,140,281,141,280,135,278,135,277,134,278,133,278,131,279,131,279,128,281,128,281,128,281,128,284,127,282,126,283,126,282,126,283,125,281,123,281,122,283,122,281,120,283,120,281,119,282,118,285,118,285,118,288,118,289,119,291,119,293,120,293,122,293,122,292,124,291,127,290,128,291,132\"></polygon>\n<polygon points=\"290,147,290,148,287,150,284,149,283,149,281,148,281,143,283,143,283,140,284,141,285,141,286,142,287,142,288,141,290,144,291,144,291,142,290,142,289,141,290,139,289,138,290,137,293,136,296,138,297,140,296,140,297,142,295,144,296,144,292,146,292,147,290,147\"></polygon>\n<polygon points=\"266,123,266,124,263,123,264,122,266,122,266,123\"></polygon>\n<polygon points=\"296,160,295,161,295,162,296,161,296,162,295,162,294,159,293,156,295,155,296,153,295,151,296,148,292,147,292,146,296,144,297,145,298,145,298,146,298,147,299,149,300,146,298,144,298,141,302,141,306,140,306,146,305,148,303,149,300,151,298,152,298,154,299,156,299,158,296,160\"></polygon>\n<polygon points=\"294,161,295,162,294,163,293,162,294,161,294,161\"></polygon>\n<polygon points=\"310,125,308,127,307,126,307,121,308,119,312,118,317,114,311,113,309,110,310,109,312,111,321,109,321,111,321,111,321,111,321,112,317,119,310,125\"></polygon>\n<polygon points=\"239,118,240,119,238,119,234,116,236,113,237,113,237,115,238,115,238,114,239,115,238,116,240,117,239,118\"></polygon>\n<polygon points=\"308,127,306,129,304,131,302,130,302,129,297,126,297,125,299,122,297,119,298,119,300,119,305,120,307,119,308,119,307,121,307,126,308,127\"></polygon>\n<polygon points=\"289,167,289,167,288,166,290,165,291,166,289,167\"></polygon>\n<polygon points=\"278,112,276,113,276,114,272,115,269,112,270,111,272,111,271,110,271,107,270,107,269,105,272,102,272,97,271,95,271,93,272,92,283,98,283,103,282,103,280,107,281,107,282,110,280,110,279,112,278,112\"></polygon>\n<polygon points=\"256,106,255,108,255,109,254,108,253,108,253,107,251,107,252,106,251,106,250,104,255,104,256,101,256,98,258,98,267,92,270,94,271,93,271,95,272,97,272,102,269,105,269,106,267,107,265,106,263,107,261,106,260,107,258,106,256,106\"></polygon>\n<polygon points=\"234,103,233,105,230,102,227,102,227,103,228,100,227,98,228,97,227,95,226,96,232,95,232,93,233,92,233,89,238,89,238,87,243,90,241,90,242,103,237,103,235,104,234,103\"></polygon>\n<polygon points=\"249,110,246,110,246,112,246,111,243,112,242,111,242,109,244,108,244,106,245,107,247,105,250,104,250,104,251,106,252,106,251,107,253,107,253,109,252,110,249,110\"></polygon>\n<polygon points=\"254,114,254,116,252,116,252,112,251,111,252,109,253,109,254,108,255,109,255,110,254,112,254,114\"></polygon>\n<polygon points=\"266,80,264,81,264,82,263,83,263,80,261,79,260,78,262,76,261,74,263,73,264,73,264,74,265,74,265,75,266,76,264,78,266,79,266,80\"></polygon>\n<polygon points=\"260,123,260,123,260,123\"></polygon>\n<polygon points=\"285,88,285,97,283,97,283,98,272,92,270,94,264,91,263,89,264,88,264,86,263,83,264,82,264,81,266,80,266,79,271,80,272,81,276,83,278,82,278,80,281,79,282,80,285,81,284,83,285,88\" class=\"active\"></polygon>\n<polygon points=\"278,163,278,164,277,165,274,165,274,164,273,165,272,164,271,162,270,156,267,151,266,149,268,149,269,149,276,149,279,150,284,149,285,150,283,151,282,150,279,150,279,156,278,156,278,163\"></polygon>\n<polygon points=\"7,53,6,53,8,52,7,53\"></polygon>\n<polygon points=\"162,180,162,182,163,182,160,182,160,183,150,183,150,180,152,179,151,176,152,175,153,177,155,177,155,175,160,175,160,174,162,174,162,180\"></polygon>\n<polygon points=\"159,156,161,157,161,156,163,156,163,156,163,159,162,161,158,162,157,161,158,160,155,160,155,159,157,158,158,159,158,157,159,159,161,159,161,158,160,158,159,156\"></polygon>\n<polygon points=\"42,42,40,43,39,43,40,42,39,42,40,41,43,41,42,40,42,40,40,40,36,43,37,43,36,44,30,47,30,47,25,48,25,48,27,48,27,47,31,45,31,44,32,43,30,44,30,43,29,44,27,43,25,44,25,37,27,36,26,36,27,35,25,35,25,33,26,33,25,33,25,32,26,33,25,32,25,27,33,26,34,26,33,27,35,26,39,27,39,27,38,27,39,27,51,28,54,28,54,42,54,41,50,42,46,41,47,40,44,40,45,40,43,41,44,41,44,41,44,41,42,42\"></polygon>\n<polygon points=\"162,100,162,100,162,100\"></polygon>\n<polygon points=\"164,101,164,101,164,101\"></polygon>\n<polygon points=\"185,136,185,136,185,138,186,139,185,141,186,141,186,143,184,143,182,143,182,142,181,143,180,143,180,142,180,143,180,140,182,137,182,135,183,134,183,133,183,132,184,133,184,135,185,136\"></polygon>\n<polygon points=\"167,171,169,172,169,173,171,174,170,175,171,176,169,178,165,179,163,179,164,180,163,180,163,181,164,181,163,182,162,182,162,173,164,173,165,172,167,171\"></polygon>\n<polygon points=\"159,188,157,188,156,189,151,189,151,188,150,187,151,187,150,187,151,186,150,184,160,183,161,184,161,183,162,184,160,184,161,185,159,186,159,188\"></polygon>\n<polygon points=\"160,167,158,164,154,164,155,162,155,160,158,160,157,161,159,162,158,163,159,164,159,164,160,167\"></polygon>\n<polygon points=\"163,173,162,173,162,174,160,174,160,170,159,169,159,168,160,166,159,164,161,161,162,161,163,159,163,156,165,158,170,160,169,163,173,163,174,162,174,161,175,161,175,163,173,164,170,167,169,172,166,171,164,173,163,173\"></polygon>\n<polygon points=\"157,157,158,155,159,156,159,157,160,158,161,158,161,159,160,159,159,159,158,157,158,159,157,158,157,157\"></polygon>\n<polygon points=\"156,167,154,166,154,165,153,164,154,164,158,164,160,167,159,169,157,169,156,167\"></polygon>\n<polygon points=\"152,170,156,170,157,171,157,175,155,175,155,177,153,177,152,175,152,174,153,171,152,170\"></polygon>\n<polygon points=\"151,189,156,189,157,190,159,191,158,192,154,195,154,197,155,198,150,197,149,197,150,195,148,196,148,195,148,193,150,192,149,191,150,191,151,189\"></polygon>\n<polygon points=\"153,167,154,164,154,165,154,166,156,167,157,169,156,169,156,170,154,169,152,170,152,168,153,167\"></polygon>\n<polygon points=\"159,169,160,170,160,175,157,175,156,169,159,169\"></polygon>\n<polygon points=\"158,161,160,161,160,164,159,164,158,163,159,162,158,161\"></polygon>\n<polygon points=\"153,108,153,108,153,108\"></polygon>\n<polygon points=\"155,201,155,198,155,199,155,199,156,200,160,201,158,201,155,201\"></polygon>\n<polygon points=\"174,161,173,163,169,163,170,160,165,158,163,156,164,152,167,152,169,152,169,156,172,156,173,158,175,158,174,161\"></polygon>\n<polygon points=\"104,96,103,96,104,96\"></polygon>\n<polygon points=\"125,58,122,58,123,57,124,57,124,58,125,58\"></polygon>\n<polygon points=\"187,146,186,146,186,141,185,141,186,140,187,139,188,140,189,140,189,138,191,138,193,137,194,138,195,137,197,137,198,139,197,140,198,141,196,143,196,147,195,150,194,149,195,147,194,147,193,147,192,146,189,145,189,145,187,146\"></polygon>\n<polygon points=\"167,106,167,107,167,106\"></polygon>\n<polygon points=\"179,126,180,125,179,126,180,125,183,125,182,127,180,128,182,127,181,128,183,127,183,126,186,127,185,130,182,132,183,133,182,135,182,137,180,139,177,138,178,138,177,136,178,134,177,132,177,130,178,129,177,127,178,127,177,126,176,123,174,122,174,122,177,122,178,119,180,122,181,123,179,126\"></polygon>\n<polygon points=\"128,101,128,101,128,101\"></polygon>\n<polygon points=\"169,54,167,55,169,54\"></polygon>\n<polygon points=\"167,118,166,119,167,120,167,121,167,122,168,123,168,125,167,125,166,126,165,126,164,127,163,126,163,122,161,122,160,119,163,120,163,119,165,119,166,118,167,118\"></polygon>\n<polygon points=\"154,126,153,131,152,130,153,129,152,128,150,128,149,128,146,125,142,124,140,123,143,120,142,119,143,117,142,115,143,114,143,113,143,114,143,113,145,112,145,110,148,109,150,108,151,108,149,110,148,112,149,113,149,115,150,115,153,115,154,117,156,117,156,119,157,120,156,121,157,122,157,123,156,122,153,123,153,124,154,124,153,124,154,126\"></polygon>\n<polygon points=\"96,66,96,67,87,67,87,66,86,66,86,64,87,63,88,62,88,61,89,62,92,62,93,63,96,63,96,66\"></polygon>\n<polygon points=\"99,18,100,19,99,19,101,19,100,20,102,19,104,20,103,21,97,21,97,20,99,20,97,20,98,19,97,19,99,18\"></polygon>\n<polygon points=\"108,36,97,35,95,34,92,34,81,30,81,28,89,29,92,30,89,31,90,31,97,31,100,32,99,32,101,33,100,32,101,32,101,32,101,32,100,31,103,30,99,30,100,30,103,29,105,31,106,30,109,31,113,31,113,30,115,30,116,30,116,31,117,30,116,31,118,32,117,30,120,30,120,30,120,29,119,30,120,28,116,28,117,27,116,27,116,26,119,25,118,25,120,25,121,26,121,27,123,28,122,27,121,28,122,28,121,28,125,29,123,29,124,29,124,30,125,30,126,29,126,32,108,32,108,36\"></polygon>\n<polygon points=\"115,24,116,24,116,25,116,25,114,25,114,26,113,26,107,24,111,24,110,23,115,24\"></polygon>\n<polygon points=\"100,23,103,24,105,26,105,26,110,27,110,28,106,28,107,28,107,29,108,28,109,29,107,29,104,29,104,29,102,28,99,30,93,30,92,29,93,29,88,29,87,28,97,28,97,24,99,24,100,26,101,25,100,23,100,23\"></polygon>\n<polygon points=\"176,150,177,151,179,152,179,153,175,158,173,158,172,156,169,156,170,150,172,149,173,150,175,149,175,150,176,150\"></polygon>\n<polygon points=\"128,95,130,96,128,98,129,98,128,100,128,99,127,100,126,100,126,98,128,96,128,95\"></polygon>\n<polygon points=\"163,111,165,112,165,113,167,113,166,115,166,115,165,116,165,117,166,118,163,119,163,120,160,119,161,122,162,122,159,124,159,124,158,124,157,123,157,122,156,121,157,120,156,119,156,116,154,117,153,115,150,115,149,112,148,112,149,110,151,109,150,109,151,110,150,111,150,112,151,112,151,112,151,110,153,109,153,108,153,109,155,109,155,110,158,110,160,111,162,110,161,110,164,110,163,110,163,111\"></polygon>\n<polygon points=\"176,117,178,119,177,122,175,122,175,120,174,118,175,117,176,117\"></polygon>\n<polygon points=\"139,98,139,98,139,98\"></polygon>\n<polygon points=\"128,72,132,74,132,75,131,76,132,80,132,84,130,83,130,83,129,83,129,82,128,83,128,82,128,83,124,83,126,83,125,84,126,84,126,85,125,84,125,85,120,83,118,84,118,84,118,85,116,86,117,85,116,85,116,86,115,86,115,87,114,87,115,87,115,89,112,88,112,87,109,84,107,84,107,85,105,84,104,82,104,81,107,81,107,74,108,74,108,73,109,73,109,70,108,70,108,69,109,69,109,67,110,67,109,64,111,63,110,63,111,62,111,61,109,61,110,60,110,59,106,59,105,57,118,57,118,56,119,57,126,58,122,60,124,60,124,60,128,61,128,62,128,63,129,63,128,66,129,67,130,67,128,68,128,72\"></polygon>\n<polygon points=\"106,85,106,86,106,88,105,88,103,88,101,89,98,86,99,86,99,82,100,82,100,81,102,81,104,83,105,84,106,85\"></polygon>\n<polygon points=\"131,33,132,34,133,34,136,35,137,36,136,36,139,36,137,37,135,36,131,37,131,36,129,37,130,36,130,34,131,33\"></polygon>\n<polygon points=\"132,112,131,111,131,109,134,110,135,112,135,112,135,114,131,111,132,112\"></polygon>\n<polygon points=\"89,57,87,57,88,56,89,57\"></polygon>\n<polygon points=\"179,146,176,148,176,150,175,150,175,149,173,150,172,149,170,150,169,149,169,148,166,148,166,144,167,142,167,141,165,140,164,137,169,137,169,135,170,137,171,138,180,139,180,141,180,143,179,146\"></polygon>\n<polygon points=\"154,108,154,108,154,108\"></polygon>\n<polygon points=\"223,15,223,15,224,15,221,16,221,16,220,17,221,17,223,17,224,17,221,17,224,18,225,18,218,18,223,19,220,19,223,20,218,20,219,14,223,15\"></polygon>\n<polygon points=\"56,36,56,36,56,36\"></polygon>\n<polygon points=\"83,45,83,50,79,48,78,46,83,45\"></polygon>\n<polygon points=\"93,63,92,62,91,62,91,60,89,59,89,57,105,57,106,59,108,59,108,60,110,61,109,61,111,61,111,62,110,63,111,63,109,64,110,67,109,67,109,69,108,69,108,70,109,70,109,73,108,73,108,74,107,74,107,81,104,81,104,82,102,81,99,81,99,76,96,76,95,74,95,74,92,74,92,67,96,67,96,63,93,63\"></polygon>\n<polygon points=\"132,67,129,67,130,66,130,64,130,63,131,62,132,63,132,61,134,62,134,62,134,63,133,65,135,64,136,65,134,67,132,67\"></polygon>\n<polygon points=\"125,60,127,59,127,60,130,61,132,60,134,61,131,61,130,62,129,61,128,62,129,62,128,61,126,61,125,60\"></polygon>\n<polygon points=\"165,103,165,104,165,103\"></polygon>\n<polygon points=\"92,57,88,56,88,55,85,53,86,52,86,52,83,51,83,42,97,42,97,51,99,51,97,52,97,57,92,57\"></polygon>\n<polygon points=\"156,138,148,135,148,134,149,132,150,131,153,131,156,138\"></polygon>\n<polygon points=\"126,106,125,106,126,105,128,106,128,107,126,106\"></polygon>\n<polygon points=\"201,134,202,135,201,135,199,137,198,136,198,135,197,136,194,135,194,136,192,138,189,138,189,140,187,140,186,139,185,138,185,136,184,135,184,133,182,132,185,130,186,126,187,127,187,127,188,127,188,128,188,130,188,128,189,129,190,128,191,129,194,129,198,132,201,132,201,134\"></polygon>\n<polygon points=\"167,61,166,61,166,61,167,61\"></polygon>\n<polygon points=\"188,42,187,42,188,41,187,41,188,41,187,41,187,41,186,41,187,40,186,41,187,40,183,41,184,40,183,40,183,40,182,40,183,39,182,39,182,39,181,39,182,39,181,39,182,39,180,38,181,37,180,38,180,38,180,37,180,37,179,37,180,37,179,37,180,37,179,37,179,36,178,36,180,36,178,36,180,35,179,35,180,35,181,36,179,34,180,35,178,36,178,35,179,35,177,35,178,34,177,34,180,34,177,34,177,34,176,34,178,33,176,33,180,32,175,33,176,33,175,33,177,33,176,32,177,32,175,32,180,32,175,31,181,31,177,31,178,31,175,31,176,30,178,31,176,30,180,31,179,30,179,30,176,30,179,30,180,29,179,30,179,29,180,29,180,29,180,29,180,29,179,29,180,28,179,28,180,28,174,27,180,27,179,27,179,27,178,26,179,26,177,26,178,26,177,26,179,26,176,26,178,25,176,25,175,25,175,26,173,26,172,25,174,25,173,25,174,25,173,24,174,24,173,23,174,23,172,23,173,22,172,22,172,22,170,22,172,21,168,20,169,20,169,20,161,19,158,15,160,15,160,14,162,14,156,13,162,12,163,13,162,12,165,12,165,12,166,12,165,11,166,11,172,12,167,11,169,11,174,11,176,11,175,12,176,11,181,12,179,11,181,11,179,10,180,10,188,11,189,11,188,11,188,11,188,11,191,11,186,10,195,10,187,10,196,10,196,10,199,10,196,9,202,9,214,9,201,10,215,9,216,10,214,10,220,10,204,11,216,11,213,12,213,12,221,11,220,12,217,13,224,12,223,12,228,11,234,12,229,13,221,13,228,13,221,14,222,14,226,14,225,14,219,14,218,20,223,20,223,21,219,20,220,20,219,20,222,21,219,21,224,22,219,22,219,22,219,22,220,23,220,22,222,22,221,23,219,23,217,23,219,23,214,22,216,23,212,23,213,23,212,23,212,24,215,24,212,24,216,24,213,24,215,24,215,25,216,25,216,26,210,25,212,25,210,26,215,26,211,26,212,26,209,27,213,27,210,28,212,28,215,27,219,28,213,30,208,30,206,30,205,30,206,31,204,31,202,33,198,33,198,34,197,33,198,33,197,33,197,33,197,33,197,34,195,34,194,34,195,34,194,35,193,35,194,36,192,36,194,36,194,37,192,36,193,37,192,37,192,37,191,37,192,38,190,38,191,38,190,38,192,39,190,39,191,39,190,40,191,40,189,40,191,40,190,41,190,41,189,41,190,42,189,41,188,42\"></polygon>\n<polygon points=\"171,53,161,53,161,52,162,52,162,52,161,52,160,53,158,53,158,51,156,52,157,51,156,50,157,49,156,49,157,49,157,48,159,49,161,49,162,48,161,48,161,47,162,47,161,47,162,45,160,44,162,43,160,43,161,43,161,42,160,42,160,41,162,43,161,43,163,43,162,44,163,44,162,44,164,45,163,45,165,46,163,46,164,46,164,47,166,48,166,48,166,49,167,48,167,48,168,48,167,49,168,48,168,49,170,49,167,50,169,50,166,51,170,50,171,50,170,51,171,53\"></polygon>\n<polygon points=\"151,95,151,95,151,95\"></polygon>\n<polygon points=\"165,108,165,108,165,108\"></polygon>\n<polygon points=\"165,102,165,102,165,102\"></polygon>\n<polygon points=\"125,106,123,105,122,104,123,103,124,103,123,101,124,101,124,100,126,100,126,103,127,103,125,106\"></polygon>\n<polygon points=\"141,130,140,132,139,131,138,131,139,128,139,129,137,128,139,124,141,123,142,124,144,124,145,125,145,125,146,126,141,130\"></polygon>\n<polygon points=\"170,116,171,118,170,118,169,119,172,122,170,122,168,123,167,122,167,121,167,120,166,119,167,118,165,117,165,116,166,115,166,115,167,114,167,113,169,115,169,116,169,115,170,116\"></polygon>\n<polygon points=\"161,63,162,62,160,62,161,61,163,62,164,61,165,62,161,63,159,65,158,64,158,63,160,62,161,63\"></polygon>\n<polygon points=\"146,96,147,97,142,97,143,96,141,96,141,95,136,94,136,94,137,94,136,93,132,95,134,93,138,93,146,96\"></polygon>\n<polygon points=\"90,81,91,80,96,81,99,81,99,86,98,86,99,88,98,88,96,87,97,86,94,85,93,82,90,81\"></polygon>\n<polygon points=\"129,72,129,72,129,72\"></polygon>\n<polygon points=\"130,72,130,72,130,72\"></polygon>\n<polygon points=\"132,71,132,71,132,71\"></polygon>\n<polygon points=\"132,71,130,72,130,71,128,71,128,68,130,68,130,67,132,67,132,70,132,71\"></polygon>\n<polygon points=\"130,67,129,68,130,67\"></polygon>\n<polygon points=\"130,72,130,72,130,72,130,72\"></polygon>\n<polygon points=\"128,72,128,71,130,71,130,72,128,72\"></polygon>\n<polygon points=\"130,68,129,68,130,68\"></polygon>\n<polygon points=\"65,30,64,30,65,30\"></polygon>\n<polygon points=\"139,20,138,20,140,20,138,21,140,21,132,21,132,20,139,20\"></polygon>\n<polygon points=\"139,10,145,10,144,11,145,10,142,10,156,10,155,10,156,10,156,12,154,12,156,12,152,12,156,12,156,13,152,13,153,14,149,14,152,14,151,14,147,14,146,14,148,15,142,15,147,15,142,15,146,16,143,16,145,16,145,17,141,17,142,17,141,18,136,18,142,18,141,19,137,19,138,19,135,18,136,19,132,19,132,18,134,18,134,17,136,17,132,17,132,15,136,16,134,16,137,15,132,15,134,15,132,15,132,14,138,14,139,14,134,13,144,13,140,13,143,12,140,12,140,12,139,13,132,13,132,12,136,12,132,12,132,11,133,11,132,10,140,11,135,11,138,10,137,10,141,10,138,10,139,10\"></polygon>\n<polygon points=\"132,30,133,29,132,29,132,28,136,28,134,28,137,29,136,29,137,30,135,30,137,31,134,33,133,32,132,32,132,30\"></polygon>\n<polygon points=\"144,24,140,24,138,23,142,23,144,24\"></polygon>\n<polygon points=\"133,23,137,23,139,24,138,24,138,24,138,25,139,24,142,25,140,25,142,25,141,24,142,24,146,24,146,25,144,25,147,25,145,26,146,25,146,26,148,25,147,26,148,26,147,26,149,26,148,26,149,25,151,26,149,27,150,27,149,27,152,26,150,27,151,27,151,28,153,27,152,27,155,27,152,28,155,28,153,28,156,27,155,28,153,28,156,29,154,29,155,29,154,29,155,29,155,29,156,29,154,29,156,30,156,33,155,33,156,34,156,37,154,36,156,37,156,39,151,37,150,37,151,37,149,36,148,36,148,35,148,36,148,35,147,36,147,35,146,35,146,35,147,36,142,36,141,35,142,34,148,34,147,33,150,32,148,30,148,30,147,30,148,30,145,29,144,30,145,29,143,28,143,28,143,28,143,28,142,28,142,27,140,27,139,27,140,27,141,28,136,28,138,28,135,27,137,28,132,28,132,26,133,25,132,25,132,25,133,25,132,25,132,24,133,24,132,23,133,24,132,23,133,23\"></polygon>\n<polygon points=\"164,154,163,156,161,156,161,157,160,156,158,155,157,157,156,157,155,153,155,152,153,149,154,148,154,147,155,142,153,140,155,140,157,139,159,138,160,142,166,144,166,148,169,148,169,149,170,150,170,153,168,152,164,152,164,154\"></polygon>\n<polygon points=\"144,100,143,100,141,100,143,99,144,100\"></polygon>\n<polygon points=\"59,43,62,42,66,45,65,46,65,45,64,45,65,45,64,45,65,45,64,44,64,44,63,44,62,42,62,42,62,44,61,44,61,43,61,43,61,43,60,43,61,44,60,44,58,43,59,43\"></polygon>\n<polygon points=\"130,72,130,72,131,71,130,72\"></polygon>\n<polygon points=\"132,74,133,74,132,74,132,74\"></polygon>\n<polygon points=\"162,101,162,100,162,101\"></polygon>\n<polygon points=\"153,149,153,150,152,150,151,149,146,146,144,145,144,144,139,135,137,133,138,133,137,131,138,130,139,130,138,131,140,132,141,130,145,127,146,126,145,125,146,125,149,128,150,128,153,129,152,130,153,131,152,131,149,132,148,134,147,135,149,137,148,138,150,138,150,139,152,138,152,140,153,140,155,142,154,147,154,148,153,149\"></polygon>\n<polygon points=\"132,110,131,110,128,107,129,107,129,106,131,106,132,104,135,104,134,110,132,110\"></polygon>\n<polygon points=\"167,125,168,125,169,127,172,128,169,134,169,135,169,137,164,137,163,136,162,136,161,137,160,138,158,138,157,139,156,138,153,131,154,127,153,124,154,124,153,124,153,123,156,122,157,123,158,124,159,124,159,124,161,122,162,122,163,124,163,126,164,127,165,126,166,126,167,125\"></polygon>\n<polygon points=\"91,62,88,62,88,61,88,62,87,63,86,64,86,66,87,66,87,67,92,67,92,75,91,75,91,77,91,79,91,79,87,80,85,78,82,77,82,76,80,73,80,72,79,72,78,71,77,69,78,67,77,66,78,61,78,61,78,61,78,60,78,60,78,60,78,60,77,58,80,58,79,59,80,58,80,59,79,60,80,59,80,57,89,57,89,59,91,60,91,62\"></polygon>\n<polygon points=\"162,100,162,100,162,100\"></polygon>\n<polygon points=\"199,140,198,141,197,140,198,139,197,138,198,137,199,138,201,137,199,140\"></polygon>\n<polygon points=\"162,100,162,100,162,100\"></polygon>\n<polygon points=\"165,104,165,104,165,104\"></polygon>\n<polygon points=\"113,89,112,89,109,84,108,84,107,85,107,85,107,84,109,84,112,87,112,88,115,89,115,90,113,89\"></polygon>\n<polygon points=\"104,93,106,95,105,96,104,96,104,95,103,94,100,90,98,89,98,88,100,88,101,90,104,93\"></polygon>\n<polygon points=\"91,86,93,86,98,93,97,93,94,91,94,89,93,88,92,88,90,86,92,87,91,86\"></polygon>\n<polygon points=\"128,62,128,61,124,60,128,61,129,62,128,62\"></polygon>\n<polygon points=\"119,103,118,102,116,103,114,103,104,98,103,97,104,96,105,96,106,95,105,94,106,92,108,91,107,90,110,91,111,93,114,94,117,99,119,100,122,99,122,100,124,100,124,101,123,101,124,102,123,103,122,105,119,102,119,103\"></polygon>\n<polygon points=\"124,96,125,95,128,95,128,96,126,98,126,100,122,100,122,99,123,99,124,96\"></polygon>\n<polygon points=\"67,48,67,48,67,48\"></polygon>\n<polygon points=\"172,60,172,60,172,60\"></polygon>\n<polygon points=\"157,58,160,59,159,60,160,60,160,61,161,61,158,62,156,62,156,62,156,60,154,59,155,58,157,58\"></polygon>\n<polygon points=\"107,90,108,91,106,92,105,94,104,94,101,90,103,88,105,88,106,88,106,86,106,85,108,84,109,84,112,89,115,89,115,90,115,90,114,90,114,94,111,93,110,91,107,90\"></polygon>\n<polygon points=\"172,173,170,173,169,172,170,167,171,167,172,168,173,168,176,170,175,173,172,173\"></polygon>\n<polygon points=\"146,63,147,62,144,62,141,61,139,59,140,53,140,54,140,53,141,52,140,51,140,50,139,49,142,48,144,47,143,44,141,44,143,42,142,41,143,41,142,41,142,40,141,41,142,40,142,39,142,38,146,39,148,38,150,39,150,39,151,39,150,40,151,40,153,40,153,42,151,42,153,42,153,43,154,43,152,44,154,43,155,44,154,45,156,44,155,44,156,44,156,45,158,43,158,44,158,43,159,43,159,43,160,43,159,42,160,41,160,42,161,42,161,43,160,43,162,43,160,44,162,45,161,47,162,47,161,47,161,48,162,48,161,49,159,49,157,48,157,49,156,49,157,49,156,50,157,51,156,52,158,51,158,53,160,53,161,52,162,52,162,52,161,52,161,53,171,53,171,53,168,54,167,55,164,55,158,55,158,55,156,57,155,57,152,60,149,61,157,57,160,57,161,58,159,58,155,58,153,60,152,62,151,63,146,63\"></polygon>\n<polygon points=\"164,102,164,102,164,102\"></polygon>\n<polygon points=\"143,90,143,90,143,90\"></polygon>\n<polygon points=\"132,82,131,76,132,75,133,74,130,72,132,71,132,71,132,67,136,67,140,66,140,65,144,65,144,64,146,63,152,62,154,59,156,60,156,62,157,63,155,64,154,63,154,64,152,64,151,66,152,67,153,67,153,67,151,67,151,67,151,68,148,68,146,71,145,70,146,72,145,73,145,72,144,71,145,70,144,70,144,72,143,72,144,72,143,72,144,74,143,73,144,74,145,75,144,74,145,75,143,75,145,76,143,76,144,76,143,76,144,76,144,77,138,80,137,82,139,88,138,90,137,90,136,88,136,88,136,88,135,87,136,86,135,86,135,84,133,83,131,84,132,82\"></polygon>\n<polygon points=\"127,57,127,57,127,57\"></polygon>\n<polygon points=\"25,32,23,32,22,31,18,30,19,29,23,29,25,27,25,32\"></polygon>\n<polygon points=\"25,35,24,36,19,35,18,35,19,34,16,34,23,33,22,33,25,33,25,35\"></polygon>\n<polygon points=\"25,42,22,42,20,41,21,40,19,39,22,37,23,37,25,37,25,42\"></polygon>\n<polygon points=\"205,130,205,130,205,130\"></polygon>\n<polygon points=\"109,59,108,60,108,59,109,59\"></polygon>\n<polygon points=\"110,60,109,60,110,60\"></polygon>\n<polygon points=\"110,60,110,60,110,61,108,60,110,60\"></polygon>\n<polygon points=\"102,81,106,85,105,84,104,83,102,81,99,82,100,81,100,81,102,81\"></polygon>\n<polygon points=\"142,113,143,114,142,115,141,114,141,113,142,114,140,112,138,114,139,115,138,115,138,115,137,114,137,114,136,113,135,114,135,113,135,112,137,113,140,112,142,113\"></polygon>\n<polygon points=\"156,10,160,10,165,11,156,12,156,10\"></polygon>\n<polygon points=\"156,34,157,34,157,35,157,35,160,35,159,36,160,36,160,36,160,37,159,36,160,38,159,37,159,38,158,37,158,37,156,37,156,34\"></polygon>\n<polygon points=\"156,30,157,30,156,30,158,30,157,31,158,31,158,31,158,31,160,31,159,31,160,31,161,31,160,31,161,32,160,32,162,31,161,32,163,32,163,32,164,32,165,32,163,33,164,33,162,33,163,33,163,33,163,34,162,33,162,35,159,34,161,33,159,33,159,33,158,33,156,32,157,33,156,33,157,33,156,33,156,30\"></polygon>\n<polygon points=\"175,118,175,120,174,122,172,121,172,122,171,122,169,119,170,118,171,118,171,117,175,117,175,118\"></polygon>\n<polygon points=\"99,80,99,81,96,81,91,80,91,77,91,75,91,75,92,74,95,74,95,74,96,76,99,76,99,80\"></polygon>\n<polygon points=\"148,99,149,99,148,99\"></polygon>\n<polygon points=\"164,110,164,110,164,110\"></polygon>\n<polygon points=\"167,142,166,144,164,144,160,142,159,138,157,139,158,138,160,138,161,137,162,136,163,136,165,137,165,140,167,140,167,142\"></polygon>\n<polygon points=\"158,99,158,99,158,99\"></polygon>\n<polygon points=\"119,57,119,57,119,57\"></polygon>\n<polygon points=\"132,12,125,12,125,12,129,12,122,12,132,11,132,12\"></polygon>\n<polygon points=\"113,19,114,19,114,20,115,20,111,21,110,20,111,20,108,20,108,20,109,20,108,19,111,20,111,19,112,19,110,19,113,19\"></polygon>\n<polygon points=\"125,16,126,16,122,16,121,16,123,16,119,15,124,15,118,15,117,15,119,14,116,14,119,14,118,14,119,14,116,13,120,13,117,13,121,12,119,12,120,12,127,14,128,13,128,14,129,14,129,15,132,15,128,16,128,15,127,16,128,16,127,16,127,16,125,16\"></polygon>\n<polygon points=\"132,21,122,21,122,21,122,20,121,19,118,19,118,19,115,18,117,18,121,18,120,19,124,19,124,19,123,19,126,19,123,19,126,20,132,20,132,21\"></polygon>\n<polygon points=\"132,19,125,19,130,18,127,17,129,17,132,18,132,19\"></polygon>\n<polygon points=\"132,28,127,27,126,26,129,26,125,26,125,25,126,25,125,24,128,23,132,23,130,24,130,24,130,25,132,26,129,26,132,26,132,28\"></polygon>\n<polygon points=\"125,36,124,37,119,36,123,37,124,37,122,38,122,38,120,39,120,39,119,40,120,40,118,42,108,42,108,32,126,32,126,29,128,30,128,30,127,31,129,32,130,31,131,30,132,30,132,33,130,33,131,33,129,34,123,33,129,35,128,36,125,36\"></polygon>\n<polygon points=\"118,22,120,22,125,22,122,24,119,24,120,24,120,25,117,24,117,23,119,23,118,22\"></polygon>\n<polygon points=\"196,136,197,136,198,135,199,137,201,135,202,136,201,137,199,138,198,137,197,138,195,137,194,138,193,137,194,136,194,135,196,136\"></polygon>\n<polygon points=\"104,57,97,57,97,52,99,51,97,51,97,42,108,42,108,48,108,49,109,50,109,57,104,57\"></polygon>\n<polygon points=\"118,20,120,20,120,21,116,21,118,20\"></polygon>\n<polygon points=\"148,135,152,136,157,139,155,140,152,140,152,138,150,139,150,138,148,138,149,137,147,135,148,135\"></polygon>\n<polygon points=\"91,80,91,83,93,86,91,86,92,85,89,84,88,81,88,80,91,80\"></polygon>\n<polygon points=\"176,125,177,126,178,127,177,127,178,129,177,130,177,132,178,134,177,136,178,138,177,138,171,138,170,137,169,134,172,128,168,126,168,123,170,122,172,122,172,121,174,121,174,123,176,123,176,125\"></polygon>\n<polygon points=\"152,199,154,198,155,198,155,201,150,201,153,201,152,200,154,201,154,201,154,201,153,200,154,199,152,199,152,199\"></polygon>\n<polygon points=\"148,193,148,195,148,196,150,195,149,197,150,197,155,198,152,198,151,200,149,199,150,199,151,198,151,198,149,198,149,199,148,199,149,198,148,198,148,197,149,198,149,197,149,198,149,198,149,198,149,197,148,196,148,197,149,197,148,197,149,197,148,197,148,197,148,197,147,197,148,196,147,196,148,195,148,195,147,196,147,195,146,195,147,195,147,194,148,194,147,193,147,194,147,193,147,193,147,193,147,192,146,192,148,192,148,191,146,191,147,191,147,191,147,191,147,190,145,190,146,189,147,189,147,190,148,188,148,189,148,188,149,188,148,188,149,187,148,186,149,184,149,184,149,184,149,183,149,183,150,183,148,183,147,182,148,180,148,177,148,177,151,172,151,165,152,162,152,157,153,155,152,150,154,149,155,152,155,153,156,157,157,157,156,158,155,159,155,162,153,164,153,167,152,168,153,173,152,174,152,175,151,176,152,179,150,180,150,183,150,184,151,186,150,187,151,187,150,187,151,188,150,188,150,190,149,191,149,193,148,193\"></polygon>\n<polygon points=\"151,100,150,100,150,99,150,97,153,98,154,98,153,98,155,99,155,100,151,100\"></polygon>\n<polygon points=\"216,25,219,25,218,26,220,25,219,26,220,26,220,26,219,26,220,26,219,26,220,27,217,27,216,26,216,25\"></polygon>\n<polygon points=\"181,166,179,168,178,170,180,167,179,167,179,168,176,172,176,171,176,170,175,170,173,168,172,168,171,167,170,167,173,164,175,162,175,161,174,161,175,159,176,157,178,155,179,152,177,151,176,149,179,146,180,142,181,143,182,142,182,143,184,143,186,143,186,146,189,145,195,147,194,149,195,150,195,152,193,155,193,156,192,157,188,157,183,160,182,160,183,161,182,161,183,161,182,164,181,166\"></polygon>\n<polygon points=\"66,45,67,46,65,46,66,45,66,45\"></polygon>\n<polygon points=\"163,100,163,100,163,100\"></polygon>\n<polygon points=\"173,53,172,54,173,54,172,54,171,56,172,55,173,56,172,56,173,56,173,57,174,56,176,57,175,58,176,57,175,58,175,59,177,58,176,59,177,59,176,60,176,60,176,59,175,60,175,59,175,58,173,60,174,59,172,59,173,59,173,58,171,59,168,59,169,58,168,58,169,57,170,57,169,57,170,56,169,56,170,55,173,53\"></polygon>\n<polygon points=\"161,19,155,19,153,19,156,18,151,18,158,17,153,17,153,17,149,16,158,15,161,19\"></polygon>\n<polygon points=\"163,101,163,101,163,101\"></polygon>\n<polygon points=\"165,105,165,106,165,105\"></polygon>\n<polygon points=\"160,99,160,99,160,99\"></polygon>\n<polygon points=\"165,106,165,107,165,106\"></polygon>\n<polygon points=\"100,55,100,55,100,55\"></polygon>\n<polygon points=\"129,106,129,107,128,106,126,105,126,104,128,103,131,103,133,103,135,104,132,104,131,106,129,106\"></polygon>\n<polygon points=\"126,58,126,58,126,58\"></polygon>\n<polygon points=\"87,80,87,80,87,80\"></polygon>\n<polygon points=\"146,62,147,62,143,64,142,63,143,64,143,64,140,64,139,65,140,65,135,67,137,65,137,63,137,62,138,63,139,63,138,61,137,61,136,62,133,61,133,60,132,58,131,58,130,57,127,57,128,58,126,58,126,58,124,58,124,57,125,56,125,55,124,53,125,53,125,52,126,52,127,51,126,50,125,50,125,47,127,46,128,47,132,48,136,48,136,51,138,54,140,54,140,60,141,61,144,62,146,62\"></polygon>\n<polygon points=\"160,99,160,99,160,99\"></polygon>\n<polygon points=\"72,54,76,55,79,58,76,57,77,57,76,57,75,56,74,56,75,56,72,55,73,55,72,54\"></polygon>\n<polygon points=\"63,43,62,42,59,43,57,42,83,42,83,45,78,46,79,48,86,52,86,52,85,53,88,55,88,57,79,57,81,56,81,57,80,56,81,57,80,57,80,56,79,57,79,56,79,56,79,55,79,56,78,56,78,56,78,56,78,55,77,56,77,55,77,55,76,55,77,54,76,54,76,55,75,55,76,54,75,55,74,54,75,54,73,54,74,54,73,54,74,53,73,53,72,53,73,52,74,53,74,52,75,52,73,52,73,52,73,52,72,53,72,52,72,52,72,52,71,51,73,51,71,51,71,50,70,51,69,50,70,50,69,49,69,50,69,49,70,48,69,49,70,48,70,48,69,49,69,47,67,46,65,44,63,43\"></polygon>\n<polygon points=\"57,29,60,29,61,32,64,32,64,33,66,33,66,35,69,36,70,37,69,37,70,37,70,39,73,40,74,41,77,40,78,42,54,41,54,28,57,29\"></polygon>\n<polygon points=\"122,58,119,57,118,56,118,57,109,57,109,50,108,49,108,48,108,42,118,42,118,43,121,43,122,45,121,46,124,45,126,46,125,47,125,50,126,50,127,51,126,52,125,52,125,53,124,53,125,55,125,56,123,57,122,58\"></polygon>\n<polygon points=\"56,42,56,42,56,42\"></polygon>\n<polygon points=\"83,31,92,34,95,34,97,35,108,36,108,42,78,42,77,40,74,41,73,40,70,39,70,37,69,37,70,37,69,36,66,35,66,33,64,33,64,32,61,32,60,29,62,30,61,29,63,28,64,28,64,29,70,28,67,28,67,29,68,28,68,29,69,28,73,27,72,27,76,29,77,28,78,28,77,29,79,28,82,28,81,28,81,30,83,31\"></polygon>\n<polygon points=\"88,17,90,18,88,18,89,18,87,19,86,19,86,18,83,20,79,19,84,18,88,17\"></polygon>\n<polygon points=\"84,22,87,22,90,23,85,24,83,25,83,26,79,26,75,25,78,23,77,22,81,21,84,22\"></polygon>\n<polygon points=\"91,19,97,20,97,21,93,22,91,21,96,20,87,20,90,20,87,20,91,20,88,20,91,19\"></polygon>\n<polygon points=\"90,23,92,23,91,24,93,24,96,24,95,25,97,24,97,28,87,28,87,28,87,28,95,27,87,27,86,26,90,26,86,26,87,25,85,25,86,25,86,24,90,23\"></polygon>\n<polygon points=\"471,201,471,201,471,201\"></polygon>\n<polygon points=\"275,14,275,14,275,15,275,14,280,16,276,16,276,17,274,18,274,19,273,19,272,18,273,18,269,17,273,17,270,17,274,17,269,17,269,17,274,16,273,16,273,16,271,16,271,15,270,16,271,16,268,16,267,16,268,16,266,15,267,15,266,15,267,15,266,15,265,15,269,14,267,14,269,15,269,15,270,14,273,15,272,14,275,14\"></polygon>\n<polygon points=\"285,14,288,14,283,15,275,14,277,14,276,13,278,14,277,13,281,14,282,13,282,13,282,14,285,14\"></polygon>\n<polygon points=\"313,107,310,107,309,104,310,101,314,102,314,103,318,100,322,99,324,102,323,102,322,103,313,107\"></polygon>\n<polygon points=\"348,66,345,68,343,68,342,66,344,65,345,64,344,63,343,61,337,60,339,58,339,58,340,57,342,57,345,55,344,54,344,52,342,52,342,51,342,51,342,51,342,49,346,48,348,48,349,50,352,50,352,51,357,49,356,50,358,51,361,55,362,54,363,55,366,54,368,56,371,56,371,57,369,58,369,60,365,59,364,62,365,62,363,62,361,63,362,63,362,65,361,66,359,65,355,66,353,65,352,65,352,66,350,66,348,66\"></polygon>\n<polygon points=\"302,82,303,83,302,83,300,84,299,84,299,80,301,80,304,79,305,80,301,81,302,82\" class=\"active\"></polygon>\n<polygon points=\"10,32,14,33,13,34,12,34,12,34,10,34,11,34,11,35,9,35,11,36,10,36,6,35,6,34,2,34,2,33,2,33,0,33,1,34,0,35,0,29,7,31,8,33,9,33,7,32,10,32\"></polygon>\n<polygon points=\"497,35,493,35,498,36,499,38,499,39,496,38,492,39,491,38,487,39,484,37,486,37,484,36,473,35,471,34,471,33,470,33,471,32,469,31,470,30,476,30,476,29,475,28,476,28,483,28,486,30,488,29,486,28,487,28,495,28,500,29,500,35,498,35,497,35\"></polygon>\n<polygon points=\"328,63,328,68,325,66,323,67,323,66,321,65,320,63,322,63,321,63,321,62,324,62,323,60,321,60,319,61,317,60,318,60,318,59,315,58,319,58,325,57,325,57,326,57,327,60,329,61,329,62,328,63\"></polygon>\n<polygon points=\"326,55,326,54,327,55,328,54,331,54,333,55,335,54,336,54,337,56,337,57,339,58,337,60,335,59,331,62,329,62,328,60,326,59,326,57,324,57,326,56,326,55\"></polygon>\n<polygon points=\"340,74,340,75,337,76,335,75,335,74,334,74,332,73,329,72,325,73,325,71,324,71,324,70,325,70,323,69,324,68,323,67,325,66,327,68,329,68,329,67,331,66,331,66,331,66,331,66,333,66,334,68,336,68,337,70,343,72,342,73,341,73,340,74\"></polygon>\n<polygon points=\"315,83,315,85,312,84,308,82,304,80,304,79,307,77,307,74,309,73,312,73,313,75,314,75,313,78,314,79,316,80,316,81,316,82,317,83,315,83\"></polygon>\n<polygon points=\"320,89,320,89,320,89\"></polygon>\n<polygon points=\"391,116,392,117,390,117,390,116,389,116,389,116,386,113,387,110,388,109,388,106,386,104,387,102,385,99,386,99,386,97,387,98,389,97,390,97,390,98,391,98,390,101,392,100,393,100,393,99,394,100,397,103,396,105,394,105,392,106,393,109,391,107,390,107,390,106,389,107,388,112,389,112,390,115,391,116\"></polygon>\n<polygon points=\"314,67,316,68,317,67,320,69,319,69,318,72,317,71,317,70,317,70,315,71,315,70,313,69,314,69,313,68,315,68,314,67\"></polygon>\n<polygon points=\"403,95,402,95,401,95,401,95,399,95,398,94,398,93,396,93,394,94,394,93,393,94,392,93,391,94,391,96,391,96,390,95,389,95,389,94,388,94,388,93,387,93,387,91,385,92,386,90,387,89,387,87,386,86,387,86,387,85,388,84,387,81,385,80,386,79,385,78,387,78,388,77,387,77,388,77,387,75,388,73,388,72,389,72,385,71,386,70,384,70,385,68,386,68,385,66,390,66,396,67,399,66,403,66,404,65,407,67,409,66,408,67,408,69,406,69,404,70,403,72,404,73,403,77,404,79,402,79,403,80,402,80,403,82,401,83,401,84,402,85,402,87,401,87,402,87,402,88,402,89,405,89,404,90,405,90,406,91,405,93,406,92,407,95,405,95,405,94,405,94,404,93,403,95\"></polygon>\n<polygon points=\"300,79,299,79,300,77,301,77,301,77,300,79\" class=\"active\"></polygon>\n<polygon points=\"354,69,353,69,353,70,350,71,346,70,352,68,350,67,349,68,347,67,349,66,348,66,349,66,352,66,352,65,353,65,355,66,359,65,361,66,359,68,357,68,356,69,354,69\"></polygon>\n<polygon points=\"410,118,410,119,410,118\"></polygon>\n<polygon points=\"412,61,411,62,409,62,408,63,406,62,405,60,405,59,407,59,406,56,409,55,412,56,410,58,411,59,415,58,416,59,416,61,415,60,412,61\"></polygon>\n<polygon points=\"363,116,362,117,361,116,361,114,361,111,363,113,364,115,363,116\"></polygon>\n<polygon points=\"302,80,301,80,299,80,299,79,301,77,300,76,301,75,301,74,304,74,309,73,307,75,307,77,302,80\" class=\"active\"></polygon>\n<polygon points=\"375,94,375,94,375,95,374,95,373,91,372,91,374,90,372,89,373,88,374,89,375,89,375,90,378,90,377,92,377,93,378,92,379,95,378,95,378,96,378,94,378,94,377,94,377,93,376,93,376,92,375,92,376,93,374,92,375,92,376,94,375,94\"></polygon>\n<polygon points=\"424,137,427,137,424,138,424,137\"></polygon>\n<polygon points=\"328,91,328,92,327,92,327,94,323,93,322,92,325,91,328,89,328,90,328,91\"></polygon>\n<polygon points=\"346,73,344,73,345,72,344,70,345,70,346,69,345,69,348,68,348,68,348,69,349,69,347,69,346,70,349,70,350,71,352,70,352,71,354,72,354,73,352,73,350,74,349,72,349,72,346,73\"></polygon>\n<polygon points=\"298,81,298,82,298,81\" class=\"active\"></polygon>\n<polygon points=\"424,68,423,65,423,66,421,65,421,63,420,64,420,62,419,61,420,61,421,60,422,60,420,59,423,58,423,58,425,54,424,53,421,54,420,53,423,51,425,52,427,56,431,57,432,59,437,58,437,59,435,62,433,62,432,63,432,65,431,66,431,66,430,65,430,66,428,67,428,68,426,67,424,68\"></polygon>\n<polygon points=\"299,81,299,80,299,81,298,81,299,81\" class=\"active\"></polygon>\n<polygon points=\"397,112,395,113,396,111,395,111,396,110,397,110,397,109,399,108,400,104,396,99,394,98,396,97,395,97,395,96,393,96,393,95,392,94,392,93,394,94,396,93,398,93,398,94,400,95,398,96,398,96,397,99,401,104,402,107,401,109,398,110,398,112,397,112\"></polygon>\n<polygon points=\"409,94,408,94,409,94\"></polygon>\n<polygon points=\"387,63,386,64,386,66,384,66,383,63,376,62,376,60,375,59,372,58,372,57,378,54,381,55,381,56,385,56,385,56,386,57,388,57,388,58,386,58,387,59,385,60,387,61,387,63\"></polygon>\n<polygon points=\"411,46,410,46,411,48,412,48,412,49,408,51,409,51,408,52,406,52,404,53,401,53,400,55,401,55,400,56,396,55,393,55,392,55,392,54,387,52,388,51,384,50,383,50,384,49,384,48,386,47,385,46,386,45,389,44,390,45,390,44,392,43,392,43,395,44,396,43,396,42,397,42,396,41,395,41,398,39,398,38,397,37,398,37,398,36,400,36,401,36,400,37,402,37,402,38,402,38,403,38,402,39,402,40,404,40,402,42,402,43,406,42,406,43,411,41,413,42,413,42,415,43,415,44,413,44,413,45,414,45,413,46,411,46\"></polygon>\n<polygon points=\"406,135,407,136,409,136,409,137,400,136,396,134,397,133,400,134,401,134,403,135,404,134,406,135\"></polygon>\n<polygon points=\"397,131,397,133,396,133,396,133,395,133,395,133,392,131,389,125,388,125,387,123,383,119,382,117,385,118,386,119,393,124,393,125,394,125,394,126,395,126,395,129,397,128,397,129,397,131\"></polygon>\n<polygon points=\"438,131,437,131,437,130,436,130,436,129,435,130,435,131,434,130,433,129,435,128,436,129,436,128,434,128,433,127,432,127,432,126,434,125,436,126,436,128,438,130,441,127,446,129,446,138,444,136,445,136,443,136,443,136,443,135,444,135,442,135,443,135,441,132,438,131\"></polygon>\n<polygon points=\"338,84,335,84,336,82,335,81,334,79,335,78,334,78,335,76,337,76,341,73,344,74,346,73,349,72,349,72,350,74,352,73,354,73,349,75,350,76,349,78,347,78,348,79,347,79,346,81,345,81,344,81,343,82,342,84,338,84\"></polygon>\n<polygon points=\"298,81,299,79,300,79,299,80,299,80,299,81,298,81,299,81,298,84,298,82,298,81\"></polygon>\n<polygon points=\"476,45,477,47,475,47,475,48,475,49,472,50,472,51,470,51,470,52,468,54,466,47,468,45,468,45,471,44,475,41,477,41,477,40,478,40,478,39,480,38,477,38,476,39,477,39,476,39,475,39,476,38,475,37,476,37,476,36,477,36,477,35,484,36,486,37,484,37,486,38,491,38,492,39,489,40,487,42,484,41,481,42,481,41,479,42,477,42,477,43,475,44,477,45,476,45\"></polygon>\n<polygon points=\"348,86,347,88,348,89,349,91,348,91,346,91,344,92,344,91,343,91,342,89,336,90,336,89,338,88,338,87,337,87,337,86,336,85,335,84,339,84,342,84,343,82,346,81,347,79,348,79,347,78,349,78,349,77,350,76,349,75,350,74,354,74,355,74,356,75,358,76,355,77,353,77,353,79,355,80,354,81,354,82,350,86,348,86\"></polygon>\n<polygon points=\"361,83,359,82,359,80,360,80,360,79,359,78,360,77,359,77,358,76,356,75,355,74,354,74,354,73,354,72,352,71,352,70,354,69,356,69,357,68,358,68,362,67,361,66,362,65,362,63,361,63,363,62,365,63,363,63,368,65,365,64,366,65,365,65,365,67,364,68,364,70,365,70,364,74,365,75,364,76,365,76,364,77,366,80,365,81,365,81,366,81,366,82,365,82,363,83,361,83\"></polygon>\n<polygon points=\"368,86,372,86,372,88,369,88,367,87,366,87,361,85,362,84,363,83,368,85,368,86\"></polygon>\n<polygon points=\"362,106,361,109,361,111,360,111,360,112,360,112,359,112,358,113,357,114,356,113,352,103,351,97,351,96,351,95,352,95,351,95,351,94,351,94,350,96,348,96,346,94,347,94,348,93,346,93,345,92,346,92,345,92,346,91,349,91,347,87,348,86,350,86,354,82,354,81,355,80,353,79,353,77,355,77,358,76,359,77,360,77,359,78,360,79,360,80,359,80,359,82,363,83,361,85,369,88,372,88,372,86,373,86,374,88,378,88,378,87,377,86,379,86,381,84,384,84,384,85,384,85,384,86,385,86,385,87,385,87,384,87,382,88,381,92,380,92,379,95,378,92,377,93,377,92,378,90,375,90,375,89,374,89,373,88,372,89,374,90,372,91,373,91,374,95,373,94,373,95,372,94,371,95,371,96,370,97,368,98,364,101,364,102,362,103,362,106\"></polygon>\n<polygon points=\"396,16,388,17,392,15,393,15,392,16,394,15,396,16,396,16\"></polygon>\n<polygon points=\"385,14,386,14,384,14,389,14,389,15,388,15,389,15,382,15,380,14,379,14,385,14\"></polygon>\n<polygon points=\"383,12,386,13,384,13,385,14,380,14,377,14,383,12\"></polygon>\n<polygon points=\"384,51,388,51,386,54,386,55,385,56,381,56,381,55,378,54,374,56,374,55,375,55,374,54,372,53,374,52,373,51,374,50,373,49,373,49,373,48,374,47,373,46,374,45,372,44,373,43,373,43,371,42,367,42,368,41,367,40,369,40,367,39,369,37,368,37,369,36,369,35,367,35,367,34,366,34,366,32,364,32,364,31,364,31,365,30,365,29,360,28,362,27,360,26,362,25,359,24,366,25,364,26,364,27,364,27,364,27,364,28,367,28,365,27,366,27,366,26,366,26,362,24,362,24,362,23,362,23,362,23,371,22,371,22,369,22,371,22,369,21,371,21,372,21,371,21,374,20,381,20,379,19,380,19,388,19,387,19,390,19,391,18,395,17,398,18,395,18,399,18,398,19,404,18,406,19,405,19,408,20,408,20,406,20,408,20,407,21,400,23,397,23,399,23,396,24,404,23,404,23,403,23,404,24,404,24,406,25,406,26,407,26,403,27,402,28,397,29,398,29,398,31,397,32,397,32,398,34,399,34,397,35,400,36,398,36,398,37,397,37,398,38,398,39,396,40,395,41,397,41,397,42,396,42,396,43,396,43,393,43,390,45,390,45,389,44,386,45,385,46,386,47,384,48,384,49,383,50,384,51\"></polygon>\n<polygon points=\"394,121,395,123,394,123,391,121,390,119,389,116,390,116,390,117,392,116,393,117,394,121\"></polygon>\n<polygon points=\"410,118,412,115,412,116,413,115,413,116,414,117,416,118,414,118,415,119,411,119,409,123,406,123,405,124,404,124,402,123,402,122,405,123,404,123,405,121,407,121,408,119,409,119,410,118,410,119,410,118\"></polygon>\n<polygon points=\"317,83,317,83,317,83\"></polygon>\n<polygon points=\"408,94,408,94,408,94\"></polygon>\n<polygon points=\"464,42,464,42,466,43,460,43,460,43,462,43,458,42,457,43,455,43,454,43,454,42,452,41,454,40,453,39,450,39,445,38,444,37,445,36,444,35,445,34,444,33,445,32,443,32,446,31,446,30,447,30,447,29,448,29,447,28,448,28,446,28,450,25,457,25,458,25,457,25,461,27,470,26,472,27,472,28,474,28,474,29,476,28,476,29,476,30,470,30,469,31,471,32,470,33,471,33,471,34,477,35,477,36,476,36,476,37,475,37,476,38,475,39,476,39,472,41,473,40,472,40,473,39,469,39,464,42\"></polygon>\n<polygon points=\"412,128,411,130,409,131,409,129,411,127,410,125,410,125,410,124,408,124,410,122,411,119,413,119,414,120,413,120,413,120,413,120,414,122,414,122,415,124,414,123,413,126,411,127,412,128\"></polygon>\n<polygon points=\"420,129,420,130,421,131,419,132,418,130,418,129,417,129,417,133,416,133,416,131,416,130,415,130,415,129,416,127,416,126,417,124,418,123,422,124,424,123,423,124,417,124,417,125,417,126,418,127,419,126,421,126,421,126,418,128,420,129\"></polygon>\n<polygon points=\"423,117,422,116,423,115,422,114,421,115,420,114,420,115,419,115,420,114,421,113,422,113,422,114,423,113,423,112,424,112,424,111,425,112,426,115,425,116,425,115,424,117,424,117,423,117\"></polygon>\n<polygon points=\"421,105,421,106,421,105,422,106,422,106,422,107,422,108,420,106,420,107,419,106,418,106,418,105,417,104,417,105,417,104,416,102,417,103,418,99,420,99,420,102,419,104,419,106,421,105\"></polygon>\n<polygon points=\"328,100,327,100,326,101,324,102,322,99,326,97,327,94,327,93,327,92,328,92,328,90,329,92,332,92,333,94,331,97,330,97,330,99,329,99,328,100\"></polygon>\n<polygon points=\"296,77,295,76,298,75,297,76,297,76,296,77\" class=\"active\"></polygon>\n<polygon points=\"373,46,374,47,373,48,373,49,373,49,374,50,374,50,373,51,374,52,373,53,371,52,370,51,371,51,368,49,367,47,373,46\"></polygon>\n<polygon points=\"367,47,368,49,367,50,366,50,365,51,362,49,358,51,356,50,357,49,355,50,355,49,354,48,356,47,355,47,356,46,354,44,356,42,357,40,364,41,366,40,368,41,368,42,371,42,373,43,372,44,374,45,373,46,367,47\"></polygon>\n<polygon points=\"354,44,356,46,355,47,356,47,354,48,355,49,355,50,352,51,352,50,349,50,349,48,348,48,348,47,350,46,348,45,348,44,349,44,351,44,354,44\"></polygon>\n<polygon points=\"373,53,372,53,374,54,375,55,374,55,375,56,371,57,371,56,368,56,366,54,363,55,362,54,361,55,358,51,362,49,365,51,366,50,368,49,371,51,370,51,371,52,373,53\"></polygon>\n<polygon points=\"397,109,397,110,394,110,394,109,393,110,392,106,394,105,397,106,397,105,399,105,399,108,397,109\"></polygon>\n<polygon points=\"411,127,409,130,407,129,405,130,405,129,403,129,403,127,402,126,401,123,402,122,404,124,405,124,406,123,408,123,408,124,410,124,410,125,410,125,411,127\"></polygon>\n<polygon points=\"426,72,424,73,423,72,424,71,424,71,424,70,423,70,423,69,425,68,426,67,428,68,428,67,429,67,431,65,431,66,430,67,430,68,427,70,428,72,426,72\"></polygon>\n<polygon points=\"322,90,321,91,321,90,321,89,322,90\"></polygon>\n<polygon points=\"344,52,344,54,345,55,342,57,340,57,339,58,337,57,337,56,336,54,333,53,335,52,334,52,335,51,336,51,335,51,336,51,335,51,335,50,342,49,342,51,342,52,344,52\"></polygon>\n<polygon points=\"342,65,340,64,336,65,334,63,334,61,335,60,334,60,333,61,334,61,333,61,333,61,331,61,335,59,341,61,343,61,344,63,345,64,344,65,342,66,342,65\"></polygon>\n<polygon points=\"386,104,388,106,388,109,387,111,387,107,386,106,386,102,385,102,384,101,384,102,383,102,383,103,382,102,382,103,382,102,381,103,382,102,381,103,381,101,381,98,380,99,380,98,381,98,380,98,381,98,380,97,379,96,379,97,378,96,379,94,380,92,381,92,382,88,384,87,385,87,385,87,386,85,387,87,387,88,387,89,385,91,385,92,387,91,387,93,388,93,388,94,389,94,389,95,391,95,389,97,386,97,386,99,385,99,387,102,386,104\"></polygon>\n<polygon points=\"310,101,309,102,307,98,304,96,303,92,302,91,299,86,298,86,299,84,300,84,303,83,301,81,304,80,306,81,312,84,317,85,318,87,320,88,319,89,321,91,322,91,321,91,323,93,327,93,327,94,326,97,318,100,314,103,314,102,312,101,310,101,310,101\"></polygon>\n<polygon points=\"450,56,451,57,450,57,449,57,448,59,449,61,449,61,448,60,447,61,447,57,448,54,447,52,447,51,448,50,448,50,449,50,449,52,449,53,450,56\"></polygon>\n<polygon points=\"345,71,345,72,344,73,342,73,343,72,337,70,336,68,334,68,333,66,331,66,331,66,331,66,331,66,329,67,329,68,328,68,328,63,331,62,331,63,333,64,334,63,336,65,340,64,342,65,342,67,342,67,343,68,343,69,344,70,344,71,345,71\"></polygon>\n<polygon points=\"429,76,427,76,427,77,427,77,426,77,425,77,426,75,425,74,426,74,426,73,426,72,428,71,429,73,430,75,429,76\"></polygon>\n<polygon points=\"401,84,401,83,403,82,402,80,403,80,402,79,404,79,403,77,404,73,403,72,404,70,406,69,408,69,408,67,409,66,407,67,406,66,404,65,406,64,405,63,405,63,406,62,408,63,414,60,416,61,416,59,415,58,411,59,410,58,412,56,414,56,416,55,415,55,418,53,417,52,418,51,423,51,420,53,421,54,424,53,425,54,423,58,423,58,420,59,422,60,421,60,420,61,419,61,420,62,420,64,421,63,421,65,423,66,423,65,425,68,418,71,419,70,418,70,419,70,420,69,418,68,415,71,414,71,413,71,414,72,415,72,415,73,416,73,418,72,420,73,420,74,417,75,416,76,417,77,418,80,419,81,417,81,419,82,417,83,420,83,419,84,419,84,419,85,419,86,418,86,417,88,416,88,417,88,416,90,416,89,415,91,414,91,413,92,412,92,412,93,409,93,409,94,408,94,408,93,408,94,407,94,406,93,406,92,405,93,406,91,405,90,404,90,405,89,402,89,402,88,402,87,401,87,402,87,402,85,401,84\"></polygon>\n<polygon points=\"394,123,394,123,394,123\"></polygon>\n<polygon points=\"417,94,417,92,418,91,419,90,419,90,418,95,417,94\"></polygon>\n<polygon points=\"345,69,346,69,345,70,344,70,343,68,345,68,349,66,347,67,349,68,350,67,352,68,350,69,348,69,348,68,345,69\"></polygon>\n<polygon points=\"309,67,308,67,308,66,306,64,310,65,311,66,313,66,315,68,310,68,309,67\"></polygon>\n<polygon points=\"335,81,336,82,335,84,336,85,337,86,337,87,338,87,338,88,336,89,335,90,330,89,329,87,326,88,325,88,321,86,320,83,319,83,318,83,318,83,317,83,316,82,316,81,316,80,314,79,313,77,314,75,313,75,311,72,312,72,311,70,312,70,314,71,317,70,317,70,317,71,318,72,318,73,322,74,325,74,325,73,328,72,332,73,334,74,335,74,335,77,334,78,335,78,334,79,335,81\"></polygon>\n<polygon points=\"378,87,378,88,375,88,373,87,375,86,377,86,378,87\"></polygon>\n<polygon points=\"448,63,451,64,452,63,452,65,453,65,450,65,449,67,447,66,445,66,445,66,446,67,445,67,444,66,445,65,445,65,446,65,447,62,448,63\"></polygon>\n<polygon points=\"432,78,433,78,433,79,433,79,432,81,431,82,432,81,431,82,431,81,431,79,431,79,431,80,430,80,430,79,431,79,430,79,432,78\"></polygon>\n<polygon points=\"437,76,439,75,440,73,441,73,440,73,441,74,442,73,444,71,444,69,445,68,446,68,446,67,446,67,447,70,447,72,446,72,445,75,446,75,445,76,444,76,445,76,444,75,443,77,443,76,442,77,440,77,441,77,440,76,440,77,439,79,438,78,438,77,434,77,434,78,432,78,432,77,434,76,437,76\"></polygon>\n<polygon points=\"396,67,390,66,386,66,386,64,387,62,385,60,387,59,386,58,388,58,388,57,385,56,386,55,386,54,387,53,392,54,392,55,394,55,398,55,401,56,403,57,406,56,407,59,405,59,405,60,406,62,405,63,406,64,403,66,399,66,396,67\"></polygon>\n<polygon points=\"386,86,384,86,384,85,383,84,381,84,378,86,375,86,374,87,373,86,369,86,364,83,364,83,365,82,365,83,366,82,365,81,365,81,366,80,364,77,365,76,364,76,365,75,364,74,365,70,364,70,364,68,365,67,365,65,366,65,365,64,368,65,363,63,365,63,364,62,365,59,369,60,369,58,372,57,372,58,375,59,376,60,376,62,383,63,384,66,385,66,386,68,385,68,384,70,386,70,385,71,389,72,388,72,388,73,387,75,388,77,387,77,388,77,387,78,385,78,386,79,385,80,386,80,387,82,388,84,387,85,387,86,386,86\"></polygon>\n<polygon points=\"398,105,397,106,396,105,397,103,394,100,393,99,393,100,392,100,390,101,391,98,390,98,390,97,389,97,390,95,391,96,391,94,393,95,393,96,395,96,395,97,396,97,394,98,396,99,398,102,399,103,399,105,398,105\"></polygon>\n<polygon points=\"433,63,433,62,435,62,437,59,437,58,432,59,431,57,432,57,433,56,432,54,433,53,435,52,435,52,437,52,437,51,437,51,433,51,433,51,433,50,431,50,435,48,432,48,432,47,433,46,432,46,433,45,433,44,433,44,434,44,433,43,433,42,435,40,435,40,436,39,437,40,439,39,433,37,434,36,434,35,433,34,431,33,435,31,435,30,434,29,435,28,435,28,435,27,433,27,433,26,435,25,435,25,434,25,436,26,444,26,444,25,445,25,443,25,446,24,446,24,455,25,449,25,446,28,448,28,447,28,448,29,447,29,447,30,446,30,446,31,443,32,445,32,444,33,445,34,444,35,445,35,445,36,445,37,444,37,444,38,448,39,453,39,454,40,452,41,454,42,454,42,448,43,438,49,440,49,440,50,441,50,441,51,442,50,442,51,443,50,444,50,446,51,445,51,447,53,445,55,445,57,441,61,436,65,435,66,433,65,431,66,431,66,432,65,432,63,433,63\"></polygon>\n<polygon points=\"443,19,445,20,447,19,446,19,452,20,449,21,444,21,443,21,440,20,441,20,443,19\"></polygon>\n<polygon points=\"432,48,435,48,431,50,433,50,433,51,437,51,437,51,437,52,435,52,435,52,433,53,431,55,433,55,433,56,432,57,428,56,425,52,422,51,418,51,417,52,418,52,418,53,416,55,416,55,414,56,409,55,404,57,400,56,400,55,401,55,400,55,401,53,404,53,406,52,408,52,409,51,408,51,412,49,412,49,411,48,410,46,413,46,414,45,413,45,413,44,415,44,415,42,413,42,413,42,411,41,406,43,406,42,403,43,402,43,404,40,402,40,402,39,403,38,402,38,402,38,402,37,400,37,401,36,401,36,397,35,399,34,398,34,397,32,397,32,398,31,398,29,397,29,402,28,403,27,406,26,406,26,406,25,404,24,404,24,404,24,403,23,405,22,407,22,408,23,411,23,421,24,422,23,421,23,423,22,430,24,429,24,430,24,429,24,430,25,428,25,430,25,429,26,432,27,434,26,433,27,435,27,435,28,435,28,434,29,435,30,435,31,431,33,433,34,434,35,434,36,433,37,439,39,437,40,436,39,435,40,435,40,433,42,433,43,434,44,433,44,433,44,433,45,432,46,433,46,432,47,432,48\"></polygon>\n<polygon points=\"313,68,314,69,313,69,315,70,315,71,314,71,314,70,311,69,310,68,313,68\"></polygon>\n<polygon points=\"202,79,220,65\"></polygon>\n<polygon points=\"155,85,165,75\"></polygon>\n<polygon points=\"220,92,236,79\"></polygon>\n<polygon points=\"210,109,224,96\"></polygon>\n<polygon points=\"234,45,246,33\"></polygon>\n<polygon points=\"221,88,233,74\"></polygon>\n<polygon points=\"218,42,231,28\"></polygon>\n<polygon points=\"192,213,214,195\"></polygon>\n<polygon points=\"230,181,242,136\"></polygon>\n<polygon points=\"160,203,175,191\"></polygon>\n<polygon points=\"438,161,446,161,446,178,444,177,444,175,443,174,444,175,444,175,442,174,442,173,442,172,441,174,440,174,441,173,442,172,441,170,441,171,439,173,439,174,438,173,438,173,438,172,436,170,432,169,429,169,429,161,438,161\"></polygon>\n<polygon points=\"458,156,459,156,460,158,459,157,461,158,463,161,463,163,463,164,462,164,460,166,459,165,457,165,446,165,446,161,442,161,442,148,444,150,446,149,447,146,446,144,447,142,447,142,448,140,449,142,450,145,451,145,452,146,453,151,457,153,458,156,458,156,458,156\"></polygon>\n<polygon points=\"446,170,446,169,447,169,447,170,446,170\"></polygon>\n<polygon points=\"450,180,450,180,450,180\"></polygon>\n<polygon points=\"429,146,430,146,430,145,430,145,431,143,432,143,431,142,432,143,432,142,434,142,434,141,433,140,436,142,438,142,439,142,438,142,439,142,439,142,440,141,440,142,440,143,439,143,438,145,437,146,442,148,442,161,429,161,429,146\"></polygon>\n<polygon points=\"429,168,428,169,424,170,424,168,429,168\"></polygon>\n<polygon points=\"456,182,456,185,454,184,454,186,452,185,452,184,452,184,451,182,452,182,454,183,454,182,456,182\"></polygon>\n<polygon points=\"457,153,457,153,457,153\"></polygon>\n<polygon points=\"471,169,471,169,471,169\"></polygon>\n<polygon points=\"448,173,449,173,451,175,455,175,456,176,458,177,455,178,453,179,453,179,452,178,451,178,452,178,451,178,449,179,446,178,446,178,446,172,447,172,448,173\"></polygon>\n<polygon points=\"424,146,424,145,424,145,425,145,425,144,426,145,426,144,428,145,428,147,428,146,428,147,428,146,429,146,429,168,424,168,424,170,423,171,422,172,417,172,414,174,411,173,410,173,410,172,411,171,411,169,410,165,407,161,408,162,408,160,408,161,409,162,407,159,408,156,409,155,409,156,409,155,412,154,413,154,418,152,420,150,420,149,421,148,422,149,422,148,422,147,423,148,423,148,423,147,423,147,423,147,423,146,424,147,423,146,424,146\"></polygon>\n<polygon points=\"459,174,458,175,458,177,456,176,455,175,451,175,449,173,446,172,446,170,447,170,447,169,446,169,446,165,457,165,459,165,460,166,462,164,463,164,462,169,460,172,460,171,460,172,459,174\"></polygon>\n<polygon points=\"258,53,258,55,257,53,255,53,256,53,256,53,256,52,258,52,257,52,258,51,260,51,259,52,260,52,259,53,258,53\"></polygon>\n<polygon points=\"252,66,252,66,252,66\"></polygon>\n<polygon points=\"282,72,283,73,282,73,282,74,281,74,281,74,281,74,280,74,279,72,280,72,282,72,279,72,279,71,279,71,278,70,279,68,287,67,286,68,283,68,284,69,283,69,283,70,281,69,282,71,282,70,282,71,281,71,283,72,283,73,282,72\" class=\"active\"></polygon>\n<polygon points=\"280,63,282,63,281,64,282,65,281,66,279,67,278,66,278,65,277,65,277,64,277,63,276,62,277,62,276,61,278,61,280,63\"></polygon>\n<polygon points=\"289,62,291,62,290,64,288,64,284,64,282,64,281,63,282,63,280,63,280,62,278,61,279,61,281,59,282,58,285,59,287,58,289,60,289,62\" class=\"active\"></polygon>\n<polygon points=\"260,57,259,56,258,53,260,52,259,52,260,50,262,51,262,50,264,51,262,50,262,50,263,49,262,49,262,49,264,49,264,50,265,49,265,50,267,49,270,50,270,52,270,52,271,54,267,55,269,57,268,58,268,59,261,59,261,57,260,57\"></polygon>\n<polygon points=\"279,61,275,61,272,60,273,60,273,59,274,58,276,59,279,58,282,58,279,61\"></polygon>\n<polygon points=\"292,60,290,60,290,61,289,62,289,60,287,58,288,58,291,58,292,60\" class=\"active\"></polygon>\n<polygon points=\"274,58,274,57,276,56,281,57,281,58,278,58,276,59,274,58\"></polygon>\n<polygon points=\"254,54,254,54,257,53,259,55,258,56,257,55,256,56,254,54\"></polygon>\n<polygon points=\"263,48,264,49,262,49,262,48,261,48,261,46,265,45,264,46,265,47,263,48\"></polygon>\n<polygon points=\"241,50,242,50,241,53,237,54,236,53,237,53,236,53,237,52,238,52,236,52,238,51,236,51,237,50,236,50,238,50,239,49,238,49,240,48,240,48,239,49,241,50\"></polygon>\n<polygon points=\"243,75,243,75,243,75\"></polygon>\n<polygon points=\"247,56,247,56,247,56\"></polygon>\n<polygon points=\"287,41,282,42,282,41,280,41,280,40,279,38,280,37,281,37,282,36,285,35,285,34,283,33,283,32,283,31,283,31,279,29,280,29,281,30,285,30,287,28,289,28,291,28,290,30,292,31,290,32,292,34,291,35,292,36,292,36,294,38,289,41,287,41\" class=\"active\"></polygon>\n<polygon points=\"244,50,243,50,244,50\"></polygon>\n<polygon points=\"301,74,300,75,300,75,300,74,296,75,293,74,291,75,290,74,288,74,289,74,288,74,288,73,288,73,288,72,286,72,287,71,288,72,287,71,287,70,286,70,286,69,287,69,292,68,291,68,293,68,295,67,299,67,301,68,303,68,309,67,311,68,311,69,312,70,311,70,312,72,311,72,312,73,312,74,309,73,304,74,301,74\" class=\"active\"></polygon>\n<polygon points=\"247,57,247,57,247,57\"></polygon>\n<polygon points=\"279,48,279,49,281,49,282,49,277,49,278,49,278,49,278,49,279,48\"></polygon>\n<polygon points=\"304,59,303,60,301,60,302,59,301,59,298,58,298,59,298,59,299,61,298,61,295,61,294,60,295,60,294,60,291,61,291,62,290,62,289,62,290,60,292,61,291,58,288,58,285,59,282,57,281,56,283,55,283,53,284,53,292,54,293,53,297,52,298,53,297,53,298,54,299,54,299,55,302,55,303,56,306,56,305,57,306,57,305,57,305,59,304,59\" class=\"active\"></polygon>\n<polygon points=\"240,73,239,74,238,74,238,72,237,71,238,71,237,71,238,68,238,67,239,66,239,67,241,67,241,67,240,68,240,70,240,70,240,72,240,73\"></polygon>\n<polygon points=\"272,60,273,60,272,61,271,62,269,62,269,62,269,61,269,60,272,60\"></polygon>\n<polygon points=\"246,53,245,54,243,53,245,52,244,51,243,52,244,51,246,51,246,51,246,50,245,49,246,49,243,49,244,48,243,47,242,47,242,48,242,47,243,46,241,46,243,46,242,45,243,45,242,44,243,44,243,44,246,44,244,45,245,45,244,45,247,45,246,46,245,47,246,47,245,47,247,47,248,49,250,50,250,51,249,50,250,51,250,52,252,52,252,53,250,54,252,54,251,54,245,55,245,55,242,55,244,54,246,54,247,53,246,53\"></polygon>\n<polygon points=\"259,56,258,56,258,55,259,56,259,56\"></polygon>\n<polygon points=\"249,72,247,74,244,74,242,75,241,74,242,74,241,74,240,73,240,72,240,70,240,70,240,68,241,67,241,67,239,67,239,66,238,67,238,66,237,65,239,64,248,65,249,66,255,66,254,67,251,68,251,68,250,70,250,71,249,72\"></polygon>\n<polygon points=\"270,75,270,75,270,75\"></polygon>\n<polygon points=\"279,41,279,41,279,41\" class=\"active\"></polygon>\n<polygon points=\"292,53,285,53,283,53,283,53,282,52,283,52,283,50,286,50,286,49,287,48,287,48,287,48,289,47,292,47,293,48,293,49,296,51,294,51,294,53,293,53,292,54,292,53\"></polygon>\n<polygon points=\"260,64,260,64,260,64\"></polygon>\n<polygon points=\"326,23,329,23,327,24,327,24,327,24,327,25,327,25,330,27,324,27,325,26,321,25,324,24,323,24,325,24,323,24,326,23\"></polygon>\n<polygon points=\"333,20,344,18,346,18,345,19,335,20,333,21,333,21,332,21,332,22,331,21,332,22,329,22,330,23,329,22,330,23,328,23,329,23,329,23,325,23,328,23,324,23,328,22,327,22,329,21,328,21,329,21,328,21,333,20\"></polygon>\n<polygon points=\"315,63,315,63,316,64,316,65,317,67,316,68,313,66,311,66,310,65,306,65,301,62,303,61,302,60,305,60,303,60,303,59,305,59,306,58,305,57,306,57,305,57,306,56,303,56,302,55,299,55,299,54,298,54,297,53,298,53,297,52,294,53,293,51,296,51,293,49,293,48,289,47,289,45,288,45,289,45,288,44,289,43,289,42,292,42,290,41,290,41,289,41,294,38,292,36,292,36,291,35,292,34,290,32,292,31,290,30,290,29,289,29,294,28,296,28,295,28,295,28,295,29,297,29,296,29,300,29,307,31,307,32,304,33,294,32,297,33,296,33,298,33,298,34,299,35,298,35,302,36,303,36,301,35,306,35,305,34,309,33,311,33,312,32,311,32,312,31,310,30,314,30,315,31,312,32,315,32,316,32,316,31,318,31,317,31,323,30,325,29,326,29,324,29,325,30,324,30,332,29,333,30,332,30,333,30,335,29,334,28,335,28,340,29,340,29,341,30,341,31,342,31,341,31,342,31,333,35,332,39,329,40,326,40,322,40,323,41,319,42,319,43,317,42,318,41,317,40,316,40,314,41,315,42,315,43,316,43,314,44,316,45,315,45,315,46,318,45,322,47,321,47,323,47,324,46,324,47,324,47,324,47,325,48,324,48,325,49,324,50,321,49,320,49,319,50,317,51,317,52,310,52,309,53,310,54,307,54,309,56,308,57,309,57,308,58,310,59,312,59,312,58,315,59,315,59,316,60,315,61,316,61,315,62,316,62,315,63\"></polygon>\n<polygon points=\"261,44,259,44,260,44,258,44,258,43,259,43,258,43,259,42,257,42,260,41,258,42,258,41,257,41,258,41,257,41,257,41,258,40,257,40,260,40,261,40,257,40,257,40,258,40,257,40,258,40,257,39,259,39,257,39,259,39,258,39,259,38,260,39,259,38,261,38,260,38,260,37,262,38,261,37,262,38,261,37,266,36,265,36,266,36,264,37,263,37,267,35,266,35,268,34,267,34,268,34,267,34,268,33,268,34,268,33,270,33,268,33,269,33,268,33,269,32,268,32,269,32,269,32,271,32,270,32,272,31,271,31,272,31,271,30,272,30,273,31,272,31,273,30,272,30,275,30,273,30,275,30,274,30,275,30,274,29,275,29,277,29,277,28,277,28,277,29,278,28,278,29,279,29,278,28,279,28,281,28,280,28,281,28,279,27,280,27,283,28,282,27,284,27,284,27,284,26,286,27,285,27,285,28,287,26,287,27,288,27,288,26,290,26,289,27,289,27,289,27,290,27,293,27,290,28,291,28,291,28,293,28,290,29,290,28,288,28,286,28,286,29,285,30,281,30,280,29,278,29,278,29,278,30,276,30,275,31,273,31,272,33,270,33,270,34,269,35,270,35,269,36,267,37,267,39,268,40,267,40,268,41,266,42,266,43,265,43,265,42,264,43,263,43,261,44\"></polygon>\n<polygon points=\"256,65,254,65,254,66,254,66,248,65,248,65,249,63,248,62,249,62,248,62,248,61,247,60,247,59,246,59,244,59,243,58,244,58,243,58,246,57,246,58,248,57,247,56,248,57,251,56,250,56,252,55,252,54,254,54,256,56,257,55,258,56,261,57,261,59,260,59,258,61,259,61,260,62,259,62,260,64,261,64,260,64,259,65,256,65\"></polygon>\n<polygon points=\"276,65,278,65,277,66,277,67,276,66,276,65\"></polygon>\n<polygon points=\"271,57,270,57,268,56,267,55,271,54,273,55,273,55,275,55,276,56,274,57,271,57\"></polygon>\n<polygon points=\"281,45,283,46,284,45,284,45,285,44,288,45,289,47,287,48,285,47,279,47,279,46,281,45\" class=\"active\"></polygon>\n<polygon points=\"273,69,273,70,274,71,272,72,273,71,272,69,265,66,264,64,262,63,260,64,261,64,260,64,259,62,260,62,259,61,262,60,263,61,263,60,264,61,265,60,267,60,269,60,269,61,269,62,267,62,267,63,267,63,269,65,270,67,272,67,272,67,276,69,275,70,274,69,273,69\"></polygon>\n<polygon points=\"320,49,323,49,322,50,322,51,321,53,317,52,317,51,317,51,319,50,320,49\"></polygon>\n<polygon points=\"325,47,324,47,324,47,324,47,324,46,323,47,321,47,321,47,322,46,321,45,322,45,322,44,325,44,326,46,325,46,325,47\"></polygon>\n<polygon points=\"267,64,267,64,267,64\"></polygon>\n<polygon points=\"272,63,277,63,277,63,277,64,277,64,277,64,276,65,276,66,274,65,272,63\"></polygon>\n<polygon points=\"298,61,299,62,301,62,297,63,296,62,296,62,295,62,297,61,297,61,298,61\"></polygon>\n<polygon points=\"281,66,282,67,282,68,279,68,278,67,279,67,281,66\"></polygon>\n<polygon points=\"289,66,288,66,289,67,287,67,286,68,282,68,281,66,282,65,281,64,281,64,282,64,285,64,288,64,290,64,289,66\" class=\"active\"></polygon>\n<polygon points=\"267,47,268,46,267,45,267,44,266,44,265,43,266,43,266,42,268,41,267,40,268,40,267,39,267,37,268,36,270,36,269,35,270,34,270,33,272,33,273,32,272,31,274,30,275,31,275,30,278,30,278,29,283,31,283,31,283,32,283,33,284,34,280,34,281,34,280,34,280,35,279,35,280,36,279,36,275,38,274,37,275,38,274,38,275,39,274,39,274,41,277,42,275,42,276,43,275,43,275,43,274,43,272,44,274,44,273,44,273,44,273,45,273,45,272,47,270,47,270,48,269,48,268,48,268,48,267,47\"></polygon>\n<polygon points=\"283,43,286,42,289,43,288,44,289,45,287,45,285,44,284,45,284,44,283,44,283,43,283,43\" class=\"active\"></polygon>\n<polygon points=\"278,70,277,69,277,67,277,66,277,66,279,66,278,68,279,69,278,70\"></polygon>\n<polygon points=\"282,57,284,58,282,58,281,58,282,57\" class=\"active\"></polygon>\n<polygon points=\"263,59,263,60,263,59\"></polygon>\n<polygon points=\"267,67,267,67,267,67\"></polygon>\n<polygon points=\"263,59,268,59,268,58,271,57,273,57,274,58,273,59,273,60,272,60,270,61,267,60,267,60,264,60,263,59\"></polygon>\n<polygon points=\"279,47,285,47,287,48,286,49,286,50,283,50,282,49,281,49,280,48,279,47\" class=\"active\"></polygon>\n<polygon points=\"315,57,316,59,318,59,318,60,317,60,318,61,318,62,317,61,317,62,315,62,316,61,315,61,316,60,315,59,315,59,314,59,313,58,312,58,312,59,311,59,308,58,309,57,308,57,309,56,307,54,310,54,309,53,310,52,317,52,320,53,320,54,317,55,318,56,316,55,315,57\"></polygon>\n<polygon points=\"317,40,318,41,317,42,319,43,319,42,321,42,324,41,324,43,325,43,325,44,322,44,322,45,321,45,322,46,321,47,318,45,315,46,315,45,316,45,314,44,316,43,315,43,315,42,314,41,316,40,317,40\"></polygon>\n<polygon points=\"283,55,282,56,282,57,280,56,276,56,275,55,273,55,273,55,271,54,270,52,270,52,270,50,275,49,277,49,277,50,282,49,283,51,282,52,284,54,283,55\"></polygon>\n<polygon points=\"277,63,272,62,274,65,272,65,270,62,269,63,269,62,271,62,272,61,273,60,275,61,276,61,277,62,277,63\"></polygon>\n<polygon points=\"298,59,298,59,298,58,299,58,302,59,301,60,299,61,299,61,298,59\" class=\"active\"></polygon>\n<polygon points=\"259,61,258,61,260,59,262,59,263,59,263,60,265,60,264,61,263,60,263,61,262,60,260,61,259,61,259,61\"></polygon>\n<polygon points=\"305,160,324,142\"></polygon>\n<polygon points=\"344,140,356,127\"></polygon>\n<polygon points=\"392,145,402,134\"></polygon>\n<polygon points=\"379,147,390,136\"></polygon>\n<polygon points=\"305,147,317,136\"></polygon>\n<polygon points=\"320,194,358,177\"></polygon>\n<polygon points=\"314,144,328,125\"></polygon>\n<polygon points=\"346,126,357,115\"></polygon>\n<polygon points=\"328,154,338,139\"></polygon>\n<polygon points=\"308,148,318,138\"></polygon>\n<polygon points=\"322,160,333,149\"></polygon>\n<polygon points=\"5,150,17,139\"></polygon>\n<polygon points=\"485,190,481,189,484,186,487,185,490,181,491,182,492,182,492,182,492,182,492,183,490,185,490,186,488,187,487,189,485,190\"></polygon>\n<polygon points=\"495,181,494,183,493,182,493,181,491,180,492,179,493,178,492,176,492,175,492,176,490,173,492,174,493,176,494,177,494,176,495,178,498,177,497,179,496,179,495,181\"></polygon>\n<polygon points=\"-1,192,11,181\"></polygon>\n<polygon points=\"442,123,464,106\"></polygon>\n<polygon points=\"93,168,103,158\"></polygon>\n<polygon points=\"3,137,18,124\"></polygon>\n<polygon points=\"5,143,17,132\"></polygon>\n<polygon points=\"476,153,491,143\"></polygon>\n<polygon points=\"1,149,1,149,1,149\"></polygon>\n<polygon points=\"490,143,505,128\"></polygon>\n<polygon points=\"117,132,131,118\"></polygon>\n<polygon points=\"55,162,68,150\"></polygon>\n<polygon points=\"477,118,488,107\"></polygon>\n<polygon points=\"466,142,485,132\"></polygon>\n<polygon points=\"446,112,456,101\"></polygon>\n<polygon points=\"8,99,35,89\"></polygon>\n<polygon points=\"10,107,20,97\"></polygon>\n<polygon points=\"27,141,41,118\"></polygon>\n<polygon points=\"471,123,481,113\"></polygon>\n<polygon points=\"474,119,489,105\"></polygon>\n<polygon points=\"-3,91,9,80\"></polygon>\n<polygon points=\"50,145,63,131\"></polygon>\n<polygon points=\"477,131,487,121\"></polygon>\n<polygon points=\"9,157,19,146\"></polygon>\n<polygon points=\"478,170,488,160\"></polygon>\n<polygon points=\"470,162,489,147\"></polygon>\n<polygon points=\"7,150,20,135\"></polygon>\n<polygon points=\"427,126,442,109\"></polygon>\n<polygon points=\"63,165,82,153\"></polygon>\n<polygon points=\"463,122,478,110\"></polygon>\n<polygon points=\"447,141,471,126\"></polygon>\n<polygon points=\"20,155,32,137\"></polygon>\n<polygon points=\"446,110,458,91\"></polygon>\n<polygon points=\"35,163,61,145\"></polygon>\n<polygon points=\"485,134,496,115\"></polygon>\n<polygon points=\"0,161,14,142\"></polygon>\n<polygon points=\"476,103,486,93\"></polygon>\n<polygon points=\"-3,150,10,138\"></polygon>\n</svg>`;\n\n\n/*\n  Note that re-exported types should be explicitly and separately exported\n  as types because of issues with parceljs\n\n  The error messages will be very perplexing\n\n  https://github.com/parcel-bundler/parcel/issues/4796\n  https://github.com/parcel-bundler/parcel/issues/4240\n  https://devblogs.microsoft.com/typescript/announcing-typescript-3-8/#type-only-imports-exports\n*/ const $81aaff24fb9cd9f7$export$a5a6e0b888b2c992 = {\n    debug: false,\n    perf: false\n};\nfunction $81aaff24fb9cd9f7$var$$5165f04a46b33615$export$b7d58db314e0ac27(obj) {\n    if (obj == null || typeof obj !== \"object\") return obj;\n    if (Array.isArray(obj)) return obj.map($81aaff24fb9cd9f7$var$$5165f04a46b33615$export$b7d58db314e0ac27);\n    const clone = {};\n    for(const key in obj){\n        const val = obj[key];\n        if (obj != null && typeof obj === \"object\") clone[key] = $81aaff24fb9cd9f7$var$$5165f04a46b33615$export$b7d58db314e0ac27(val);\n        else clone[key] = val;\n    }\n    return clone;\n}\nconst $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$c6592bbc1eebb717 = \"-xin-data\";\nconst $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$4c0223f67078aeac = `.${$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$c6592bbc1eebb717}`;\nconst $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$6a7099543a9795c7 = \"-xin-event\";\nconst $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$21d9322c3477441b = `.${$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$6a7099543a9795c7}`;\nconst $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$a3622eb3b5dd592a = Symbol(\"xin-path\");\nconst $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$bdd0d039ad781534 = Symbol(\"xin-value\");\nconst $81aaff24fb9cd9f7$export$40700dafb97c3799 = (x)=>{\n    return x[$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$a3622eb3b5dd592a];\n};\nfunction $81aaff24fb9cd9f7$export$5dcba2d45033d435(x) {\n    // eslint-disable-next-line\n    return typeof x === \"object\" && x !== null ? x[$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$bdd0d039ad781534] || x : x;\n}\nconst $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$fe712848e6e66613 = new WeakMap();\nconst $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$1f922de8d0ecbb7e = new WeakMap();\nconst $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$4cac8128ba61a55f = (element)=>{\n    return {\n        eventBindings: $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$fe712848e6e66613.get(element),\n        dataBindings: $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$1f922de8d0ecbb7e.get(element)\n    };\n};\nconst $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$fa8cc6a36b1ccd7f = (element)=>{\n    const cloned = element.cloneNode();\n    if (cloned instanceof HTMLElement) {\n        const dataBindings = $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$1f922de8d0ecbb7e.get(element);\n        const eventHandlers = $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$fe712848e6e66613.get(element);\n        if (dataBindings != null) $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$1f922de8d0ecbb7e.set(cloned, $81aaff24fb9cd9f7$var$$5165f04a46b33615$export$b7d58db314e0ac27(dataBindings));\n        if (eventHandlers != null) $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$fe712848e6e66613.set(cloned, $81aaff24fb9cd9f7$var$$5165f04a46b33615$export$b7d58db314e0ac27(eventHandlers));\n    }\n    for (const node of element instanceof HTMLTemplateElement ? element.content.childNodes : element.childNodes)if (node instanceof HTMLElement || node instanceof DocumentFragment) cloned.appendChild($81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$fa8cc6a36b1ccd7f(node));\n    else cloned.appendChild(node.cloneNode());\n    return cloned;\n};\nconst $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$86caed35dd837d06 = new WeakMap();\nconst $81aaff24fb9cd9f7$export$4c309843c07ce679 = (element)=>{\n    const html = document.body.parentElement;\n    while(element.parentElement != null && element.parentElement !== html){\n        const item = $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$86caed35dd837d06.get(element);\n        if (item != null) return item;\n        element = element.parentElement;\n    }\n    return false;\n};\nconst $81aaff24fb9cd9f7$export$253d09664e30b967 = Symbol(\"observer should be removed\");\nconst $81aaff24fb9cd9f7$var$$f0b099915f91bd21$export$58bed631278dbc67 = [] // { path_string_or_test, callback }\n;\nconst $81aaff24fb9cd9f7$var$$f0b099915f91bd21$var$touchedPaths = [];\nlet $81aaff24fb9cd9f7$var$$f0b099915f91bd21$var$updateTriggered = false;\nlet $81aaff24fb9cd9f7$var$$f0b099915f91bd21$var$updatePromise;\nlet $81aaff24fb9cd9f7$var$$f0b099915f91bd21$var$resolveUpdate;\nclass $81aaff24fb9cd9f7$var$$f0b099915f91bd21$export$c92b1d5f43586026 {\n    constructor(test, callback){\n        const callbackDescription = typeof callback === \"string\" ? `\"${callback}\"` : `function ${callback.name}`;\n        let testDescription;\n        if (typeof test === \"string\") {\n            this.test = (t)=>typeof t === \"string\" && t !== \"\" && (test.startsWith(t) || t.startsWith(test));\n            testDescription = `test = \"${test}\"`;\n        } else if (test instanceof RegExp) {\n            this.test = test.test.bind(test);\n            testDescription = `test = \"${test.toString()}\"`;\n        } else if (test instanceof Function) {\n            this.test = test;\n            testDescription = `test = function ${test.name}`;\n        } else throw new Error(\"expect listener test to be a string, RegExp, or test function\");\n        this.description = `${testDescription}, ${callbackDescription}`;\n        if (typeof callback === \"function\") this.callback = callback;\n        else throw new Error(\"expect callback to be a path or function\");\n        $81aaff24fb9cd9f7$var$$f0b099915f91bd21$export$58bed631278dbc67.push(this);\n    }\n}\nconst $81aaff24fb9cd9f7$var$$f0b099915f91bd21$export$1c2919332513559b = async ()=>{\n    if ($81aaff24fb9cd9f7$var$$f0b099915f91bd21$var$updatePromise === undefined) return;\n    await $81aaff24fb9cd9f7$var$$f0b099915f91bd21$var$updatePromise;\n};\nconst $81aaff24fb9cd9f7$var$$f0b099915f91bd21$var$update = ()=>{\n    if ($81aaff24fb9cd9f7$export$a5a6e0b888b2c992.perf) console.time(\"xin async update\");\n    const paths = [\n        ...$81aaff24fb9cd9f7$var$$f0b099915f91bd21$var$touchedPaths\n    ];\n    for (const path of paths)$81aaff24fb9cd9f7$var$$f0b099915f91bd21$export$58bed631278dbc67.filter((listener)=>{\n        let heard;\n        try {\n            heard = listener.test(path);\n        } catch (e) {\n            throw new Error(`Listener ${listener.description} threw \"${e}\" at \"${path}\"`);\n        }\n        if (heard === $81aaff24fb9cd9f7$export$253d09664e30b967) {\n            $81aaff24fb9cd9f7$export$23a2283368c55ea2(listener);\n            return false;\n        }\n        return heard;\n    }).forEach((listener)=>{\n        let outcome;\n        try {\n            outcome = listener.callback(path);\n        } catch (e) {\n            console.error(`Listener ${listener.description} threw \"${e}\" handling \"${path}\"`);\n        }\n        if (outcome === $81aaff24fb9cd9f7$export$253d09664e30b967) $81aaff24fb9cd9f7$export$23a2283368c55ea2(listener);\n    });\n    $81aaff24fb9cd9f7$var$$f0b099915f91bd21$var$touchedPaths.splice(0);\n    $81aaff24fb9cd9f7$var$$f0b099915f91bd21$var$updateTriggered = false;\n    if (typeof $81aaff24fb9cd9f7$var$$f0b099915f91bd21$var$resolveUpdate === \"function\") $81aaff24fb9cd9f7$var$$f0b099915f91bd21$var$resolveUpdate();\n    if ($81aaff24fb9cd9f7$export$a5a6e0b888b2c992.perf) console.timeEnd(\"xin async update\");\n};\nconst $81aaff24fb9cd9f7$export$d0b7ea69ab6056df = (touchable)=>{\n    const path = typeof touchable === \"string\" ? touchable : $81aaff24fb9cd9f7$export$40700dafb97c3799(touchable);\n    if (path === undefined) {\n        console.error(\"touch was called on an invalid target\", touchable);\n        throw new Error(\"touch was called on an invalid target\");\n    }\n    if ($81aaff24fb9cd9f7$var$$f0b099915f91bd21$var$updateTriggered === false) {\n        $81aaff24fb9cd9f7$var$$f0b099915f91bd21$var$updatePromise = new Promise((resolve)=>{\n            $81aaff24fb9cd9f7$var$$f0b099915f91bd21$var$resolveUpdate = resolve;\n        });\n        $81aaff24fb9cd9f7$var$$f0b099915f91bd21$var$updateTriggered = setTimeout($81aaff24fb9cd9f7$var$$f0b099915f91bd21$var$update);\n    }\n    if ($81aaff24fb9cd9f7$var$$f0b099915f91bd21$var$touchedPaths.find((touchedPath)=>path.startsWith(touchedPath)) == null) $81aaff24fb9cd9f7$var$$f0b099915f91bd21$var$touchedPaths.push(path);\n};\nconst $81aaff24fb9cd9f7$var$$f0b099915f91bd21$export$d1203567a167490e = (test, callback)=>{\n    return new $81aaff24fb9cd9f7$var$$f0b099915f91bd21$export$c92b1d5f43586026(test, callback);\n};\nconst $81aaff24fb9cd9f7$export$23a2283368c55ea2 = (listener)=>{\n    const index = $81aaff24fb9cd9f7$var$$f0b099915f91bd21$export$58bed631278dbc67.indexOf(listener);\n    if (index > -1) $81aaff24fb9cd9f7$var$$f0b099915f91bd21$export$58bed631278dbc67.splice(index, 1);\n    else throw new Error(\"unobserve failed, listener not found\");\n};\n// unique tokens passed to set by path to delete or create properties\nconst $81aaff24fb9cd9f7$var$$31366a4b885eb48b$var$stringify = (x)=>{\n    try {\n        return JSON.stringify(x);\n    } catch (_) {\n        return \"{has circular references}\";\n    }\n};\nconst $81aaff24fb9cd9f7$var$$31366a4b885eb48b$export$5a4bb2b1c89bdce7 = (...messages)=>new Error(messages.map($81aaff24fb9cd9f7$var$$31366a4b885eb48b$var$stringify).join(\" \"));\nconst $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$now36 = ()=>new Date(parseInt(\"1000000000\", 36) + Date.now()).valueOf().toString(36).slice(1);\nlet $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$_seq = 0;\nconst $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$seq = ()=>(parseInt(\"10000\", 36) + ++$81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$_seq).toString(36).slice(-5);\nconst $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$id = ()=>$81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$now36() + $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$seq();\nconst $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$_delete_ = {};\nconst $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$_newObject_ = {};\nfunction $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$export$f5d2dd4cfd729958(path) {\n    if (path === \"\") return [];\n    if (Array.isArray(path)) return path;\n    else {\n        const parts = [];\n        while(path.length > 0){\n            let index = path.search(/\\[[^\\]]+\\]/);\n            if (index === -1) {\n                parts.push(path.split(\".\"));\n                break;\n            } else {\n                const part = path.slice(0, index);\n                path = path.slice(index);\n                if (part !== \"\") parts.push(part.split(\".\"));\n                index = path.indexOf(\"]\") + 1;\n                parts.push(path.slice(1, index - 1));\n                // handle paths dereferencing array element like foo[0].id\n                if (path.slice(index, index + 1) === \".\") index += 1;\n                path = path.slice(index);\n            }\n        }\n        return parts;\n    }\n}\nconst $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$idPathMaps = new WeakMap();\nfunction $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$buildIdPathValueMap(array, idPath) {\n    if ($81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$idPathMaps.get(array) === undefined) $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$idPathMaps.set(array, {});\n    if ($81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$idPathMaps.get(array)[idPath] === undefined) $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$idPathMaps.get(array)[idPath] = {};\n    const map = $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$idPathMaps.get(array)[idPath];\n    if (idPath === \"_auto_\") array.forEach((item, idx)=>{\n        if (item._auto_ === undefined) item._auto_ = $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$id();\n        map[item._auto_ + \"\"] = idx;\n    });\n    else array.forEach((item, idx)=>{\n        map[$81aaff24fb9cd9f7$var$$c62be31ef05b0c90$export$44b5bed83342a92f(item, idPath) + \"\"] = idx;\n    });\n    return map;\n}\nfunction $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$getIdPathMap(array, idPath) {\n    if ($81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$idPathMaps.get(array) === undefined || $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$idPathMaps.get(array)[idPath] === undefined) return $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$buildIdPathValueMap(array, idPath);\n    else return $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$idPathMaps.get(array)[idPath];\n}\nfunction $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$keyToIndex(array, idPath, idValue) {\n    idValue = idValue + \"\";\n    let idx = $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$getIdPathMap(array, idPath)[idValue];\n    if (idx === undefined || $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$export$44b5bed83342a92f(array[idx], idPath) + \"\" !== idValue) idx = $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$buildIdPathValueMap(array, idPath)[idValue];\n    return idx;\n}\nfunction $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$byKey(obj, key, valueToInsert) {\n    if (obj[key] === undefined && valueToInsert !== undefined) obj[key] = valueToInsert;\n    return obj[key];\n}\nfunction $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$byIdPath(array, idPath, idValue, valueToInsert) {\n    let idx = idPath !== \"\" ? $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$keyToIndex(array, idPath, idValue) : idValue;\n    if (valueToInsert === $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$_delete_) {\n        array.splice(idx, 1);\n        $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$idPathMaps.delete(array);\n        return Symbol(\"deleted\");\n    } else if (valueToInsert === $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$_newObject_) {\n        if (idPath === \"\" && array[idx] === undefined) array[idx] = {};\n    } else if (valueToInsert !== undefined) {\n        if (idx !== undefined) array[idx] = valueToInsert;\n        else if (idPath !== \"\" && $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$export$44b5bed83342a92f(valueToInsert, idPath) + \"\" === idValue + \"\") {\n            array.push(valueToInsert);\n            idx = array.length - 1;\n        } else throw new Error(`byIdPath insert failed at [${idPath}=${idValue}]`);\n    }\n    return array[idx];\n}\nfunction $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$expectArray(obj) {\n    if (!Array.isArray(obj)) throw $81aaff24fb9cd9f7$var$$31366a4b885eb48b$export$5a4bb2b1c89bdce7(\"setByPath failed: expected array, found\", obj);\n}\nfunction $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$expectObject(obj) {\n    if (obj == null || !(obj instanceof Object)) throw $81aaff24fb9cd9f7$var$$31366a4b885eb48b$export$5a4bb2b1c89bdce7(\"setByPath failed: expected Object, found\", obj);\n}\nfunction $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$export$44b5bed83342a92f(obj, path) {\n    const parts = $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$export$f5d2dd4cfd729958(path);\n    let found = obj;\n    let i, iMax, j, jMax;\n    for(i = 0, iMax = parts.length; found !== undefined && i < iMax; i++){\n        const part = parts[i];\n        if (Array.isArray(part)) for(j = 0, jMax = part.length; found !== undefined && j < jMax; j++){\n            const key = part[j];\n            found = found[key];\n        }\n        else {\n            if (found.length === 0) {\n                // @ts-expect-error-error\n                found = found[part.slice(1)];\n                if (part[0] !== \"=\") return undefined;\n            } else if (part.includes(\"=\")) {\n                const [idPath, ...tail] = part.split(\"=\");\n                found = $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$byIdPath(found, idPath, tail.join(\"=\"));\n            } else {\n                j = parseInt(part, 10);\n                found = found[j];\n            }\n        }\n    }\n    return found;\n}\nfunction $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$export$f65a19d15516795e(orig, path, val) {\n    let obj = orig;\n    const parts = $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$export$f5d2dd4cfd729958(path);\n    while(obj != null && parts.length > 0){\n        const part = parts.shift();\n        if (typeof part === \"string\") {\n            const equalsOffset = part.indexOf(\"=\");\n            if (equalsOffset > -1) {\n                if (equalsOffset === 0) $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$expectObject(obj);\n                else $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$expectArray(obj);\n                const idPath = part.slice(0, equalsOffset);\n                const idValue = part.slice(equalsOffset + 1);\n                obj = $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$byIdPath(obj, idPath, idValue, parts.length > 0 ? $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$_newObject_ : val);\n                if (parts.length === 0) return true;\n            } else {\n                $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$expectArray(obj);\n                const idx = parseInt(part, 10);\n                if (parts.length > 0) obj = obj[idx];\n                else {\n                    if (val !== $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$_delete_) {\n                        if (obj[idx] === val) return false;\n                        obj[idx] = val;\n                    } else obj.splice(idx, 1);\n                    return true;\n                }\n            }\n        } else if (Array.isArray(part) && part.length > 0) {\n            $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$expectObject(obj);\n            while(part.length > 0){\n                const key = part.shift();\n                if (part.length > 0 || parts.length > 0) obj = $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$byKey(obj, key, part.length > 0 ? {} : []);\n                else {\n                    if (val !== $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$_delete_) {\n                        if (obj[key] === val) return false;\n                        obj[key] = val;\n                    } else {\n                        if (!Object.prototype.hasOwnProperty.call(obj, key)) return false;\n                        // eslint-disable-next-line\n                        delete obj[key];\n                    }\n                    return true;\n                }\n            }\n        } else throw new Error(`setByPath failed, bad path ${path}`);\n    }\n    // eslint-disable-next-line\n    throw new Error(`setByPath(${orig}, ${path}, ${val}) failed`);\n}\nfunction $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$export$102e532907108dad(orig, path) {\n    if ($81aaff24fb9cd9f7$var$$c62be31ef05b0c90$export$44b5bed83342a92f(orig, path) !== null) $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$export$f65a19d15516795e(orig, path, $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$_delete_);\n}\n// list of Array functions that change the array\nconst $81aaff24fb9cd9f7$var$$547f11326d897190$var$ARRAY_MUTATIONS = [\n    \"sort\",\n    \"splice\",\n    \"copyWithin\",\n    \"fill\",\n    \"pop\",\n    \"push\",\n    \"reverse\",\n    \"shift\",\n    \"unshift\"\n];\nconst $81aaff24fb9cd9f7$var$$547f11326d897190$var$registry = {};\nconst $81aaff24fb9cd9f7$var$$547f11326d897190$var$debugPaths = true;\nconst $81aaff24fb9cd9f7$var$$547f11326d897190$var$validPath = /^\\.?([^.[\\](),])+(\\.[^.[\\](),]+|\\[\\d+\\]|\\[[^=[\\](),]*=[^[\\]()]+\\])*$/;\nconst $81aaff24fb9cd9f7$var$$547f11326d897190$export$a678af82bf766611 = (path)=>$81aaff24fb9cd9f7$var$$547f11326d897190$var$validPath.test(path);\nconst $81aaff24fb9cd9f7$var$$547f11326d897190$var$extendPath = (path = \"\", prop = \"\")=>{\n    if (path === \"\") return prop;\n    else {\n        if (prop.match(/^\\d+$/) !== null || prop.includes(\"=\")) return `${path}[${prop}]`;\n        else return `${path}.${prop}`;\n    }\n};\nconst $81aaff24fb9cd9f7$var$$547f11326d897190$var$regHandler = (path = \"\")=>({\n        // TODO figure out how to correctly return array[Symbol.iterator] so that for(const foo of xin.foos) works\n        // as you'd expect\n        get (target, _prop) {\n            if (_prop === $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$a3622eb3b5dd592a) return path;\n            else if (_prop === $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$bdd0d039ad781534) return target;\n            if (typeof _prop === \"symbol\") return target[_prop];\n            let prop = _prop;\n            const compoundProp = prop.match(/^([^.[]+)\\.(.+)$/) ?? // basePath.subPath (omit '.')\n            prop.match(/^([^\\]]+)(\\[.+)/) ?? // basePath[subPath\n            prop.match(/^(\\[[^\\]]+\\])\\.(.+)$/) ?? // [basePath].subPath (omit '.')\n            prop.match(/^(\\[[^\\]]+\\])\\[(.+)$/) // [basePath][subPath\n            ;\n            if (compoundProp !== null) {\n                const [, basePath, subPath] = compoundProp;\n                const currentPath = $81aaff24fb9cd9f7$var$$547f11326d897190$var$extendPath(path, basePath);\n                const value = $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$export$44b5bed83342a92f(target, basePath);\n                return value !== null && typeof value === \"object\" ? new Proxy(value, $81aaff24fb9cd9f7$var$$547f11326d897190$var$regHandler(currentPath))[subPath] : value;\n            }\n            if (prop.startsWith(\"[\") && prop.endsWith(\"]\")) prop = prop.substring(1, prop.length - 1);\n            if (!Array.isArray(target) && target[prop] !== undefined || Array.isArray(target) && prop.includes(\"=\")) {\n                let value;\n                if (prop.includes(\"=\")) {\n                    const [idPath, needle] = prop.split(\"=\");\n                    value = target.find((candidate)=>`${$81aaff24fb9cd9f7$var$$c62be31ef05b0c90$export$44b5bed83342a92f(candidate, idPath)}` === needle);\n                } else value = target[prop];\n                if (value !== null && typeof value === \"object\") {\n                    const currentPath = $81aaff24fb9cd9f7$var$$547f11326d897190$var$extendPath(path, prop);\n                    return new Proxy(value, $81aaff24fb9cd9f7$var$$547f11326d897190$var$regHandler(currentPath));\n                } else if (typeof value === \"function\") return value.bind(target);\n                else return value;\n            } else if (Array.isArray(target)) {\n                const value = target[prop];\n                return typeof value === \"function\" ? (...items)=>{\n                    // @ts-expect-error\n                    const result = Array.prototype[prop].apply(target, items);\n                    if ($81aaff24fb9cd9f7$var$$547f11326d897190$var$ARRAY_MUTATIONS.includes(prop)) $81aaff24fb9cd9f7$export$d0b7ea69ab6056df(path);\n                    return result;\n                } : typeof value === \"object\" ? new Proxy(value, $81aaff24fb9cd9f7$var$$547f11326d897190$var$regHandler($81aaff24fb9cd9f7$var$$547f11326d897190$var$extendPath(path, prop))) : value;\n            } else return target[prop];\n        },\n        set (_, prop, value) {\n            // eslint-disable-next-line\n            if (value != null && value[$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$a3622eb3b5dd592a]) value = value[$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$bdd0d039ad781534];\n            const fullPath = $81aaff24fb9cd9f7$var$$547f11326d897190$var$extendPath(path, prop);\n            if ($81aaff24fb9cd9f7$var$$547f11326d897190$var$debugPaths && !$81aaff24fb9cd9f7$var$$547f11326d897190$export$a678af82bf766611(fullPath)) throw new Error(`setting invalid path ${fullPath}`);\n            let existing = $81aaff24fb9cd9f7$export$966034e6c6823eb0[fullPath];\n            // eslint-disable-next-line\n            if (existing != null && existing[$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$bdd0d039ad781534] != null) existing = existing[$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$bdd0d039ad781534];\n            if (existing !== value && $81aaff24fb9cd9f7$var$$c62be31ef05b0c90$export$f65a19d15516795e($81aaff24fb9cd9f7$var$$547f11326d897190$var$registry, fullPath, value)) $81aaff24fb9cd9f7$export$d0b7ea69ab6056df(fullPath);\n            return true;\n        }\n    });\nconst $81aaff24fb9cd9f7$export$d1203567a167490e = (test, callback)=>{\n    const func = typeof callback === \"function\" ? callback : $81aaff24fb9cd9f7$export$966034e6c6823eb0[callback];\n    if (typeof func !== \"function\") throw new Error(`observe expects a function or path to a function, ${callback} is neither`);\n    return $81aaff24fb9cd9f7$var$$f0b099915f91bd21$export$d1203567a167490e(test, func);\n};\nconst $81aaff24fb9cd9f7$export$966034e6c6823eb0 = new Proxy($81aaff24fb9cd9f7$var$$547f11326d897190$var$registry, $81aaff24fb9cd9f7$var$$547f11326d897190$var$regHandler());\nconst { document: $81aaff24fb9cd9f7$var$$b5796eaeba5c782e$var$document, MutationObserver: $81aaff24fb9cd9f7$var$$b5796eaeba5c782e$var$MutationObserver } = globalThis;\nconst $81aaff24fb9cd9f7$var$$b5796eaeba5c782e$export$80bf2f765c31be6a = (element, changedPath)=>{\n    const dataBindings = $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$1f922de8d0ecbb7e.get(element);\n    for (const dataBinding of dataBindings){\n        let { path: path, binding: binding, options: options } = dataBinding;\n        const { toDOM: toDOM } = binding;\n        if (toDOM != null) {\n            if (path.startsWith(\"^\")) {\n                const dataSource = $81aaff24fb9cd9f7$export$4c309843c07ce679(element);\n                if (dataSource != null && dataSource[$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$a3622eb3b5dd592a] != null) path = dataBinding.path = `${dataSource[$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$a3622eb3b5dd592a]}${path.substring(1)}`;\n                else {\n                    console.error(`Cannot resolve relative binding ${path}`, element, \"is not part of a list\");\n                    throw new Error(`Cannot resolve relative binding ${path}`);\n                }\n            }\n            if (changedPath == null || path.startsWith(changedPath)) toDOM(element, $81aaff24fb9cd9f7$export$966034e6c6823eb0[path], options);\n        }\n    }\n};\n// this is just to allow bind to be testable in node\nif ($81aaff24fb9cd9f7$var$$b5796eaeba5c782e$var$MutationObserver != null) {\n    const observer = new $81aaff24fb9cd9f7$var$$b5796eaeba5c782e$var$MutationObserver((mutationsList)=>{\n        mutationsList.forEach((mutation)=>{\n            [\n                ...mutation.addedNodes\n            ].forEach((node)=>{\n                if (node instanceof HTMLElement) [\n                    ...node.querySelectorAll($81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$4c0223f67078aeac)\n                ].forEach((element)=>$81aaff24fb9cd9f7$var$$b5796eaeba5c782e$export$80bf2f765c31be6a(element));\n            });\n        });\n    });\n    observer.observe($81aaff24fb9cd9f7$var$$b5796eaeba5c782e$var$document.body, {\n        subtree: true,\n        childList: true\n    });\n}\n$81aaff24fb9cd9f7$export$d1203567a167490e(()=>true, (changedPath)=>{\n    const boundElements = $81aaff24fb9cd9f7$var$$b5796eaeba5c782e$var$document.querySelectorAll($81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$4c0223f67078aeac);\n    for (const element of boundElements)$81aaff24fb9cd9f7$var$$b5796eaeba5c782e$export$80bf2f765c31be6a(element, changedPath);\n});\nconst $81aaff24fb9cd9f7$var$$b5796eaeba5c782e$var$handleChange = (event)=>{\n    // @ts-expect-error-error\n    let target = event.target.closest($81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$4c0223f67078aeac);\n    while(target != null){\n        const dataBindings = $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$1f922de8d0ecbb7e.get(target);\n        for (const dataBinding of dataBindings){\n            const { binding: binding, path: path } = dataBinding;\n            const { fromDOM: fromDOM } = binding;\n            if (fromDOM != null) {\n                let value;\n                try {\n                    value = fromDOM(target, dataBinding.options);\n                } catch (e) {\n                    console.error(\"Cannot get value from\", target, \"via\", dataBinding);\n                    throw new Error(\"Cannot obtain value fromDOM\");\n                }\n                if (value != null) {\n                    const existing = $81aaff24fb9cd9f7$export$966034e6c6823eb0[path];\n                    // eslint-disable-next-line\n                    if (existing == null) $81aaff24fb9cd9f7$export$966034e6c6823eb0[path] = value;\n                    else {\n                        // @ts-expect-error-error\n                        const existingActual = existing[$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$a3622eb3b5dd592a] != null ? existing[$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$bdd0d039ad781534] : existing;\n                        const valueActual = value[$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$a3622eb3b5dd592a] != null ? value[$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$bdd0d039ad781534] : value;\n                        if (existingActual !== valueActual) $81aaff24fb9cd9f7$export$966034e6c6823eb0[path] = valueActual;\n                    }\n                }\n            }\n        }\n        target = target.parentElement.closest($81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$4c0223f67078aeac);\n    }\n};\nif (globalThis.document != null) {\n    $81aaff24fb9cd9f7$var$$b5796eaeba5c782e$var$document.body.addEventListener(\"change\", $81aaff24fb9cd9f7$var$$b5796eaeba5c782e$var$handleChange, true);\n    $81aaff24fb9cd9f7$var$$b5796eaeba5c782e$var$document.body.addEventListener(\"input\", $81aaff24fb9cd9f7$var$$b5796eaeba5c782e$var$handleChange, true);\n}\nfunction $81aaff24fb9cd9f7$export$2385a24977818dd0(element, what, binding, options) {\n    if (element instanceof DocumentFragment) throw new Error(\"bind cannot bind to a DocumentFragment\");\n    let path;\n    if (typeof what === \"object\" && what[$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$a3622eb3b5dd592a] === undefined && options === undefined) {\n        const { value: value } = what;\n        path = typeof value === \"string\" ? value : value[$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$a3622eb3b5dd592a];\n        options = what;\n        delete options.value;\n    } else path = typeof what === \"string\" ? what : what[$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$a3622eb3b5dd592a];\n    if (path == null) throw new Error(\"bind requires a path or object with xin Proxy\");\n    const { toDOM: toDOM } = binding;\n    element.classList.add($81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$c6592bbc1eebb717);\n    let dataBindings = $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$1f922de8d0ecbb7e.get(element);\n    if (dataBindings == null) {\n        dataBindings = [];\n        $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$1f922de8d0ecbb7e.set(element, dataBindings);\n    }\n    dataBindings.push({\n        path: path,\n        binding: binding,\n        options: options\n    });\n    if (toDOM != null && !path.startsWith(\"^\")) $81aaff24fb9cd9f7$export$d0b7ea69ab6056df(path);\n    return element;\n}\nconst $81aaff24fb9cd9f7$var$$b5796eaeba5c782e$var$handledEventTypes = new Set();\nconst $81aaff24fb9cd9f7$var$$b5796eaeba5c782e$var$handleBoundEvent = (event)=>{\n    // @ts-expect-error-error\n    let target = event?.target.closest($81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$21d9322c3477441b);\n    let propagationStopped = false;\n    const wrappedEvent = new Proxy(event, {\n        get (target, prop) {\n            if (prop === \"stopPropagation\") return ()=>{\n                event.stopPropagation();\n                propagationStopped = true;\n            };\n            else {\n                // @ts-expect-error-error\n                const value = target[prop];\n                return typeof value === \"function\" ? value.bind(target) : value;\n            }\n        }\n    });\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while(!propagationStopped && target != null){\n        const eventBindings = $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$fe712848e6e66613.get(target);\n        // eslint-disable-next-line\n        const handlers = eventBindings[event.type] || [];\n        for (const handler of handlers){\n            if (typeof handler === \"function\") handler(wrappedEvent);\n            else {\n                const func = $81aaff24fb9cd9f7$export$966034e6c6823eb0[handler];\n                if (typeof func === \"function\") func(wrappedEvent);\n                else throw new Error(`no event handler found at path ${handler}`);\n            }\n            if (propagationStopped) continue;\n        }\n        target = target.parentElement != null ? target.parentElement.closest($81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$21d9322c3477441b) : null;\n    }\n};\nconst $81aaff24fb9cd9f7$export$af631764ddc44097 = (element, eventType, eventHandler)=>{\n    let eventBindings = $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$fe712848e6e66613.get(element);\n    element.classList.add($81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$6a7099543a9795c7);\n    if (eventBindings == null) {\n        eventBindings = {};\n        $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$fe712848e6e66613.set(element, eventBindings);\n    }\n    // eslint-disable-next-line\n    if (!eventBindings[eventType]) eventBindings[eventType] = [];\n    if (!eventBindings[eventType].includes(eventHandler)) eventBindings[eventType].push(eventHandler);\n    if (!$81aaff24fb9cd9f7$var$$b5796eaeba5c782e$var$handledEventTypes.has(eventType)) {\n        $81aaff24fb9cd9f7$var$$b5796eaeba5c782e$var$handledEventTypes.add(eventType);\n        $81aaff24fb9cd9f7$var$$b5796eaeba5c782e$var$document.body.addEventListener(eventType, $81aaff24fb9cd9f7$var$$b5796eaeba5c782e$var$handleBoundEvent, true);\n    }\n};\nconst $81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$export$635e15bbd66f01ea = (target, type)=>{\n    const event = new Event(type);\n    target.dispatchEvent(event);\n};\nconst $81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$var$valueType = (element)=>{\n    if (element instanceof HTMLInputElement) return element.type;\n    else if (element instanceof HTMLSelectElement && element.hasAttribute(\"multiple\")) return \"multi-select\";\n    else return \"other\";\n};\nconst $81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$export$80746c6bc6142fc8 = (element, newValue)=>{\n    switch($81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$var$valueType(element)){\n        case \"radio\":\n            // @ts-expect-error\n            element.checked = element.value === newValue;\n            break;\n        case \"checkbox\":\n            // @ts-expect-error\n            element.checked = newValue;\n            break;\n        case \"date\":\n            // @ts-expect-error\n            element.valueAsDate = new Date(newValue);\n            break;\n        case \"multi-select\":\n            for (const option of [\n                ...element.querySelectorAll(\"option\")\n            ])option.selected = newValue[option.value];\n            break;\n        default:\n            // @ts-expect-error\n            element.value = newValue;\n    }\n};\nconst $81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$export$bf7199a9ebcb84a9 = (element)=>{\n    switch($81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$var$valueType(element)){\n        case \"radio\":\n            {\n                const radio = element.parentElement?.querySelector(`[name=\"${element.name}\"]:checked`);\n                return radio != null ? radio.value : null;\n            }\n        case \"checkbox\":\n            // @ts-expect-error\n            return element.checked;\n        case \"date\":\n            // @ts-expect-error\n            return element.valueAsDate.toISOString();\n        case \"multi-select\":\n            return [\n                ...element.querySelectorAll(\"option\")\n            ].reduce((map, option)=>{\n                map[option.value] = option.selected;\n                return map;\n            }, {});\n        default:\n            return element.value;\n    }\n};\n/* global ResizeObserver */ const { ResizeObserver: $81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$var$ResizeObserver } = globalThis;\nconst $81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$export$b13421f1ae71d316 = $81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$var$ResizeObserver != null ? new $81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$var$ResizeObserver((entries)=>{\n    for (const entry of entries){\n        const element = entry.target;\n        $81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$export$635e15bbd66f01ea(element, \"resize\");\n    }\n}) : {\n    observe () {},\n    unobserve () {}\n};\nfunction $81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$var$convertToXinSlot(slot) {\n    const xinSlot = document.createElement(\"xin-slot\");\n    if (slot.name !== \"\") xinSlot.setAttribute(\"name\", slot.name);\n    slot.replaceWith(xinSlot);\n}\nconst $81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$export$6bb13967611cdb1 = (elt, content)=>{\n    let isSlotted = false;\n    if (elt != null && content != null) {\n        if (typeof content === \"string\") elt.textContent = content;\n        else if (Array.isArray(content)) content.forEach((node)=>{\n            elt.append(node instanceof Node ? $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$fa8cc6a36b1ccd7f(node) : node);\n            if (node instanceof Node && node.querySelector(\"slot\") != null) isSlotted = true;\n        });\n        else if (content instanceof HTMLElement || content instanceof DocumentFragment) {\n            const slots = [\n                ...content.querySelectorAll(\"slot\")\n            ];\n            if (slots.length > 0) {\n                isSlotted = true;\n                slots.forEach($81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$var$convertToXinSlot);\n            }\n            elt.append($81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$fa8cc6a36b1ccd7f(content));\n        } else throw new Error(\"expect text content or document node\");\n    }\n    return isSlotted;\n};\nconst $81aaff24fb9cd9f7$export$61fc7d43ac8f84b0 = (origFn, minInterval = 250)=>{\n    let debounceId;\n    return (...args)=>{\n        if (debounceId !== undefined) clearTimeout(debounceId);\n        debounceId = setTimeout(()=>{\n            origFn(...args);\n        }, minInterval);\n    };\n};\nconst $81aaff24fb9cd9f7$export$de363e709c412c8a = (origFn, minInterval = 250)=>{\n    let debounceId;\n    let previousCall = Date.now() - minInterval;\n    let inFlight = false;\n    return (...args)=>{\n        clearTimeout(debounceId);\n        debounceId = setTimeout(async ()=>{\n            origFn(...args);\n            previousCall = Date.now();\n        }, minInterval);\n        if (!inFlight && Date.now() - previousCall >= minInterval) {\n            inFlight = true;\n            try {\n                origFn(...args);\n                previousCall = Date.now();\n            } finally{\n                inFlight = false;\n            }\n        }\n    };\n};\nconst $81aaff24fb9cd9f7$var$$ea2c6a36710de0a8$var$listBindingRef = Symbol(\"list-binding\");\nconst $81aaff24fb9cd9f7$var$$ea2c6a36710de0a8$var$SLICE_INTERVAL_MS = 16 // 60fps\n;\nfunction $81aaff24fb9cd9f7$var$$ea2c6a36710de0a8$var$updateRelativeBindings(element, path) {\n    const boundElements = [\n        ...element.querySelectorAll($81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$4c0223f67078aeac)\n    ];\n    if (element.matches($81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$4c0223f67078aeac)) boundElements.unshift(element);\n    for (const boundElement of boundElements){\n        const bindings = $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$1f922de8d0ecbb7e.get(boundElement);\n        for (const binding of bindings){\n            if (binding.path.startsWith(\"^\")) binding.path = `${path}${binding.path.substring(1)}`;\n            if (binding.binding.toDOM != null) binding.binding.toDOM(boundElement, $81aaff24fb9cd9f7$export$966034e6c6823eb0[binding.path]);\n        }\n    }\n}\nclass $81aaff24fb9cd9f7$var$$ea2c6a36710de0a8$var$ListBinding {\n    _array = [];\n    constructor(boundElement, options = {}){\n        this.boundElement = boundElement;\n        this.itemToElement = new WeakMap();\n        if (boundElement.children.length !== 1) throw new Error(\"ListBinding expects an element with exactly one child element\");\n        if (boundElement.children[0] instanceof HTMLTemplateElement) {\n            const template = boundElement.children[0];\n            if (template.content.children.length !== 1) throw new Error(\"ListBinding expects a template with exactly one child element\");\n            this.template = $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$fa8cc6a36b1ccd7f(template.content.children[0]);\n        } else {\n            this.template = boundElement.children[0];\n            this.template.remove();\n        }\n        this.listTop = document.createElement(\"div\");\n        this.listBottom = document.createElement(\"div\");\n        this.boundElement.append(this.listTop);\n        this.boundElement.append(this.listBottom);\n        this.options = options;\n        if (options.virtual != null) {\n            $81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$export$b13421f1ae71d316.observe(this.boundElement);\n            this._update = $81aaff24fb9cd9f7$export$de363e709c412c8a(()=>{\n                this.update(this._array, true);\n            }, $81aaff24fb9cd9f7$var$$ea2c6a36710de0a8$var$SLICE_INTERVAL_MS);\n            this.boundElement.addEventListener(\"scroll\", this._update);\n            this.boundElement.addEventListener(\"resize\", this._update);\n        }\n    }\n    visibleSlice() {\n        const { virtual: virtual, hiddenProp: hiddenProp, visibleProp: visibleProp } = this.options;\n        let visibleArray = this._array;\n        if (hiddenProp !== undefined) visibleArray = visibleArray.filter((item)=>item[hiddenProp] !== true);\n        if (visibleProp !== undefined) visibleArray = visibleArray.filter((item)=>item[visibleProp] === true);\n        let firstItem = 0;\n        let lastItem = visibleArray.length - 1;\n        let topBuffer = 0;\n        let bottomBuffer = 0;\n        if (virtual != null) {\n            const width = this.boundElement.offsetWidth;\n            const height = this.boundElement.offsetHeight;\n            const visibleColumns = virtual.width != null ? Math.max(1, Math.floor(width / virtual.width)) : 1;\n            const visibleRows = Math.ceil(height / virtual.height) + 1;\n            const totalRows = Math.ceil(visibleArray.length / visibleColumns);\n            const visibleItems = visibleColumns * visibleRows;\n            let topRow = Math.floor(this.boundElement.scrollTop / virtual.height);\n            if (topRow > totalRows - visibleRows + 1) topRow = Math.max(0, totalRows - visibleRows + 1);\n            firstItem = topRow * visibleColumns;\n            lastItem = firstItem + visibleItems - 1;\n            topBuffer = topRow * virtual.height;\n            bottomBuffer = Math.max(totalRows * virtual.height - height - topBuffer, 0);\n        }\n        return {\n            items: visibleArray,\n            firstItem: firstItem,\n            lastItem: lastItem,\n            topBuffer: topBuffer,\n            bottomBuffer: bottomBuffer\n        };\n    }\n    update(array, isSlice) {\n        if (array == null) array = [];\n        this._array = array;\n        const { initInstance: initInstance, updateInstance: updateInstance, hiddenProp: hiddenProp, visibleProp: visibleProp } = this.options;\n        // @ts-expect-error\n        const arrayPath = $81aaff24fb9cd9f7$export$40700dafb97c3799(array);\n        const slice = this.visibleSlice();\n        this.boundElement.classList.toggle(\"-xin-empty-list\", slice.items.length === 0);\n        const previousSlice = this._previousSlice;\n        const { firstItem: firstItem, lastItem: lastItem, topBuffer: topBuffer, bottomBuffer: bottomBuffer } = slice;\n        if (hiddenProp === undefined && visibleProp === undefined && isSlice === true && previousSlice != null && firstItem === previousSlice.firstItem && lastItem === previousSlice.lastItem) return;\n        this._previousSlice = slice;\n        let removed = 0;\n        let moved = 0;\n        let created = 0;\n        for (const element of [\n            ...this.boundElement.children\n        ]){\n            if (element === this.listTop || element === this.listBottom) continue;\n            const proxy = $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$86caed35dd837d06.get(element);\n            if (proxy == null) element.remove();\n            else {\n                const idx = slice.items.indexOf(proxy);\n                if (idx < firstItem || idx > lastItem) {\n                    element.remove();\n                    this.itemToElement.delete(proxy);\n                    $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$86caed35dd837d06.delete(element);\n                    removed++;\n                }\n            }\n        }\n        this.listTop.style.height = String(topBuffer) + \"px\";\n        this.listBottom.style.height = String(bottomBuffer) + \"px\";\n        // build a complete new set of elements in the right order\n        const elements = [];\n        const { idPath: idPath } = this.options;\n        for(let i = firstItem; i <= lastItem; i++){\n            const item = slice.items[i];\n            if (item === undefined) continue;\n            let element = this.itemToElement.get($81aaff24fb9cd9f7$export$5dcba2d45033d435(item));\n            if (element == null) {\n                created++;\n                element = $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$fa8cc6a36b1ccd7f(this.template);\n                if (typeof item === \"object\") {\n                    this.itemToElement.set($81aaff24fb9cd9f7$export$5dcba2d45033d435(item), element);\n                    $81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$86caed35dd837d06.set(element, $81aaff24fb9cd9f7$export$5dcba2d45033d435(item));\n                }\n                this.boundElement.insertBefore(element, this.listBottom);\n                if (idPath != null) {\n                    const idValue = item[idPath];\n                    const itemPath = `${arrayPath}[${idPath}=${idValue}]`;\n                    $81aaff24fb9cd9f7$var$$ea2c6a36710de0a8$var$updateRelativeBindings(element, itemPath);\n                } else {\n                    const itemPath = `${arrayPath}[${i}]`;\n                    $81aaff24fb9cd9f7$var$$ea2c6a36710de0a8$var$updateRelativeBindings(element, itemPath);\n                }\n                if (initInstance != null) initInstance(element, item);\n            }\n            if (updateInstance != null) updateInstance(element, item);\n            elements.push(element);\n        }\n        // make sure all the elements are in the DOM and in the correct location\n        let insertionPoint = null;\n        for (const element of elements){\n            if (element.previousElementSibling !== insertionPoint) {\n                moved++;\n                if (insertionPoint?.nextElementSibling != null) this.boundElement.insertBefore(element, insertionPoint.nextElementSibling);\n                else this.boundElement.insertBefore(element, this.listBottom);\n            }\n            insertionPoint = element;\n        }\n        if ($81aaff24fb9cd9f7$export$a5a6e0b888b2c992.perf) console.log(arrayPath, \"updated\", {\n            removed: removed,\n            created: created,\n            moved: moved\n        });\n    }\n}\nconst $81aaff24fb9cd9f7$var$$ea2c6a36710de0a8$export$b0eb386be3b9fed8 = (boundElement, options)=>{\n    let listBinding = boundElement[$81aaff24fb9cd9f7$var$$ea2c6a36710de0a8$var$listBindingRef];\n    if (listBinding == null) {\n        listBinding = new $81aaff24fb9cd9f7$var$$ea2c6a36710de0a8$var$ListBinding(boundElement, options);\n        boundElement[$81aaff24fb9cd9f7$var$$ea2c6a36710de0a8$var$listBindingRef] = listBinding;\n    }\n    return listBinding;\n};\nconst $81aaff24fb9cd9f7$export$97a1a3e6f39778d2 = {\n    value: {\n        toDOM (element, value) {\n            $81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$export$80746c6bc6142fc8(element, value);\n        },\n        fromDOM (element) {\n            return $81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$export$bf7199a9ebcb84a9(element);\n        }\n    },\n    text: {\n        toDOM (element, value) {\n            element.textContent = value;\n        }\n    },\n    enabled: {\n        toDOM (element, value) {\n            // eslint-disable-next-line\n            element.disabled = !value;\n        }\n    },\n    disabled: {\n        toDOM (element, value) {\n            element.disabled = Boolean(value);\n        }\n    },\n    style: {\n        toDOM (element, value) {\n            if (typeof value === \"object\") for (const prop of Object.keys(value))element.style[prop] = value[prop];\n            else if (typeof value === \"string\") element.setAttribute(\"style\", value);\n            else throw new Error(\"style binding expects either a string or object\");\n        }\n    },\n    list: {\n        toDOM (element, value, options) {\n            const listBinding = $81aaff24fb9cd9f7$var$$ea2c6a36710de0a8$export$b0eb386be3b9fed8(element, options);\n            listBinding.update(value);\n        }\n    }\n};\n/*\n# more-math\n\nSome simple functions egregiously missing from `Math`\n*/ const $81aaff24fb9cd9f7$var$$0e50e8a626908591$export$ba6bc6c220358ed9 = 180 / Math.PI;\nconst $81aaff24fb9cd9f7$var$$0e50e8a626908591$export$1518e1a62333c8a4 = Math.PI / 180;\nfunction $81aaff24fb9cd9f7$var$$0e50e8a626908591$export$7d15b64cf5a3a4c4(min, v, max) {\n    return v < min ? min : v > max ? max : v;\n}\nfunction $81aaff24fb9cd9f7$var$$0e50e8a626908591$export$3a89f8d6f6bf6c9f(a, b, t) {\n    t = $81aaff24fb9cd9f7$var$$0e50e8a626908591$export$7d15b64cf5a3a4c4(0, t, 1);\n    return t * (b - a) + a;\n}\nconst $81aaff24fb9cd9f7$export$5e0dd9fd5d74e0c5 = {\n    clamp: $81aaff24fb9cd9f7$var$$0e50e8a626908591$export$7d15b64cf5a3a4c4,\n    lerp: $81aaff24fb9cd9f7$var$$0e50e8a626908591$export$3a89f8d6f6bf6c9f\n};\nconst $81aaff24fb9cd9f7$var$$72989831e95a2bab$var$hex2 = (n)=>(\"00\" + Math.round(Number(n)).toString(16)).slice(-2);\nclass $81aaff24fb9cd9f7$var$$72989831e95a2bab$var$HslColor {\n    constructor(r, g, b){\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        const l = Math.max(r, g, b);\n        const s = l - Math.min(r, g, b);\n        const h = s !== 0 ? l === r ? (g - b) / s : l === g ? 2 + (b - r) / s : 4 + (r - g) / s : 0;\n        this.h = 60 * h < 0 ? 60 * h + 360 : 60 * h;\n        this.s = s !== 0 ? l <= 0.5 ? s / (2 * l - s) : s / (2 - (2 * l - s)) : 0;\n        this.l = (2 * l - s) / 2;\n    }\n}\nconst $81aaff24fb9cd9f7$var$$72989831e95a2bab$var$span = globalThis.document !== undefined ? globalThis.document.createElement(\"span\") : undefined;\nclass $81aaff24fb9cd9f7$export$892596cec99bc70e {\n    static fromCss(spec) {\n        let converted = spec;\n        if ($81aaff24fb9cd9f7$var$$72989831e95a2bab$var$span instanceof HTMLSpanElement) {\n            $81aaff24fb9cd9f7$var$$72989831e95a2bab$var$span.style.color = spec;\n            document.body.appendChild($81aaff24fb9cd9f7$var$$72989831e95a2bab$var$span);\n            converted = getComputedStyle($81aaff24fb9cd9f7$var$$72989831e95a2bab$var$span).color;\n            $81aaff24fb9cd9f7$var$$72989831e95a2bab$var$span.remove();\n        }\n        const [r, g, b, a] = converted.match(/[\\d.]+/g);\n        return new $81aaff24fb9cd9f7$export$892596cec99bc70e(Number(r), Number(g), Number(b), a == null ? 1 : Number(a));\n    }\n    static fromHsl(h, s, l, a = 1) {\n        return $81aaff24fb9cd9f7$export$892596cec99bc70e.fromCss(`hsla(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%, ${a.toFixed(2)})`);\n    }\n    constructor(r, g, b, a = 1){\n        this.r = $81aaff24fb9cd9f7$var$$0e50e8a626908591$export$7d15b64cf5a3a4c4(0, r, 255);\n        this.g = $81aaff24fb9cd9f7$var$$0e50e8a626908591$export$7d15b64cf5a3a4c4(0, g, 255);\n        this.b = $81aaff24fb9cd9f7$var$$0e50e8a626908591$export$7d15b64cf5a3a4c4(0, b, 255);\n        this.a = a !== undefined ? $81aaff24fb9cd9f7$var$$0e50e8a626908591$export$7d15b64cf5a3a4c4(0, a, 1) : a = 1;\n    }\n    get inverse() {\n        return new $81aaff24fb9cd9f7$export$892596cec99bc70e(255 - this.r, 255 - this.g, 255 - this.b, this.a);\n    }\n    get inverseLuminance() {\n        const { h: h, s: s, l: l } = this._hsl;\n        return $81aaff24fb9cd9f7$export$892596cec99bc70e.fromHsl(h, s, 1 - l, this.a);\n    }\n    get rgb() {\n        const { r: r, g: g, b: b } = this;\n        return `rgb(${r.toFixed(0)},${g.toFixed(0)},${b.toFixed(0)})`;\n    }\n    get rgba() {\n        const { r: r, g: g, b: b, a: a } = this;\n        return `rgba(${r.toFixed(0)},${g.toFixed(0)},${b.toFixed(0)},${a.toFixed(2)})`;\n    }\n    get RGBA() {\n        return [\n            this.r / 255,\n            this.g / 255,\n            this.b / 255,\n            this.a\n        ];\n    }\n    get ARGB() {\n        return [\n            this.a,\n            this.r / 255,\n            this.g / 255,\n            this.b / 255\n        ];\n    }\n    get _hsl() {\n        if (this._hslCached == null) this._hslCached = new $81aaff24fb9cd9f7$var$$72989831e95a2bab$var$HslColor(this.r, this.g, this.b);\n        return this._hslCached;\n    }\n    get hsl() {\n        const { h: h, s: s, l: l } = this._hsl;\n        return `hsl(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%)`;\n    }\n    get hsla() {\n        const { h: h, s: s, l: l } = this._hsl;\n        return `hsla(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%, ${this.a.toFixed(2)})`;\n    }\n    get mono() {\n        const v = this.brightness * 255;\n        return new $81aaff24fb9cd9f7$export$892596cec99bc70e(v, v, v);\n    }\n    get brightness() {\n        // http://www.itu.int/rec/R-REC-BT.601\n        return (0.299 * this.r + 0.587 * this.g + 0.114 * this.b) / 255;\n    }\n    get html() {\n        return this.a === 1 ? \"#\" + $81aaff24fb9cd9f7$var$$72989831e95a2bab$var$hex2(this.r) + $81aaff24fb9cd9f7$var$$72989831e95a2bab$var$hex2(this.g) + $81aaff24fb9cd9f7$var$$72989831e95a2bab$var$hex2(this.b) : \"#\" + $81aaff24fb9cd9f7$var$$72989831e95a2bab$var$hex2(this.r) + $81aaff24fb9cd9f7$var$$72989831e95a2bab$var$hex2(this.g) + $81aaff24fb9cd9f7$var$$72989831e95a2bab$var$hex2(this.b) + $81aaff24fb9cd9f7$var$$72989831e95a2bab$var$hex2(Math.floor(255 * this.a));\n    }\n    brighten(amount) {\n        let { h: h, s: s, l: l } = this._hsl;\n        l = $81aaff24fb9cd9f7$var$$0e50e8a626908591$export$7d15b64cf5a3a4c4(0, l + amount * (1 - l), 1);\n        return $81aaff24fb9cd9f7$export$892596cec99bc70e.fromHsl(h, s, l, this.a);\n    }\n    darken(amount) {\n        let { h: h, s: s, l: l } = this._hsl;\n        l = $81aaff24fb9cd9f7$var$$0e50e8a626908591$export$7d15b64cf5a3a4c4(0, l * (1 - amount), 1);\n        return $81aaff24fb9cd9f7$export$892596cec99bc70e.fromHsl(h, s, l, this.a);\n    }\n    saturate(amount) {\n        let { h: h, s: s, l: l } = this._hsl;\n        s = $81aaff24fb9cd9f7$var$$0e50e8a626908591$export$7d15b64cf5a3a4c4(0, s + amount * (1 - s), 1);\n        return $81aaff24fb9cd9f7$export$892596cec99bc70e.fromHsl(h, s, l, this.a);\n    }\n    desaturate(amount) {\n        let { h: h, s: s, l: l } = this._hsl;\n        s = $81aaff24fb9cd9f7$var$$0e50e8a626908591$export$7d15b64cf5a3a4c4(0, s * (1 - amount), 1);\n        return $81aaff24fb9cd9f7$export$892596cec99bc70e.fromHsl(h, s, l, this.a);\n    }\n    rotate(amount) {\n        let { h: h, s: s, l: l } = this._hsl;\n        h = (h + 360 + amount) % 360;\n        return $81aaff24fb9cd9f7$export$892596cec99bc70e.fromHsl(h, s, l, this.a);\n    }\n    opacity(alpha) {\n        const { h: h, s: s, l: l } = this._hsl;\n        return $81aaff24fb9cd9f7$export$892596cec99bc70e.fromHsl(h, s, l, alpha);\n    }\n    swatch() {\n        const { r: r, g: g, b: b, a: a } = this;\n        console.log(`%c   %c ${this.html}, rgba(${r}, ${g}, ${b}, ${a}), ${this.hsla}`, `background-color: rgba(${r}, ${g}, ${b}, ${a})`, \"background-color: #eee\");\n    }\n    blend(otherColor, t) {\n        return new $81aaff24fb9cd9f7$export$892596cec99bc70e($81aaff24fb9cd9f7$var$$0e50e8a626908591$export$3a89f8d6f6bf6c9f(this.r, otherColor.r, t), $81aaff24fb9cd9f7$var$$0e50e8a626908591$export$3a89f8d6f6bf6c9f(this.g, otherColor.g, t), $81aaff24fb9cd9f7$var$$0e50e8a626908591$export$3a89f8d6f6bf6c9f(this.b, otherColor.b, t), $81aaff24fb9cd9f7$var$$0e50e8a626908591$export$3a89f8d6f6bf6c9f(this.a, otherColor.a, t));\n    }\n}\nfunction $81aaff24fb9cd9f7$var$$bed4bed3dcfb6f9a$export$87ae551bf60f4bb(s) {\n    return s.replace(/[A-Z]/g, (c)=>{\n        return `-${c.toLocaleLowerCase()}`;\n    });\n}\nfunction $81aaff24fb9cd9f7$var$$bed4bed3dcfb6f9a$export$fd322201efdc650f(s) {\n    return s.replace(/-([a-z])/g, (_, c)=>{\n        return c.toLocaleUpperCase();\n    });\n}\nconst $81aaff24fb9cd9f7$var$$9e0c0b8784c80412$var$templates = {};\nconst $81aaff24fb9cd9f7$var$$9e0c0b8784c80412$var$create = (tagType, ...contents)=>{\n    if ($81aaff24fb9cd9f7$var$$9e0c0b8784c80412$var$templates[tagType] === undefined) $81aaff24fb9cd9f7$var$$9e0c0b8784c80412$var$templates[tagType] = globalThis.document.createElement(tagType);\n    const elt = $81aaff24fb9cd9f7$var$$9e0c0b8784c80412$var$templates[tagType].cloneNode();\n    const elementProps = {};\n    for (const item of contents)if (item instanceof Element || item instanceof DocumentFragment || typeof item === \"string\" || typeof item === \"number\") {\n        if (elt instanceof HTMLTemplateElement) elt.content.append(item);\n        else elt.append(item);\n    } else Object.assign(elementProps, item);\n    for (const key of Object.keys(elementProps)){\n        const value = elementProps[key];\n        if (key === \"apply\") value(elt);\n        else if (key === \"style\") {\n            if (typeof value === \"object\") {\n                for (const prop of Object.keys(value))if (prop.startsWith(\"--\")) elt.style.setProperty(prop, value[prop]);\n                else elt.style[prop] = value[prop];\n            } else elt.setAttribute(\"style\", value);\n        } else if (key.match(/^on[A-Z]/) != null) {\n            const eventType = key.substring(2).toLowerCase();\n            $81aaff24fb9cd9f7$export$af631764ddc44097(elt, eventType, value);\n        } else if (key.match(/^bind[A-Z]/) != null) {\n            const bindingType = key.substring(4, 5).toLowerCase() + key.substring(5);\n            const binding = $81aaff24fb9cd9f7$export$97a1a3e6f39778d2[bindingType];\n            if (binding !== undefined) $81aaff24fb9cd9f7$export$2385a24977818dd0(elt, value, binding);\n            else throw new Error(`${key} is not allowed, bindings.${bindingType} is not defined`);\n        // @ts-expect-error\n        } else if (elt[key] !== undefined) elt[key] = value;\n        else {\n            const attr = $81aaff24fb9cd9f7$var$$bed4bed3dcfb6f9a$export$87ae551bf60f4bb(key);\n            if (attr === \"class\") value.split(\" \").forEach((className)=>{\n                elt.classList.add(className);\n            });\n            else if (elt[attr] !== undefined) elt[attr] = value;\n            else if (typeof value === \"boolean\") value ? elt.setAttribute(attr, \"\") : elt.removeAttribute(attr);\n            else elt.setAttribute(attr, value);\n        }\n    }\n    return elt;\n};\nconst $81aaff24fb9cd9f7$var$$9e0c0b8784c80412$var$fragment = (...contents)=>{\n    const frag = globalThis.document.createDocumentFragment();\n    for (const item of contents)frag.append(item);\n    return frag;\n};\nconst $81aaff24fb9cd9f7$export$7a5d735b2ab6389d = new Proxy({\n    fragment: $81aaff24fb9cd9f7$var$$9e0c0b8784c80412$var$fragment\n}, {\n    get (target, tagName) {\n        tagName = tagName.replace(/[A-Z]/g, (c)=>`-${c.toLocaleLowerCase()}`);\n        if (tagName.match(/^\\w+(-\\w+)*$/) == null) throw new Error(`${tagName} does not appear to be a valid element tagName`);\n        else if (target[tagName] === undefined) target[tagName] = (...contents)=>$81aaff24fb9cd9f7$var$$9e0c0b8784c80412$var$create(tagName, ...contents);\n        // @ts-expect-error\n        return target[tagName];\n    },\n    set () {\n        throw new Error(\"You may not add new properties to elements\");\n    }\n});\nfunction $81aaff24fb9cd9f7$var$$49cee7f7f866c751$export$bc59121b0a0fcbd3(styleSheet) {\n    return $81aaff24fb9cd9f7$export$7a5d735b2ab6389d.style($81aaff24fb9cd9f7$export$dbf350e5966cf602(styleSheet));\n}\nconst $81aaff24fb9cd9f7$var$$49cee7f7f866c751$var$numericProps = [\n    \"animation-iteration-count\",\n    \"flex\",\n    \"flex-base\",\n    \"flex-grow\",\n    \"flex-shrink\",\n    \"gap\",\n    \"opacity\",\n    \"order\",\n    \"tab-size\",\n    \"widows\",\n    \"z-index\",\n    \"zoom\"\n];\nconst $81aaff24fb9cd9f7$var$$49cee7f7f866c751$var$renderProp = (indentation, cssProp, value)=>{\n    if (value === undefined) return \"\";\n    else if (typeof value === \"string\" || $81aaff24fb9cd9f7$var$$49cee7f7f866c751$var$numericProps.includes(cssProp)) return `${indentation}  ${cssProp}: ${value};`;\n    else return `${indentation}  ${cssProp}: ${value}px;`;\n};\nconst $81aaff24fb9cd9f7$var$$49cee7f7f866c751$var$renderStatement = (key, value, indentation = \"\")=>{\n    const cssProp = $81aaff24fb9cd9f7$var$$bed4bed3dcfb6f9a$export$87ae551bf60f4bb(key);\n    if (typeof value === \"object\") {\n        const renderedRule = Object.keys(value).map((innerKey)=>$81aaff24fb9cd9f7$var$$49cee7f7f866c751$var$renderStatement(innerKey, value[innerKey], `${indentation}  `)).join(\"\\n\");\n        return `${indentation}  ${key} {\\n${renderedRule}\\n${indentation}  }`;\n    } else return $81aaff24fb9cd9f7$var$$49cee7f7f866c751$var$renderProp(indentation, cssProp, value);\n};\nconst $81aaff24fb9cd9f7$export$dbf350e5966cf602 = (obj, indentation = \"\")=>{\n    const selectors = Object.keys(obj).map((selector)=>{\n        const body = obj[selector];\n        if (typeof body === \"string\") {\n            if (selector === \"@import\") return `@import url('${body}');`;\n            throw new Error(\"top-level string value only allowed for `@import`\");\n        }\n        const rule = Object.keys(body).map((prop)=>$81aaff24fb9cd9f7$var$$49cee7f7f866c751$var$renderStatement(prop, body[prop])).join(\"\\n\");\n        return `${indentation}${selector} {\\n${rule}\\n}`;\n    });\n    return selectors.join(\"\\n\\n\");\n};\nconst $81aaff24fb9cd9f7$export$90d0ea046136e3ed = (obj)=>{\n    const rule = {};\n    for (const key of Object.keys(obj)){\n        const value = obj[key];\n        const kabobKey = $81aaff24fb9cd9f7$var$$bed4bed3dcfb6f9a$export$87ae551bf60f4bb(key);\n        rule[`--${kabobKey}`] = typeof value === \"number\" && value !== 0 ? String(value) + \"px\" : value;\n    }\n    return rule;\n};\nconst $81aaff24fb9cd9f7$export$808aaf1b460dc9af = (obj)=>{\n    const rule = {};\n    for (const key of Object.keys(obj)){\n        let value = obj[key];\n        if (typeof value === \"string\" && value.match(/^(#|rgb[a]?\\(|hsl[a]?\\()/) != null) {\n            value = $81aaff24fb9cd9f7$export$892596cec99bc70e.fromCss(value).inverseLuminance.html;\n            rule[`--${$81aaff24fb9cd9f7$var$$bed4bed3dcfb6f9a$export$87ae551bf60f4bb(key)}`] = value;\n        }\n    }\n    return rule;\n};\nconst $81aaff24fb9cd9f7$export$3cb96c9f6c8d16a4 = new Proxy({}, {\n    get (target, prop) {\n        if (target[prop] == null) {\n            prop = prop.replace(/[A-Z]/g, (x)=>`-${x.toLocaleLowerCase()}`);\n            let [, varName, , isNegative, scaleText, method] = prop.match(/^([^\\d_]*)((_)?(\\d+)(\\w*))?$/);\n            varName = `--${varName}`;\n            if (scaleText != null) {\n                const scale = isNegative == null ? Number(scaleText) / 100 : -Number(scaleText) / 100;\n                switch(method){\n                    case \"b\":\n                        {\n                            const baseColor = getComputedStyle(document.body).getPropertyValue(varName);\n                            target[prop] = scale > 0 ? $81aaff24fb9cd9f7$export$892596cec99bc70e.fromCss(baseColor).brighten(scale).rgba : $81aaff24fb9cd9f7$export$892596cec99bc70e.fromCss(baseColor).darken(-scale).rgba;\n                        }\n                        break;\n                    case \"s\":\n                        {\n                            const baseColor = getComputedStyle(document.body).getPropertyValue(varName);\n                            target[prop] = scale > 0 ? $81aaff24fb9cd9f7$export$892596cec99bc70e.fromCss(baseColor).saturate(scale).rgba : $81aaff24fb9cd9f7$export$892596cec99bc70e.fromCss(baseColor).desaturate(-scale).rgba;\n                        }\n                        break;\n                    case \"h\":\n                        {\n                            const baseColor = getComputedStyle(document.body).getPropertyValue(varName);\n                            target[prop] = $81aaff24fb9cd9f7$export$892596cec99bc70e.fromCss(baseColor).rotate(scale * 100).rgba;\n                            console.log($81aaff24fb9cd9f7$export$892596cec99bc70e.fromCss(baseColor).hsla, $81aaff24fb9cd9f7$export$892596cec99bc70e.fromCss(baseColor).rotate(scale).hsla);\n                        }\n                        break;\n                    case \"o\":\n                        {\n                            const baseColor = getComputedStyle(document.body).getPropertyValue(varName);\n                            target[prop] = $81aaff24fb9cd9f7$export$892596cec99bc70e.fromCss(baseColor).opacity(scale).rgba;\n                        }\n                        break;\n                    case \"\":\n                        target[prop] = `calc(var(${varName}) * ${scale})`;\n                        break;\n                    default:\n                        console.error(method);\n                        throw new Error(`Unrecognized method ${method} for css variable ${varName}`);\n                }\n            } else target[prop] = `var(${varName})`;\n        }\n        return target[prop];\n    }\n});\nlet $81aaff24fb9cd9f7$var$$cd387b053feba574$var$instanceCount = 0;\nclass $81aaff24fb9cd9f7$export$16fa2f45be04daa8 extends HTMLElement {\n    static elements = $81aaff24fb9cd9f7$export$7a5d735b2ab6389d;\n    content = $81aaff24fb9cd9f7$export$7a5d735b2ab6389d.slot();\n    static StyleNode(styleSpec) {\n        return $81aaff24fb9cd9f7$export$7a5d735b2ab6389d.style($81aaff24fb9cd9f7$export$dbf350e5966cf602(styleSpec));\n    }\n    static elementCreator(options) {\n        if (this._elementCreator == null) {\n            let desiredTag = options != null ? options.tag : null;\n            if (desiredTag == null) {\n                desiredTag = $81aaff24fb9cd9f7$var$$bed4bed3dcfb6f9a$export$87ae551bf60f4bb(this.name);\n                if (desiredTag.startsWith(\"-\")) desiredTag = desiredTag.substring(1);\n                if (!desiredTag.includes(\"-\")) desiredTag += \"-elt\";\n            }\n            let attempts = 0;\n            while(this._elementCreator == null){\n                attempts += 1;\n                const tag = attempts === 1 ? desiredTag : `${desiredTag}-${attempts}`;\n                try {\n                    window.customElements.define(tag, this, options);\n                    this._elementCreator = $81aaff24fb9cd9f7$export$7a5d735b2ab6389d[tag];\n                } catch (e) {\n                    throw new Error(`could not define ${this.name} as <${tag}>: ${String(e)}`);\n                }\n            }\n        }\n        return this._elementCreator;\n    }\n    initAttributes(...attributeNames) {\n        const attributes = {};\n        const attributeValues = {};\n        const observer = new MutationObserver((mutationsList)=>{\n            let triggerRender = false;\n            mutationsList.forEach((mutation)=>{\n                // eslint-disable-next-line\n                triggerRender = !!(mutation.attributeName && attributeNames.includes($81aaff24fb9cd9f7$var$$bed4bed3dcfb6f9a$export$fd322201efdc650f(mutation.attributeName)));\n            });\n            if (triggerRender && this.queueRender !== undefined) this.queueRender(false);\n        });\n        observer.observe(this, {\n            attributes: true\n        });\n        attributeNames.forEach((attributeName)=>{\n            attributes[attributeName] = $81aaff24fb9cd9f7$var$$5165f04a46b33615$export$b7d58db314e0ac27(this[attributeName]);\n            const attributeKabob = $81aaff24fb9cd9f7$var$$bed4bed3dcfb6f9a$export$87ae551bf60f4bb(attributeName);\n            Object.defineProperty(this, attributeName, {\n                enumerable: false,\n                get () {\n                    if (typeof attributes[attributeName] === \"boolean\") return this.hasAttribute(attributeKabob);\n                    else {\n                        // eslint-disable-next-line\n                        if (this.hasAttribute(attributeKabob)) return typeof attributes[attributeName] === \"number\" ? parseFloat(this.getAttribute(attributeKabob)) : this.getAttribute(attributeKabob);\n                        else if (attributeValues[attributeName] !== undefined) return attributeValues[attributeName];\n                        else return attributes[attributeName];\n                    }\n                },\n                set (value) {\n                    if (typeof attributes[attributeName] === \"boolean\") {\n                        if (value !== this[attributeName]) {\n                            // eslint-disable-next-line\n                            if (value) this.setAttribute(attributeKabob, \"\");\n                            else this.removeAttribute(attributeKabob);\n                            this.queueRender();\n                        }\n                    } else if (typeof attributes[attributeName] === \"number\") {\n                        if (value !== parseFloat(this[attributeName])) {\n                            this.setAttribute(attributeKabob, value);\n                            this.queueRender();\n                        }\n                    } else if (typeof value === \"object\" || `${value}` !== `${this[attributeName]}`) {\n                        if (value === null || value === undefined || typeof value === \"object\") this.removeAttribute(attributeKabob);\n                        else this.setAttribute(attributeKabob, value);\n                        this.queueRender();\n                        // @ts-expect-error\n                        attributeValues[attributeName] = value;\n                    }\n                }\n            });\n        });\n    }\n    initValue() {\n        const valueDescriptor = Object.getOwnPropertyDescriptor(this, \"value\");\n        if (valueDescriptor === undefined || valueDescriptor.get !== undefined || valueDescriptor.set !== undefined) return;\n        let value = this.hasAttribute(\"value\") ? this.getAttribute(\"value\") : $81aaff24fb9cd9f7$var$$5165f04a46b33615$export$b7d58db314e0ac27(this.value);\n        delete this.value;\n        Object.defineProperty(this, \"value\", {\n            enumerable: false,\n            get () {\n                return value;\n            },\n            set (newValue) {\n                if (value !== newValue) {\n                    value = newValue;\n                    this.queueRender(true);\n                }\n            }\n        });\n    }\n    get refs() {\n        const root = this.shadowRoot != null ? this.shadowRoot : this;\n        if (this._refs == null) this._refs = new Proxy({}, {\n            get (target, ref) {\n                if (target[ref] === undefined) {\n                    let element = root.querySelector(`[data-ref=\"${ref}\"]`);\n                    if (element == null) element = root.querySelector(ref);\n                    if (element == null) throw new Error(`elementRef \"${ref}\" does not exist!`);\n                    element.removeAttribute(\"data-ref\");\n                    target[ref] = element;\n                }\n                return target[ref];\n            }\n        });\n        return this._refs;\n    }\n    constructor(){\n        super();\n        $81aaff24fb9cd9f7$var$$cd387b053feba574$var$instanceCount += 1;\n        this.initAttributes(\"hidden\");\n        this.instanceId = `${this.tagName.toLocaleLowerCase()}-${$81aaff24fb9cd9f7$var$$cd387b053feba574$var$instanceCount}`;\n        this._value = $81aaff24fb9cd9f7$var$$5165f04a46b33615$export$b7d58db314e0ac27(this.defaultValue);\n    }\n    connectedCallback() {\n        this.hydrate();\n        // super annoyingly, chrome loses its shit if you set *any* attributes in the constructor\n        if (this.role != null) this.setAttribute(\"role\", this.role);\n        if (this.onResize !== undefined) {\n            $81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$export$b13421f1ae71d316.observe(this);\n            if (this._onResize == null) this._onResize = this.onResize.bind(this);\n            this.addEventListener(\"resize\", this._onResize);\n        }\n        if (this.value != null && this.getAttribute(\"value\") != null) this._value = this.getAttribute(\"value\");\n        this.queueRender();\n    }\n    disconnectedCallback() {\n        $81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$export$b13421f1ae71d316.unobserve(this);\n    }\n    _changeQueued = false;\n    _renderQueued = false;\n    queueRender(triggerChangeEvent = false) {\n        if (!this._hydrated) return;\n        if (!this._changeQueued) this._changeQueued = triggerChangeEvent;\n        if (!this._renderQueued) {\n            this._renderQueued = true;\n            requestAnimationFrame(()=>{\n                // TODO add mechanism to allow component developer to have more control over\n                // whether input vs. change events are emitted\n                if (this._changeQueued) $81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$export$635e15bbd66f01ea(this, \"change\");\n                this._changeQueued = false;\n                this._renderQueued = false;\n                this.render();\n            });\n        }\n    }\n    _hydrated = false;\n    hydrate() {\n        if (!this._hydrated) {\n            this.initValue();\n            const _content = typeof this.content === \"function\" ? this.content() : this.content;\n            if (this.styleNode !== undefined) {\n                const shadow = this.attachShadow({\n                    mode: \"open\"\n                });\n                shadow.appendChild(this.styleNode);\n                $81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$export$6bb13967611cdb1(shadow, _content);\n            } else {\n                const existingChildren = [\n                    ...this.childNodes\n                ];\n                if ($81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$export$6bb13967611cdb1(this, _content) && existingChildren.length > 0) {\n                    const slotMap = {\n                        \"\": this\n                    };\n                    [\n                        ...this.querySelectorAll(\"xin-slot\")\n                    ].forEach((slot)=>{\n                        // @ts-expect-error\n                        slotMap[slot.name] = slot;\n                    });\n                    existingChildren.forEach((child)=>{\n                        const defaultSlot = slotMap[\"\"];\n                        const destSlot = child instanceof Element ? slotMap[child.slot] : defaultSlot;\n                        (destSlot !== undefined ? destSlot : defaultSlot).append(child);\n                    });\n                }\n            }\n            this._hydrated = true;\n        }\n    }\n    render() {}\n}\nclass $81aaff24fb9cd9f7$var$$cd387b053feba574$var$XinSlot extends $81aaff24fb9cd9f7$export$16fa2f45be04daa8 {\n    name = \"\";\n    content = null;\n    constructor(){\n        super();\n        this.initAttributes(\"name\");\n    }\n}\nconst $81aaff24fb9cd9f7$var$$cd387b053feba574$export$a0751b4aa1961d4e = $81aaff24fb9cd9f7$var$$cd387b053feba574$var$XinSlot.elementCreator({\n    tag: \"xin-slot\"\n});\nconst $81aaff24fb9cd9f7$export$93b87f7746612069 = (test = ()=>true)=>{\n    const savedState = localStorage.getItem(\"xin-state\");\n    if (savedState != null) {\n        const state = JSON.parse(savedState);\n        for (const key of Object.keys(state).filter(test))if ($81aaff24fb9cd9f7$export$966034e6c6823eb0[key] !== undefined) Object.assign($81aaff24fb9cd9f7$export$966034e6c6823eb0[key], state[key]);\n        else $81aaff24fb9cd9f7$export$966034e6c6823eb0[key] = state[key];\n    }\n    const saveState = $81aaff24fb9cd9f7$export$61fc7d43ac8f84b0(()=>{\n        const obj = {};\n        const state = $81aaff24fb9cd9f7$export$966034e6c6823eb0[$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$bdd0d039ad781534];\n        for (const key of Object.keys(state).filter(test))obj[key] = state[key];\n        localStorage.setItem(\"xin-state\", JSON.stringify(obj));\n        console.log(\"xin state saved to localStorage\");\n    }, 500);\n    $81aaff24fb9cd9f7$export$d1203567a167490e(test, saveState);\n};\nvar $81aaff24fb9cd9f7$var$$526cc5d62ff194fb$exports = {};\nfunction $81aaff24fb9cd9f7$export$95a552d2395ab4c4(obj) {\n    const registered = {};\n    Object.keys(obj).forEach((key)=>{\n        $81aaff24fb9cd9f7$export$966034e6c6823eb0[key] = obj[key];\n        registered[key] = $81aaff24fb9cd9f7$export$966034e6c6823eb0[key];\n    });\n    return registered;\n}\n\n\nconst $6f770befbae8ae1b$var$SVG_XMLNS = \"http://www.w3.org/2000/svg\";\nconst $6f770befbae8ae1b$var$TITLE = \"xinjs polygons demo\";\nconst $6f770befbae8ae1b$var$svgElements = new Proxy({}, {\n    get (target, prop) {\n        if (!target[prop]) target[prop] = (...parts)=>{\n            // @ts-ignore-error\n            const elt = document.createElementNS($6f770befbae8ae1b$var$SVG_XMLNS, prop);\n            const attrs = {};\n            parts.forEach((part)=>{\n                if (typeof part === \"string\") elt.append(part);\n                else if (typeof part === \"object\" && part.constructor === Object) Object.assign(attrs, part);\n                else elt.append(part);\n            });\n            Object.keys(attrs).forEach((attr)=>{\n                elt.setAttribute(attr, attrs[attr]);\n            });\n            return elt;\n        };\n        return target[prop];\n    }\n});\ndocument.head.querySelector(\"title\").textContent = $6f770befbae8ae1b$var$TITLE;\nconst $6f770befbae8ae1b$var$main = document.querySelector(\"main\");\nconst { h1: $6f770befbae8ae1b$var$h1, div: $6f770befbae8ae1b$var$div, button: $6f770befbae8ae1b$var$button, input: $6f770befbae8ae1b$var$input, a: $6f770befbae8ae1b$var$a, img: $6f770befbae8ae1b$var$img } = (0, $81aaff24fb9cd9f7$export$7a5d735b2ab6389d);\nconst $6f770befbae8ae1b$var$textRef = Symbol(\"text\");\nconst $6f770befbae8ae1b$var$svgContainer = $6f770befbae8ae1b$var$div({\n    class: \"elastic\",\n    onMouseenter (event) {\n        // @ts-expect-error\n        const text = event?.target[$6f770befbae8ae1b$var$textRef];\n        if (text) text.classList.add(\"hover\");\n    },\n    onMouseleave (event) {\n        // @ts-expect-error\n        const text = event?.target[$6f770befbae8ae1b$var$textRef];\n        if (text) text.classList.remove(\"hover\");\n    }\n});\nfunction $6f770befbae8ae1b$var$randomPct(min, max) {\n    return (Math.random() * (max - min) + min).toFixed(0) + \"%\";\n}\nfunction $6f770befbae8ae1b$var$randomColor() {\n    return `hsl(${(Math.random() * 360).toFixed(0)}, ${$6f770befbae8ae1b$var$randomPct(25, 100)}, ${$6f770befbae8ae1b$var$randomPct(25, 75)})`;\n}\nfunction $6f770befbae8ae1b$var$setText(poly, message) {\n    let text = poly[$6f770befbae8ae1b$var$textRef];\n    if (text === undefined) {\n        const [x, y] = poly.getAttribute(\"points\").split(\",\");\n        poly[$6f770befbae8ae1b$var$textRef] = text = $6f770befbae8ae1b$var$svgElements.text({\n            x: x,\n            y: y\n        });\n        text.style.zIndex = 1;\n        poly.parentElement.append(text);\n    }\n    text.textContent = message;\n}\nconst { settings: $6f770befbae8ae1b$var$settings, handlers: $6f770befbae8ae1b$var$handlers } = (0, $81aaff24fb9cd9f7$export$95a552d2395ab4c4)({\n    settings: {\n        threshold: 0.01\n    },\n    handlers: {\n        async loadSvg () {\n            // github pages screws up the file\n            /*\n      const response = await fetch(testSvg)\n      const text = await response.text()\n      svgContainer.innerHTML = text\n      */ $6f770befbae8ae1b$var$svgContainer.innerHTML = (0, $cc01f8693f40d7ee$export$2e2bcd8739ae039);\n            $6f770befbae8ae1b$var$handlers.randomColors();\n            $6f770befbae8ae1b$var$handlers.area();\n        },\n        randomColors () {\n            [\n                ...document.querySelectorAll(\"polygon\")\n            ].forEach((poly)=>{\n                poly.setAttribute(\"fill\", $6f770befbae8ae1b$var$randomColor());\n            });\n        },\n        area () {\n            let totalArea = 0;\n            [\n                ...document.querySelectorAll(\"polygon\")\n            ].forEach((poly)=>{\n                try {\n                    let points = (0, $38bb96f6372300b3$export$a01e6b5107f59da5)(poly.getAttribute(\"points\"));\n                    if (points.length > 3) {\n                        const a = (0, $38bb96f6372300b3$export$bb3edc44842b5f2e)(...points);\n                        totalArea += a;\n                        const message = `Area: ${a}, Points: ${points.length}`;\n                        $6f770befbae8ae1b$var$setText(poly, message);\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n            });\n            console.log({\n                totalArea: totalArea\n            });\n        },\n        simplify () {\n            let totalPoints = 0;\n            let totalRemaining = 0;\n            [\n                ...document.querySelectorAll(\"polygon\")\n            ].forEach((poly)=>{\n                try {\n                    let points = (0, $38bb96f6372300b3$export$a01e6b5107f59da5)(poly.getAttribute(\"points\"));\n                    const origPointCount = points.length;\n                    if (points.length > 3) {\n                        points = (0, $38bb96f6372300b3$export$798b53621063651)(points, $6f770befbae8ae1b$var$settings.threshold);\n                        const message = `${origPointCount} -> ${points.length}`;\n                        $6f770befbae8ae1b$var$setText(poly, message);\n                        poly.setAttribute(\"points\", (0, $38bb96f6372300b3$export$7e15f8e95de272d5)(points));\n                    }\n                    totalPoints += origPointCount;\n                    totalRemaining += points.length;\n                } catch (e) {\n                    console.error(e);\n                    $6f770befbae8ae1b$var$setText(poly, e);\n                }\n            });\n            console.log({\n                totalPoints: totalPoints,\n                totalRemaining: totalRemaining,\n                reduction: ((1 - totalRemaining / totalPoints) * 100).toFixed(1) + \"%\"\n            });\n        }\n    }\n});\ntry {\n    $6f770befbae8ae1b$var$main.append($6f770befbae8ae1b$var$h1($6f770befbae8ae1b$var$TITLE), $6f770befbae8ae1b$var$div({\n        class: \"bar\"\n    }, $6f770befbae8ae1b$var$a(\"demo\", {\n        href: \"https://tonioloewald.github.io/xinjs-polygons/\"\n    }), $6f770befbae8ae1b$var$a(\"github\", {\n        href: \"https://github.com/tonioloewald/xinjs-polygons#readme)\"\n    }), $6f770befbae8ae1b$var$a(\"npm\", {\n        href: \"https://www.npmjs.com/package/xinjs-polygons\"\n    }), $6f770befbae8ae1b$var$img({\n        alt: \"bundlejs\",\n        src: \"https://deno.bundlejs.com/?q=xinjs-polygons&badge=\"\n    }), $6f770befbae8ae1b$var$button(\"Reload\", {\n        onClick: $6f770befbae8ae1b$var$handlers.loadSvg\n    }), $6f770befbae8ae1b$var$button(\"Simplify\", {\n        onClick: $6f770befbae8ae1b$var$handlers.simplify\n    }), $6f770befbae8ae1b$var$input({\n        title: \"threshold\",\n        placeholder: \"threshold\",\n        min: \"0.01\",\n        step: \"0.01\",\n        max: \"5\",\n        type: \"range\",\n        bindValue: \"settings.threshold\"\n    }), $6f770befbae8ae1b$var$input({\n        type: \"number\",\n        step: \"0.01\",\n        bindValue: \"settings.threshold\"\n    })), $6f770befbae8ae1b$var$svgContainer);\n} catch (e) {\n    console.log(e);\n}\n$6f770befbae8ae1b$var$handlers.loadSvg().catch((e)=>console.error(e));\n\n\n//# sourceMappingURL=index.43aaf3d1.js.map\n","import { stringToPolygon, polygonToString, simplify, area } from '../src'\nimport svgText from './svg-test.ts'\nimport { elements, xinProxy } from 'xinjs'\n\nconst SVG_XMLNS = 'http://www.w3.org/2000/svg'\nconst TITLE = 'xinjs polygons demo'\n\ntype SvgElementCreator = (...parts: any) => any\ntype SvgElementCreatorMap = {\n  [key: string]: SvgElementCreator\n}\ntype SvgPart = string | {[key: string]: any}\n\nconst svgElements = new Proxy({} as SvgElementCreatorMap, {\n  get(target, prop: string) {\n    if (!target[prop]) {\n      target[prop] = (...parts: SvgPart[] ) => {\n        // @ts-ignore-error\n        const elt = document.createElementNS(SVG_XMLNS, prop)\n        const attrs: {[key: string]: any} = {}\n        parts.forEach(\n          (part: any) => {\n            if (typeof part === 'string') {\n              elt.append(part)\n            } else if (typeof part === 'object' && part.constructor === Object) {\n              Object.assign(attrs, part)\n            } else {\n              elt.append(part)\n            }\n          }\n        )\n        Object.keys(attrs).forEach((attr: string) => {\n          elt.setAttribute(attr, attrs[attr])\n        })\n        return elt\n      }\n    }\n\n    return target[prop]\n  }\n}\n)\n\ndocument.head.querySelector('title').textContent = TITLE\nconst main = document.querySelector('main') as HTMLElement\n\nconst { h1, div, button, input, a, img } = elements\n\nconst textRef = Symbol('text')\n\nconst svgContainer = div({ \n  class: 'elastic',\n  onMouseenter(event: Event) {\n    // @ts-expect-error\n    const text = event?.target[textRef]\n    if (text) {\n      text.classList.add('hover')\n    }\n  },\n  onMouseleave(event: Event) {\n    // @ts-expect-error\n    const text = event?.target[textRef]\n    if (text) {\n      text.classList.remove('hover')\n    }\n  }\n})\n\nfunction randomPct(min: number, max: number): string {\n  return (Math.random() * (max - min) + min).toFixed(0) + '%'\n}\n\nfunction randomColor(): string {\n  return `hsl(${(Math.random() * 360).toFixed(0)}, ${randomPct(25, 100)}, ${randomPct(25, 75)})`\n}\n\nfunction setText(poly: any, message: string): void {\n  let text = poly[textRef]\n  if (text === undefined) {\n    const [x, y] = poly.getAttribute('points').split(',')\n    poly[textRef] = text = svgElements.text({ x, y })\n    text.style.zIndex = 1\n    poly.parentElement.append(text)\n  }\n  text.textContent = message\n}\n\nconst { settings, handlers } = xinProxy({\n  settings: {\n    threshold: 0.01,\n  },\n  handlers: {\n    async loadSvg(): Promise<void> {\n      // github pages screws up the file\n      /*\n      const response = await fetch(testSvg)\n      const text = await response.text()\n      svgContainer.innerHTML = text\n      */\n      svgContainer.innerHTML = svgText\n      handlers.randomColors()\n      handlers.area()\n    },\n    randomColors(): void { \n      [...document.querySelectorAll('polygon')].forEach(poly => {\n        poly.setAttribute('fill', randomColor())\n      })\n    },\n    area(): void {\n      let totalArea = 0\n      // @ts-expect-error\n      ;[...document.querySelectorAll('polygon')].forEach(poly => {\n        try {\n          let points = stringToPolygon(poly.getAttribute('points'))\n          if (points.length > 3) {\n            const a = area(...points)\n            totalArea += a\n            const message = `Area: ${a}, Points: ${points.length}`\n            setText(poly, message)\n          }\n        } catch(e) {\n          console.error(e)\n        }\n      })\n      console.log({\n        totalArea\n      })\n    },\n    simplify(): void {\n      let totalPoints = 0\n      let totalRemaining = 0\n      // @ts-expect-error\n      ;[...document.querySelectorAll('polygon')].forEach(poly => {\n        try {\n          let points = stringToPolygon(poly.getAttribute('points'))\n          const origPointCount = points.length\n          if (points.length > 3) {\n            points = simplify(points, settings.threshold)\n            const message = `${origPointCount} -> ${points.length}`\n            setText(poly, message)\n            poly.setAttribute('points', polygonToString(points))\n          }\n          totalPoints += origPointCount\n          totalRemaining += points.length\n        } catch(e) {\n          console.error(e)\n          setText(poly, e as string)\n        }\n      })\n      console.log({\n        totalPoints,\n        totalRemaining,\n        reduction: ((1 - totalRemaining / totalPoints) * 100).toFixed(1) + '%'\n      })\n    }\n  }\n})\n\ntry {\n  main.append(\n    h1(TITLE),\n    div(\n      { class: 'bar' },\n      a('demo', {href: 'https://tonioloewald.github.io/xinjs-polygons/'}),\n      a('github', {href: 'https://github.com/tonioloewald/xinjs-polygons#readme)'}),\n      a('npm', {href: 'https://www.npmjs.com/package/xinjs-polygons'}),\n      img({alt: 'bundlejs', src: 'https://deno.bundlejs.com/?q=xinjs-polygons&badge='}),\n      button('Reload', { onClick: handlers.loadSvg }),\n      button('Simplify', { onClick: handlers.simplify }),\n      input({\n        title: 'threshold',\n        placeholder: 'threshold',\n        min: '0.01',\n        step: '0.01',\n        max: '5',\n        type: 'range',\n        bindValue: 'settings.threshold'\n      }),\n      input({\n        type: 'number',\n        step: '0.01',\n        bindValue: 'settings.threshold',\n      })\n    ),\n    svgContainer\n  )\n} catch(e) {\n  console.log(e)\n}\n\nhandlers.loadSvg().catch(e => console.error(e))","export * from './polygons'","// polygon utilies, used for cleaning up region data\n// will be broken out to its own library\n\nexport interface Point {\n  x: number,\n  y: number\n}\n\nexport type Polygon = Point[]\n\n// this is the \"area\" of the triangle formced by 0, a, and b\n// it will be negative if ab goes from right-to-left\n\nexport function _area(a: Point, b: Point): number {\n  return a.y * b.x - 0.5 * (a.x * a.y + b.x * b.y + (b.x - a.x) * (a.y - b.y))\n}\n\nexport function stringToPolygon(source: string): Polygon {\n  const [polygon, leftover] = source.split(',').reduce((acc: [Polygon, number | undefined], num: string): [Polygon, number | undefined] => {\n    const [p, x] = acc\n    if (x === undefined) {\n      return [p, Number(num)]\n    } else {\n      p.push({x, y: Number(num)})\n      return [p, undefined]\n    }\n  }, [[] as Polygon, undefined])\n  if (leftover !== undefined) {\n    throw new Error('odd number of coordinates (expected even)')\n  }\n  return polygon\n}\n\nexport function polygonToString(points: Polygon): string {\n  return points.map(p => `${p.x},${p.y}`).join(',')\n}\n\nexport function simplify(points: Polygon, threshold = 0.5): Polygon {\n  if (points.length < 4) {\n    return points\n  }\n  return points.reduce((poly: Polygon, p: Point): Polygon => {\n    if (poly.length < 2) {\n      poly.unshift(p)\n    } else {\n      if (area(p, poly[0], poly[1]) < threshold) {\n        poly[0] = p\n      } else {\n        poly.unshift(p)\n      }\n    }\n    return poly\n  }, [] as Polygon)\n}\n\nexport function area(...points: Polygon): number {\n  if (points.length < 3) {\n    return 0\n  } else {\n    return Math.abs(points.reduce((totalArea, p, index) => {\n      const q = index === 0 ? points[points.length - 1] : points[index - 1]\n      return totalArea + _area(p, q)\n    }, 0))\n  }\n}","export default `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg viewBox=\"0 0 500 250\">\n<polygon points=\"241,118,240,119,240,117,238,116,238,115,239,114,239,113,239,113,239,111,241,110,241,111,243,111,244,112,246,111,247,113,245,116,246,118,241,118\"></polygon>\n<polygon points=\"251,117,247,118,246,118,246,118,246,116,247,114,246,110,250,110,251,113,251,116,252,116,251,117\"></polygon>\n<polygon points=\"313,118,311,118,308,120,307,119,305,120,300,119,299,116,296,114,296,113,297,113,298,110,299,110,300,107,300,107,301,105,302,105,303,104,303,105,307,105,309,108,308,110,310,110,309,110,310,112,317,114,313,118\"></polygon>\n<polygon points=\"263,83,264,86,264,88,263,89,264,91,266,91,267,92,258,98,255,99,254,97,252,97,250,95,238,87,238,85,239,85,243,83,243,82,245,82,245,81,246,81,246,80,248,80,249,80,248,79,248,77,247,76,254,74,262,74,261,74,262,77,260,78,263,81,263,83\"></polygon>\n<polygon points=\"306,104,310,107,309,108,306,105,303,105,303,104,302,105,301,105,301,101,304,100,305,104,305,103,306,104\"></polygon>\n<polygon points=\"244,107,244,108,242,109,242,111,241,111,241,110,240,111,239,110,239,111,238,110,238,110,238,109,237,108,235,108,234,108,234,107,233,105,234,103,235,104,237,103,242,103,241,90,243,90,252,96,252,97,254,97,255,99,256,98,256,101,255,104,249,104,246,105,245,107,244,106,244,107\"></polygon>\n<polygon points=\"284,118,283,119,282,118,281,119,277,118,276,119,276,120,273,120,272,122,270,119,270,117,272,115,276,114,276,113,278,112,280,110,281,110,283,111,283,113,284,113,284,113,285,114,288,118,285,118,285,118,284,118\"></polygon>\n<polygon points=\"231,106,227,106,229,106,231,106\"></polygon>\n<polygon points=\"228,109,228,109,228,109\"></polygon>\n<polygon points=\"298,144,300,146,299,149,298,147,298,145,297,145,295,144,297,142,296,140,297,140,296,138,298,139,299,141,298,142,298,144\"></polygon>\n<polygon points=\"266,131,267,130,266,128,267,128,268,128,270,128,270,128,270,126,269,125,270,124,269,123,268,123,268,122,272,123,273,120,276,120,275,126,273,128,272,130,270,132,270,131,269,132,268,131,267,132,266,131\"></polygon>\n<polygon points=\"292,131,291,131,290,129,291,129,292,128,292,128,293,130,292,131\"></polygon>\n<polygon points=\"316,55,317,56,318,56,317,55,319,54,320,53,323,53,326,54,326,56,323,58,321,57,319,58,315,58,316,55\"></polygon>\n<polygon points=\"294,94,285,94,284,83,285,81,290,82,293,81,294,81,295,82,298,82,298,84,298,86,296,85,295,83,295,84,300,92,299,92,299,93,297,95,294,94\" class=\"active\"></polygon>\n<polygon points=\"242,84,240,84,238,85,238,87,232,87,236,84,237,83,236,81,237,80,241,78,242,75,243,75,244,76,246,76,248,77,248,80,246,80,246,81,245,81,245,82,243,82,242,84\"></polygon>\n<polygon points=\"243,75,243,75,243,75\"></polygon>\n<polygon points=\"238,114,237,115,236,113,235,114,235,113,234,111,233,111,232,112,231,111,230,110,229,109,231,109,231,107,234,108,235,108,237,108,238,109,238,110,238,110,239,111,239,112,239,113,239,113,239,114,238,114\"></polygon>\n<polygon points=\"227,107,229,106,231,106,229,106,227,106,226,105,227,102,230,102,233,105,234,108,229,107,227,108,227,108,227,108,227,107\"></polygon>\n<polygon points=\"306,139,306,139,306,140,302,141,299,141,297,138,293,137,291,134,291,132,293,130,292,129,293,128,292,126,297,126,302,129,302,130,304,131,304,134,305,135,305,137,306,139\"></polygon>\n<polygon points=\"333,53,335,54,335,54,333,55,331,54,329,54,327,55,326,54,326,55,324,53,321,53,322,51,322,50,324,50,325,49,324,48,325,48,324,47,326,47,325,46,326,46,325,44,325,43,324,43,325,42,323,41,322,40,326,40,329,40,332,39,333,35,342,31,341,31,342,31,341,31,341,30,340,29,342,29,342,29,341,29,345,30,346,29,345,28,343,28,344,28,344,27,343,27,345,25,346,24,351,24,350,26,351,27,351,27,351,29,352,30,350,32,346,32,346,33,350,33,354,31,353,30,356,29,357,30,357,31,358,31,361,32,358,31,359,30,358,29,353,29,352,28,353,27,351,26,354,25,354,24,355,25,354,26,355,26,359,27,356,25,358,25,357,25,358,25,362,25,360,26,362,26,362,27,360,28,365,29,365,30,364,31,364,31,364,32,366,32,366,34,367,34,367,35,369,35,369,36,368,37,369,37,367,39,369,40,369,40,364,41,357,40,356,42,353,44,349,44,348,44,348,45,350,46,348,47,348,48,346,48,341,50,335,50,335,51,336,51,335,51,334,52,335,52,333,53\"></polygon>\n<polygon points=\"310,109,310,109,310,109\"></polygon>\n<polygon points=\"270,117,270,119,272,121,272,123,270,122,264,122,263,119,263,120,262,119,262,117,264,116,265,115,266,116,266,115,269,110,270,109,270,107,271,107,271,110,272,111,269,112,272,114,270,117\"></polygon>\n<polygon points=\"235,115,234,115,232,114,232,112,233,111,234,111,235,112,235,114,236,114,235,115\"></polygon>\n<polygon points=\"287,158,285,161,282,160,281,162,279,162,279,161,278,159,278,156,279,156,279,150,282,150,283,151,285,150,286,152,289,153,289,155,291,156,287,158\"></polygon>\n<polygon points=\"293,156,289,155,289,153,286,152,285,150,288,150,291,147,296,148,295,151,296,153,295,155,293,156\"></polygon>\n<polygon points=\"233,89,233,92,232,93,232,95,227,95,226,96,226,95,228,92,228,92,229,91,230,89,231,88,232,87,238,87,238,89,233,89\"></polygon>\n<polygon points=\"283,172,278,173,276,172,276,173,275,171,275,170,275,169,273,165,274,164,274,165,275,165,278,164,278,159,279,161,279,162,280,162,282,160,285,161,288,158,290,156,293,156,294,159,294,161,294,161,293,162,294,163,294,163,294,162,296,162,295,165,289,171,286,172,283,172\"></polygon>\n<polygon points=\"299,117,299,118,300,118,300,119,298,119,297,120,293,120,291,119,289,119,289,119,287,116,284,113,285,111,286,111,287,112,290,112,292,111,293,111,295,110,295,108,296,108,296,110,297,111,297,113,296,113,296,114,297,115,299,117\"></polygon>\n<polygon points=\"293,126,291,127,292,124,293,122,293,122,293,120,297,120,297,119,299,122,297,125,297,126,293,126\"></polygon>\n<polygon points=\"300,107,299,110,298,110,297,112,296,110,296,108,295,108,295,108,295,110,293,111,292,111,290,112,287,112,286,111,285,111,284,113,283,113,283,111,282,110,281,107,280,107,282,103,283,103,283,97,285,97,285,94,294,94,297,95,299,93,301,94,302,96,302,99,304,100,301,101,301,106,300,107,300,107\"></polygon>\n<polygon points=\"271,131,272,130,273,128,275,126,276,119,277,118,277,118,279,119,283,120,281,120,283,122,281,122,281,123,283,125,282,126,283,126,282,126,284,127,281,128,281,128,281,128,279,128,279,131,278,131,278,135,277,135,277,136,274,136,273,133,267,133,268,131,269,132,270,131,270,132,271,131\"></polygon>\n<polygon points=\"261,119,258,119,256,116,254,116,254,112,255,110,255,109,256,106,258,106,260,107,261,106,263,107,265,106,267,107,269,106,270,108,270,109,269,110,266,115,266,116,264,115,262,117,262,118,261,119\"></polygon>\n<polygon points=\"269,125,270,126,270,128,267,128,267,128,266,128,267,130,266,131,263,128,262,126,263,126,263,125,264,125,263,124,263,124,266,124,266,122,268,122,268,123,270,123,270,124,269,125\"></polygon>\n<polygon points=\"252,116,251,116,251,113,250,110,251,110,251,111,252,111,253,116,252,116\"></polygon>\n<polygon points=\"292,128,291,129,290,129,291,127,292,126,293,128,292,128\"></polygon>\n<polygon points=\"281,140,281,141,283,140,283,143,281,143,281,148,283,149,279,150,276,149,269,149,268,149,266,149,267,144,269,142,269,140,268,138,269,137,267,133,273,133,274,136,277,136,277,135,280,135,280,138,281,140\"></polygon>\n<polygon points=\"291,132,291,134,293,136,290,137,289,138,290,139,289,141,290,142,291,142,291,144,290,144,288,141,287,142,286,142,285,141,284,141,283,140,281,141,280,135,278,135,277,134,278,133,278,131,279,131,279,128,281,128,281,128,281,128,284,127,282,126,283,126,282,126,283,125,281,123,281,122,283,122,281,120,283,120,281,119,282,118,285,118,285,118,288,118,289,119,291,119,293,120,293,122,293,122,292,124,291,127,290,128,291,132\"></polygon>\n<polygon points=\"290,147,290,148,287,150,284,149,283,149,281,148,281,143,283,143,283,140,284,141,285,141,286,142,287,142,288,141,290,144,291,144,291,142,290,142,289,141,290,139,289,138,290,137,293,136,296,138,297,140,296,140,297,142,295,144,296,144,292,146,292,147,290,147\"></polygon>\n<polygon points=\"266,123,266,124,263,123,264,122,266,122,266,123\"></polygon>\n<polygon points=\"296,160,295,161,295,162,296,161,296,162,295,162,294,159,293,156,295,155,296,153,295,151,296,148,292,147,292,146,296,144,297,145,298,145,298,146,298,147,299,149,300,146,298,144,298,141,302,141,306,140,306,146,305,148,303,149,300,151,298,152,298,154,299,156,299,158,296,160\"></polygon>\n<polygon points=\"294,161,295,162,294,163,293,162,294,161,294,161\"></polygon>\n<polygon points=\"310,125,308,127,307,126,307,121,308,119,312,118,317,114,311,113,309,110,310,109,312,111,321,109,321,111,321,111,321,111,321,112,317,119,310,125\"></polygon>\n<polygon points=\"239,118,240,119,238,119,234,116,236,113,237,113,237,115,238,115,238,114,239,115,238,116,240,117,239,118\"></polygon>\n<polygon points=\"308,127,306,129,304,131,302,130,302,129,297,126,297,125,299,122,297,119,298,119,300,119,305,120,307,119,308,119,307,121,307,126,308,127\"></polygon>\n<polygon points=\"289,167,289,167,288,166,290,165,291,166,289,167\"></polygon>\n<polygon points=\"278,112,276,113,276,114,272,115,269,112,270,111,272,111,271,110,271,107,270,107,269,105,272,102,272,97,271,95,271,93,272,92,283,98,283,103,282,103,280,107,281,107,282,110,280,110,279,112,278,112\"></polygon>\n<polygon points=\"256,106,255,108,255,109,254,108,253,108,253,107,251,107,252,106,251,106,250,104,255,104,256,101,256,98,258,98,267,92,270,94,271,93,271,95,272,97,272,102,269,105,269,106,267,107,265,106,263,107,261,106,260,107,258,106,256,106\"></polygon>\n<polygon points=\"234,103,233,105,230,102,227,102,227,103,228,100,227,98,228,97,227,95,226,96,232,95,232,93,233,92,233,89,238,89,238,87,243,90,241,90,242,103,237,103,235,104,234,103\"></polygon>\n<polygon points=\"249,110,246,110,246,112,246,111,243,112,242,111,242,109,244,108,244,106,245,107,247,105,250,104,250,104,251,106,252,106,251,107,253,107,253,109,252,110,249,110\"></polygon>\n<polygon points=\"254,114,254,116,252,116,252,112,251,111,252,109,253,109,254,108,255,109,255,110,254,112,254,114\"></polygon>\n<polygon points=\"266,80,264,81,264,82,263,83,263,80,261,79,260,78,262,76,261,74,263,73,264,73,264,74,265,74,265,75,266,76,264,78,266,79,266,80\"></polygon>\n<polygon points=\"260,123,260,123,260,123\"></polygon>\n<polygon points=\"285,88,285,97,283,97,283,98,272,92,270,94,264,91,263,89,264,88,264,86,263,83,264,82,264,81,266,80,266,79,271,80,272,81,276,83,278,82,278,80,281,79,282,80,285,81,284,83,285,88\" class=\"active\"></polygon>\n<polygon points=\"278,163,278,164,277,165,274,165,274,164,273,165,272,164,271,162,270,156,267,151,266,149,268,149,269,149,276,149,279,150,284,149,285,150,283,151,282,150,279,150,279,156,278,156,278,163\"></polygon>\n<polygon points=\"7,53,6,53,8,52,7,53\"></polygon>\n<polygon points=\"162,180,162,182,163,182,160,182,160,183,150,183,150,180,152,179,151,176,152,175,153,177,155,177,155,175,160,175,160,174,162,174,162,180\"></polygon>\n<polygon points=\"159,156,161,157,161,156,163,156,163,156,163,159,162,161,158,162,157,161,158,160,155,160,155,159,157,158,158,159,158,157,159,159,161,159,161,158,160,158,159,156\"></polygon>\n<polygon points=\"42,42,40,43,39,43,40,42,39,42,40,41,43,41,42,40,42,40,40,40,36,43,37,43,36,44,30,47,30,47,25,48,25,48,27,48,27,47,31,45,31,44,32,43,30,44,30,43,29,44,27,43,25,44,25,37,27,36,26,36,27,35,25,35,25,33,26,33,25,33,25,32,26,33,25,32,25,27,33,26,34,26,33,27,35,26,39,27,39,27,38,27,39,27,51,28,54,28,54,42,54,41,50,42,46,41,47,40,44,40,45,40,43,41,44,41,44,41,44,41,42,42\"></polygon>\n<polygon points=\"162,100,162,100,162,100\"></polygon>\n<polygon points=\"164,101,164,101,164,101\"></polygon>\n<polygon points=\"185,136,185,136,185,138,186,139,185,141,186,141,186,143,184,143,182,143,182,142,181,143,180,143,180,142,180,143,180,140,182,137,182,135,183,134,183,133,183,132,184,133,184,135,185,136\"></polygon>\n<polygon points=\"167,171,169,172,169,173,171,174,170,175,171,176,169,178,165,179,163,179,164,180,163,180,163,181,164,181,163,182,162,182,162,173,164,173,165,172,167,171\"></polygon>\n<polygon points=\"159,188,157,188,156,189,151,189,151,188,150,187,151,187,150,187,151,186,150,184,160,183,161,184,161,183,162,184,160,184,161,185,159,186,159,188\"></polygon>\n<polygon points=\"160,167,158,164,154,164,155,162,155,160,158,160,157,161,159,162,158,163,159,164,159,164,160,167\"></polygon>\n<polygon points=\"163,173,162,173,162,174,160,174,160,170,159,169,159,168,160,166,159,164,161,161,162,161,163,159,163,156,165,158,170,160,169,163,173,163,174,162,174,161,175,161,175,163,173,164,170,167,169,172,166,171,164,173,163,173\"></polygon>\n<polygon points=\"157,157,158,155,159,156,159,157,160,158,161,158,161,159,160,159,159,159,158,157,158,159,157,158,157,157\"></polygon>\n<polygon points=\"156,167,154,166,154,165,153,164,154,164,158,164,160,167,159,169,157,169,156,167\"></polygon>\n<polygon points=\"152,170,156,170,157,171,157,175,155,175,155,177,153,177,152,175,152,174,153,171,152,170\"></polygon>\n<polygon points=\"151,189,156,189,157,190,159,191,158,192,154,195,154,197,155,198,150,197,149,197,150,195,148,196,148,195,148,193,150,192,149,191,150,191,151,189\"></polygon>\n<polygon points=\"153,167,154,164,154,165,154,166,156,167,157,169,156,169,156,170,154,169,152,170,152,168,153,167\"></polygon>\n<polygon points=\"159,169,160,170,160,175,157,175,156,169,159,169\"></polygon>\n<polygon points=\"158,161,160,161,160,164,159,164,158,163,159,162,158,161\"></polygon>\n<polygon points=\"153,108,153,108,153,108\"></polygon>\n<polygon points=\"155,201,155,198,155,199,155,199,156,200,160,201,158,201,155,201\"></polygon>\n<polygon points=\"174,161,173,163,169,163,170,160,165,158,163,156,164,152,167,152,169,152,169,156,172,156,173,158,175,158,174,161\"></polygon>\n<polygon points=\"104,96,103,96,104,96\"></polygon>\n<polygon points=\"125,58,122,58,123,57,124,57,124,58,125,58\"></polygon>\n<polygon points=\"187,146,186,146,186,141,185,141,186,140,187,139,188,140,189,140,189,138,191,138,193,137,194,138,195,137,197,137,198,139,197,140,198,141,196,143,196,147,195,150,194,149,195,147,194,147,193,147,192,146,189,145,189,145,187,146\"></polygon>\n<polygon points=\"167,106,167,107,167,106\"></polygon>\n<polygon points=\"179,126,180,125,179,126,180,125,183,125,182,127,180,128,182,127,181,128,183,127,183,126,186,127,185,130,182,132,183,133,182,135,182,137,180,139,177,138,178,138,177,136,178,134,177,132,177,130,178,129,177,127,178,127,177,126,176,123,174,122,174,122,177,122,178,119,180,122,181,123,179,126\"></polygon>\n<polygon points=\"128,101,128,101,128,101\"></polygon>\n<polygon points=\"169,54,167,55,169,54\"></polygon>\n<polygon points=\"167,118,166,119,167,120,167,121,167,122,168,123,168,125,167,125,166,126,165,126,164,127,163,126,163,122,161,122,160,119,163,120,163,119,165,119,166,118,167,118\"></polygon>\n<polygon points=\"154,126,153,131,152,130,153,129,152,128,150,128,149,128,146,125,142,124,140,123,143,120,142,119,143,117,142,115,143,114,143,113,143,114,143,113,145,112,145,110,148,109,150,108,151,108,149,110,148,112,149,113,149,115,150,115,153,115,154,117,156,117,156,119,157,120,156,121,157,122,157,123,156,122,153,123,153,124,154,124,153,124,154,126\"></polygon>\n<polygon points=\"96,66,96,67,87,67,87,66,86,66,86,64,87,63,88,62,88,61,89,62,92,62,93,63,96,63,96,66\"></polygon>\n<polygon points=\"99,18,100,19,99,19,101,19,100,20,102,19,104,20,103,21,97,21,97,20,99,20,97,20,98,19,97,19,99,18\"></polygon>\n<polygon points=\"108,36,97,35,95,34,92,34,81,30,81,28,89,29,92,30,89,31,90,31,97,31,100,32,99,32,101,33,100,32,101,32,101,32,101,32,100,31,103,30,99,30,100,30,103,29,105,31,106,30,109,31,113,31,113,30,115,30,116,30,116,31,117,30,116,31,118,32,117,30,120,30,120,30,120,29,119,30,120,28,116,28,117,27,116,27,116,26,119,25,118,25,120,25,121,26,121,27,123,28,122,27,121,28,122,28,121,28,125,29,123,29,124,29,124,30,125,30,126,29,126,32,108,32,108,36\"></polygon>\n<polygon points=\"115,24,116,24,116,25,116,25,114,25,114,26,113,26,107,24,111,24,110,23,115,24\"></polygon>\n<polygon points=\"100,23,103,24,105,26,105,26,110,27,110,28,106,28,107,28,107,29,108,28,109,29,107,29,104,29,104,29,102,28,99,30,93,30,92,29,93,29,88,29,87,28,97,28,97,24,99,24,100,26,101,25,100,23,100,23\"></polygon>\n<polygon points=\"176,150,177,151,179,152,179,153,175,158,173,158,172,156,169,156,170,150,172,149,173,150,175,149,175,150,176,150\"></polygon>\n<polygon points=\"128,95,130,96,128,98,129,98,128,100,128,99,127,100,126,100,126,98,128,96,128,95\"></polygon>\n<polygon points=\"163,111,165,112,165,113,167,113,166,115,166,115,165,116,165,117,166,118,163,119,163,120,160,119,161,122,162,122,159,124,159,124,158,124,157,123,157,122,156,121,157,120,156,119,156,116,154,117,153,115,150,115,149,112,148,112,149,110,151,109,150,109,151,110,150,111,150,112,151,112,151,112,151,110,153,109,153,108,153,109,155,109,155,110,158,110,160,111,162,110,161,110,164,110,163,110,163,111\"></polygon>\n<polygon points=\"176,117,178,119,177,122,175,122,175,120,174,118,175,117,176,117\"></polygon>\n<polygon points=\"139,98,139,98,139,98\"></polygon>\n<polygon points=\"128,72,132,74,132,75,131,76,132,80,132,84,130,83,130,83,129,83,129,82,128,83,128,82,128,83,124,83,126,83,125,84,126,84,126,85,125,84,125,85,120,83,118,84,118,84,118,85,116,86,117,85,116,85,116,86,115,86,115,87,114,87,115,87,115,89,112,88,112,87,109,84,107,84,107,85,105,84,104,82,104,81,107,81,107,74,108,74,108,73,109,73,109,70,108,70,108,69,109,69,109,67,110,67,109,64,111,63,110,63,111,62,111,61,109,61,110,60,110,59,106,59,105,57,118,57,118,56,119,57,126,58,122,60,124,60,124,60,128,61,128,62,128,63,129,63,128,66,129,67,130,67,128,68,128,72\"></polygon>\n<polygon points=\"106,85,106,86,106,88,105,88,103,88,101,89,98,86,99,86,99,82,100,82,100,81,102,81,104,83,105,84,106,85\"></polygon>\n<polygon points=\"131,33,132,34,133,34,136,35,137,36,136,36,139,36,137,37,135,36,131,37,131,36,129,37,130,36,130,34,131,33\"></polygon>\n<polygon points=\"132,112,131,111,131,109,134,110,135,112,135,112,135,114,131,111,132,112\"></polygon>\n<polygon points=\"89,57,87,57,88,56,89,57\"></polygon>\n<polygon points=\"179,146,176,148,176,150,175,150,175,149,173,150,172,149,170,150,169,149,169,148,166,148,166,144,167,142,167,141,165,140,164,137,169,137,169,135,170,137,171,138,180,139,180,141,180,143,179,146\"></polygon>\n<polygon points=\"154,108,154,108,154,108\"></polygon>\n<polygon points=\"223,15,223,15,224,15,221,16,221,16,220,17,221,17,223,17,224,17,221,17,224,18,225,18,218,18,223,19,220,19,223,20,218,20,219,14,223,15\"></polygon>\n<polygon points=\"56,36,56,36,56,36\"></polygon>\n<polygon points=\"83,45,83,50,79,48,78,46,83,45\"></polygon>\n<polygon points=\"93,63,92,62,91,62,91,60,89,59,89,57,105,57,106,59,108,59,108,60,110,61,109,61,111,61,111,62,110,63,111,63,109,64,110,67,109,67,109,69,108,69,108,70,109,70,109,73,108,73,108,74,107,74,107,81,104,81,104,82,102,81,99,81,99,76,96,76,95,74,95,74,92,74,92,67,96,67,96,63,93,63\"></polygon>\n<polygon points=\"132,67,129,67,130,66,130,64,130,63,131,62,132,63,132,61,134,62,134,62,134,63,133,65,135,64,136,65,134,67,132,67\"></polygon>\n<polygon points=\"125,60,127,59,127,60,130,61,132,60,134,61,131,61,130,62,129,61,128,62,129,62,128,61,126,61,125,60\"></polygon>\n<polygon points=\"165,103,165,104,165,103\"></polygon>\n<polygon points=\"92,57,88,56,88,55,85,53,86,52,86,52,83,51,83,42,97,42,97,51,99,51,97,52,97,57,92,57\"></polygon>\n<polygon points=\"156,138,148,135,148,134,149,132,150,131,153,131,156,138\"></polygon>\n<polygon points=\"126,106,125,106,126,105,128,106,128,107,126,106\"></polygon>\n<polygon points=\"201,134,202,135,201,135,199,137,198,136,198,135,197,136,194,135,194,136,192,138,189,138,189,140,187,140,186,139,185,138,185,136,184,135,184,133,182,132,185,130,186,126,187,127,187,127,188,127,188,128,188,130,188,128,189,129,190,128,191,129,194,129,198,132,201,132,201,134\"></polygon>\n<polygon points=\"167,61,166,61,166,61,167,61\"></polygon>\n<polygon points=\"188,42,187,42,188,41,187,41,188,41,187,41,187,41,186,41,187,40,186,41,187,40,183,41,184,40,183,40,183,40,182,40,183,39,182,39,182,39,181,39,182,39,181,39,182,39,180,38,181,37,180,38,180,38,180,37,180,37,179,37,180,37,179,37,180,37,179,37,179,36,178,36,180,36,178,36,180,35,179,35,180,35,181,36,179,34,180,35,178,36,178,35,179,35,177,35,178,34,177,34,180,34,177,34,177,34,176,34,178,33,176,33,180,32,175,33,176,33,175,33,177,33,176,32,177,32,175,32,180,32,175,31,181,31,177,31,178,31,175,31,176,30,178,31,176,30,180,31,179,30,179,30,176,30,179,30,180,29,179,30,179,29,180,29,180,29,180,29,180,29,179,29,180,28,179,28,180,28,174,27,180,27,179,27,179,27,178,26,179,26,177,26,178,26,177,26,179,26,176,26,178,25,176,25,175,25,175,26,173,26,172,25,174,25,173,25,174,25,173,24,174,24,173,23,174,23,172,23,173,22,172,22,172,22,170,22,172,21,168,20,169,20,169,20,161,19,158,15,160,15,160,14,162,14,156,13,162,12,163,13,162,12,165,12,165,12,166,12,165,11,166,11,172,12,167,11,169,11,174,11,176,11,175,12,176,11,181,12,179,11,181,11,179,10,180,10,188,11,189,11,188,11,188,11,188,11,191,11,186,10,195,10,187,10,196,10,196,10,199,10,196,9,202,9,214,9,201,10,215,9,216,10,214,10,220,10,204,11,216,11,213,12,213,12,221,11,220,12,217,13,224,12,223,12,228,11,234,12,229,13,221,13,228,13,221,14,222,14,226,14,225,14,219,14,218,20,223,20,223,21,219,20,220,20,219,20,222,21,219,21,224,22,219,22,219,22,219,22,220,23,220,22,222,22,221,23,219,23,217,23,219,23,214,22,216,23,212,23,213,23,212,23,212,24,215,24,212,24,216,24,213,24,215,24,215,25,216,25,216,26,210,25,212,25,210,26,215,26,211,26,212,26,209,27,213,27,210,28,212,28,215,27,219,28,213,30,208,30,206,30,205,30,206,31,204,31,202,33,198,33,198,34,197,33,198,33,197,33,197,33,197,33,197,34,195,34,194,34,195,34,194,35,193,35,194,36,192,36,194,36,194,37,192,36,193,37,192,37,192,37,191,37,192,38,190,38,191,38,190,38,192,39,190,39,191,39,190,40,191,40,189,40,191,40,190,41,190,41,189,41,190,42,189,41,188,42\"></polygon>\n<polygon points=\"171,53,161,53,161,52,162,52,162,52,161,52,160,53,158,53,158,51,156,52,157,51,156,50,157,49,156,49,157,49,157,48,159,49,161,49,162,48,161,48,161,47,162,47,161,47,162,45,160,44,162,43,160,43,161,43,161,42,160,42,160,41,162,43,161,43,163,43,162,44,163,44,162,44,164,45,163,45,165,46,163,46,164,46,164,47,166,48,166,48,166,49,167,48,167,48,168,48,167,49,168,48,168,49,170,49,167,50,169,50,166,51,170,50,171,50,170,51,171,53\"></polygon>\n<polygon points=\"151,95,151,95,151,95\"></polygon>\n<polygon points=\"165,108,165,108,165,108\"></polygon>\n<polygon points=\"165,102,165,102,165,102\"></polygon>\n<polygon points=\"125,106,123,105,122,104,123,103,124,103,123,101,124,101,124,100,126,100,126,103,127,103,125,106\"></polygon>\n<polygon points=\"141,130,140,132,139,131,138,131,139,128,139,129,137,128,139,124,141,123,142,124,144,124,145,125,145,125,146,126,141,130\"></polygon>\n<polygon points=\"170,116,171,118,170,118,169,119,172,122,170,122,168,123,167,122,167,121,167,120,166,119,167,118,165,117,165,116,166,115,166,115,167,114,167,113,169,115,169,116,169,115,170,116\"></polygon>\n<polygon points=\"161,63,162,62,160,62,161,61,163,62,164,61,165,62,161,63,159,65,158,64,158,63,160,62,161,63\"></polygon>\n<polygon points=\"146,96,147,97,142,97,143,96,141,96,141,95,136,94,136,94,137,94,136,93,132,95,134,93,138,93,146,96\"></polygon>\n<polygon points=\"90,81,91,80,96,81,99,81,99,86,98,86,99,88,98,88,96,87,97,86,94,85,93,82,90,81\"></polygon>\n<polygon points=\"129,72,129,72,129,72\"></polygon>\n<polygon points=\"130,72,130,72,130,72\"></polygon>\n<polygon points=\"132,71,132,71,132,71\"></polygon>\n<polygon points=\"132,71,130,72,130,71,128,71,128,68,130,68,130,67,132,67,132,70,132,71\"></polygon>\n<polygon points=\"130,67,129,68,130,67\"></polygon>\n<polygon points=\"130,72,130,72,130,72,130,72\"></polygon>\n<polygon points=\"128,72,128,71,130,71,130,72,128,72\"></polygon>\n<polygon points=\"130,68,129,68,130,68\"></polygon>\n<polygon points=\"65,30,64,30,65,30\"></polygon>\n<polygon points=\"139,20,138,20,140,20,138,21,140,21,132,21,132,20,139,20\"></polygon>\n<polygon points=\"139,10,145,10,144,11,145,10,142,10,156,10,155,10,156,10,156,12,154,12,156,12,152,12,156,12,156,13,152,13,153,14,149,14,152,14,151,14,147,14,146,14,148,15,142,15,147,15,142,15,146,16,143,16,145,16,145,17,141,17,142,17,141,18,136,18,142,18,141,19,137,19,138,19,135,18,136,19,132,19,132,18,134,18,134,17,136,17,132,17,132,15,136,16,134,16,137,15,132,15,134,15,132,15,132,14,138,14,139,14,134,13,144,13,140,13,143,12,140,12,140,12,139,13,132,13,132,12,136,12,132,12,132,11,133,11,132,10,140,11,135,11,138,10,137,10,141,10,138,10,139,10\"></polygon>\n<polygon points=\"132,30,133,29,132,29,132,28,136,28,134,28,137,29,136,29,137,30,135,30,137,31,134,33,133,32,132,32,132,30\"></polygon>\n<polygon points=\"144,24,140,24,138,23,142,23,144,24\"></polygon>\n<polygon points=\"133,23,137,23,139,24,138,24,138,24,138,25,139,24,142,25,140,25,142,25,141,24,142,24,146,24,146,25,144,25,147,25,145,26,146,25,146,26,148,25,147,26,148,26,147,26,149,26,148,26,149,25,151,26,149,27,150,27,149,27,152,26,150,27,151,27,151,28,153,27,152,27,155,27,152,28,155,28,153,28,156,27,155,28,153,28,156,29,154,29,155,29,154,29,155,29,155,29,156,29,154,29,156,30,156,33,155,33,156,34,156,37,154,36,156,37,156,39,151,37,150,37,151,37,149,36,148,36,148,35,148,36,148,35,147,36,147,35,146,35,146,35,147,36,142,36,141,35,142,34,148,34,147,33,150,32,148,30,148,30,147,30,148,30,145,29,144,30,145,29,143,28,143,28,143,28,143,28,142,28,142,27,140,27,139,27,140,27,141,28,136,28,138,28,135,27,137,28,132,28,132,26,133,25,132,25,132,25,133,25,132,25,132,24,133,24,132,23,133,24,132,23,133,23\"></polygon>\n<polygon points=\"164,154,163,156,161,156,161,157,160,156,158,155,157,157,156,157,155,153,155,152,153,149,154,148,154,147,155,142,153,140,155,140,157,139,159,138,160,142,166,144,166,148,169,148,169,149,170,150,170,153,168,152,164,152,164,154\"></polygon>\n<polygon points=\"144,100,143,100,141,100,143,99,144,100\"></polygon>\n<polygon points=\"59,43,62,42,66,45,65,46,65,45,64,45,65,45,64,45,65,45,64,44,64,44,63,44,62,42,62,42,62,44,61,44,61,43,61,43,61,43,60,43,61,44,60,44,58,43,59,43\"></polygon>\n<polygon points=\"130,72,130,72,131,71,130,72\"></polygon>\n<polygon points=\"132,74,133,74,132,74,132,74\"></polygon>\n<polygon points=\"162,101,162,100,162,101\"></polygon>\n<polygon points=\"153,149,153,150,152,150,151,149,146,146,144,145,144,144,139,135,137,133,138,133,137,131,138,130,139,130,138,131,140,132,141,130,145,127,146,126,145,125,146,125,149,128,150,128,153,129,152,130,153,131,152,131,149,132,148,134,147,135,149,137,148,138,150,138,150,139,152,138,152,140,153,140,155,142,154,147,154,148,153,149\"></polygon>\n<polygon points=\"132,110,131,110,128,107,129,107,129,106,131,106,132,104,135,104,134,110,132,110\"></polygon>\n<polygon points=\"167,125,168,125,169,127,172,128,169,134,169,135,169,137,164,137,163,136,162,136,161,137,160,138,158,138,157,139,156,138,153,131,154,127,153,124,154,124,153,124,153,123,156,122,157,123,158,124,159,124,159,124,161,122,162,122,163,124,163,126,164,127,165,126,166,126,167,125\"></polygon>\n<polygon points=\"91,62,88,62,88,61,88,62,87,63,86,64,86,66,87,66,87,67,92,67,92,75,91,75,91,77,91,79,91,79,87,80,85,78,82,77,82,76,80,73,80,72,79,72,78,71,77,69,78,67,77,66,78,61,78,61,78,61,78,60,78,60,78,60,78,60,77,58,80,58,79,59,80,58,80,59,79,60,80,59,80,57,89,57,89,59,91,60,91,62\"></polygon>\n<polygon points=\"162,100,162,100,162,100\"></polygon>\n<polygon points=\"199,140,198,141,197,140,198,139,197,138,198,137,199,138,201,137,199,140\"></polygon>\n<polygon points=\"162,100,162,100,162,100\"></polygon>\n<polygon points=\"165,104,165,104,165,104\"></polygon>\n<polygon points=\"113,89,112,89,109,84,108,84,107,85,107,85,107,84,109,84,112,87,112,88,115,89,115,90,113,89\"></polygon>\n<polygon points=\"104,93,106,95,105,96,104,96,104,95,103,94,100,90,98,89,98,88,100,88,101,90,104,93\"></polygon>\n<polygon points=\"91,86,93,86,98,93,97,93,94,91,94,89,93,88,92,88,90,86,92,87,91,86\"></polygon>\n<polygon points=\"128,62,128,61,124,60,128,61,129,62,128,62\"></polygon>\n<polygon points=\"119,103,118,102,116,103,114,103,104,98,103,97,104,96,105,96,106,95,105,94,106,92,108,91,107,90,110,91,111,93,114,94,117,99,119,100,122,99,122,100,124,100,124,101,123,101,124,102,123,103,122,105,119,102,119,103\"></polygon>\n<polygon points=\"124,96,125,95,128,95,128,96,126,98,126,100,122,100,122,99,123,99,124,96\"></polygon>\n<polygon points=\"67,48,67,48,67,48\"></polygon>\n<polygon points=\"172,60,172,60,172,60\"></polygon>\n<polygon points=\"157,58,160,59,159,60,160,60,160,61,161,61,158,62,156,62,156,62,156,60,154,59,155,58,157,58\"></polygon>\n<polygon points=\"107,90,108,91,106,92,105,94,104,94,101,90,103,88,105,88,106,88,106,86,106,85,108,84,109,84,112,89,115,89,115,90,115,90,114,90,114,94,111,93,110,91,107,90\"></polygon>\n<polygon points=\"172,173,170,173,169,172,170,167,171,167,172,168,173,168,176,170,175,173,172,173\"></polygon>\n<polygon points=\"146,63,147,62,144,62,141,61,139,59,140,53,140,54,140,53,141,52,140,51,140,50,139,49,142,48,144,47,143,44,141,44,143,42,142,41,143,41,142,41,142,40,141,41,142,40,142,39,142,38,146,39,148,38,150,39,150,39,151,39,150,40,151,40,153,40,153,42,151,42,153,42,153,43,154,43,152,44,154,43,155,44,154,45,156,44,155,44,156,44,156,45,158,43,158,44,158,43,159,43,159,43,160,43,159,42,160,41,160,42,161,42,161,43,160,43,162,43,160,44,162,45,161,47,162,47,161,47,161,48,162,48,161,49,159,49,157,48,157,49,156,49,157,49,156,50,157,51,156,52,158,51,158,53,160,53,161,52,162,52,162,52,161,52,161,53,171,53,171,53,168,54,167,55,164,55,158,55,158,55,156,57,155,57,152,60,149,61,157,57,160,57,161,58,159,58,155,58,153,60,152,62,151,63,146,63\"></polygon>\n<polygon points=\"164,102,164,102,164,102\"></polygon>\n<polygon points=\"143,90,143,90,143,90\"></polygon>\n<polygon points=\"132,82,131,76,132,75,133,74,130,72,132,71,132,71,132,67,136,67,140,66,140,65,144,65,144,64,146,63,152,62,154,59,156,60,156,62,157,63,155,64,154,63,154,64,152,64,151,66,152,67,153,67,153,67,151,67,151,67,151,68,148,68,146,71,145,70,146,72,145,73,145,72,144,71,145,70,144,70,144,72,143,72,144,72,143,72,144,74,143,73,144,74,145,75,144,74,145,75,143,75,145,76,143,76,144,76,143,76,144,76,144,77,138,80,137,82,139,88,138,90,137,90,136,88,136,88,136,88,135,87,136,86,135,86,135,84,133,83,131,84,132,82\"></polygon>\n<polygon points=\"127,57,127,57,127,57\"></polygon>\n<polygon points=\"25,32,23,32,22,31,18,30,19,29,23,29,25,27,25,32\"></polygon>\n<polygon points=\"25,35,24,36,19,35,18,35,19,34,16,34,23,33,22,33,25,33,25,35\"></polygon>\n<polygon points=\"25,42,22,42,20,41,21,40,19,39,22,37,23,37,25,37,25,42\"></polygon>\n<polygon points=\"205,130,205,130,205,130\"></polygon>\n<polygon points=\"109,59,108,60,108,59,109,59\"></polygon>\n<polygon points=\"110,60,109,60,110,60\"></polygon>\n<polygon points=\"110,60,110,60,110,61,108,60,110,60\"></polygon>\n<polygon points=\"102,81,106,85,105,84,104,83,102,81,99,82,100,81,100,81,102,81\"></polygon>\n<polygon points=\"142,113,143,114,142,115,141,114,141,113,142,114,140,112,138,114,139,115,138,115,138,115,137,114,137,114,136,113,135,114,135,113,135,112,137,113,140,112,142,113\"></polygon>\n<polygon points=\"156,10,160,10,165,11,156,12,156,10\"></polygon>\n<polygon points=\"156,34,157,34,157,35,157,35,160,35,159,36,160,36,160,36,160,37,159,36,160,38,159,37,159,38,158,37,158,37,156,37,156,34\"></polygon>\n<polygon points=\"156,30,157,30,156,30,158,30,157,31,158,31,158,31,158,31,160,31,159,31,160,31,161,31,160,31,161,32,160,32,162,31,161,32,163,32,163,32,164,32,165,32,163,33,164,33,162,33,163,33,163,33,163,34,162,33,162,35,159,34,161,33,159,33,159,33,158,33,156,32,157,33,156,33,157,33,156,33,156,30\"></polygon>\n<polygon points=\"175,118,175,120,174,122,172,121,172,122,171,122,169,119,170,118,171,118,171,117,175,117,175,118\"></polygon>\n<polygon points=\"99,80,99,81,96,81,91,80,91,77,91,75,91,75,92,74,95,74,95,74,96,76,99,76,99,80\"></polygon>\n<polygon points=\"148,99,149,99,148,99\"></polygon>\n<polygon points=\"164,110,164,110,164,110\"></polygon>\n<polygon points=\"167,142,166,144,164,144,160,142,159,138,157,139,158,138,160,138,161,137,162,136,163,136,165,137,165,140,167,140,167,142\"></polygon>\n<polygon points=\"158,99,158,99,158,99\"></polygon>\n<polygon points=\"119,57,119,57,119,57\"></polygon>\n<polygon points=\"132,12,125,12,125,12,129,12,122,12,132,11,132,12\"></polygon>\n<polygon points=\"113,19,114,19,114,20,115,20,111,21,110,20,111,20,108,20,108,20,109,20,108,19,111,20,111,19,112,19,110,19,113,19\"></polygon>\n<polygon points=\"125,16,126,16,122,16,121,16,123,16,119,15,124,15,118,15,117,15,119,14,116,14,119,14,118,14,119,14,116,13,120,13,117,13,121,12,119,12,120,12,127,14,128,13,128,14,129,14,129,15,132,15,128,16,128,15,127,16,128,16,127,16,127,16,125,16\"></polygon>\n<polygon points=\"132,21,122,21,122,21,122,20,121,19,118,19,118,19,115,18,117,18,121,18,120,19,124,19,124,19,123,19,126,19,123,19,126,20,132,20,132,21\"></polygon>\n<polygon points=\"132,19,125,19,130,18,127,17,129,17,132,18,132,19\"></polygon>\n<polygon points=\"132,28,127,27,126,26,129,26,125,26,125,25,126,25,125,24,128,23,132,23,130,24,130,24,130,25,132,26,129,26,132,26,132,28\"></polygon>\n<polygon points=\"125,36,124,37,119,36,123,37,124,37,122,38,122,38,120,39,120,39,119,40,120,40,118,42,108,42,108,32,126,32,126,29,128,30,128,30,127,31,129,32,130,31,131,30,132,30,132,33,130,33,131,33,129,34,123,33,129,35,128,36,125,36\"></polygon>\n<polygon points=\"118,22,120,22,125,22,122,24,119,24,120,24,120,25,117,24,117,23,119,23,118,22\"></polygon>\n<polygon points=\"196,136,197,136,198,135,199,137,201,135,202,136,201,137,199,138,198,137,197,138,195,137,194,138,193,137,194,136,194,135,196,136\"></polygon>\n<polygon points=\"104,57,97,57,97,52,99,51,97,51,97,42,108,42,108,48,108,49,109,50,109,57,104,57\"></polygon>\n<polygon points=\"118,20,120,20,120,21,116,21,118,20\"></polygon>\n<polygon points=\"148,135,152,136,157,139,155,140,152,140,152,138,150,139,150,138,148,138,149,137,147,135,148,135\"></polygon>\n<polygon points=\"91,80,91,83,93,86,91,86,92,85,89,84,88,81,88,80,91,80\"></polygon>\n<polygon points=\"176,125,177,126,178,127,177,127,178,129,177,130,177,132,178,134,177,136,178,138,177,138,171,138,170,137,169,134,172,128,168,126,168,123,170,122,172,122,172,121,174,121,174,123,176,123,176,125\"></polygon>\n<polygon points=\"152,199,154,198,155,198,155,201,150,201,153,201,152,200,154,201,154,201,154,201,153,200,154,199,152,199,152,199\"></polygon>\n<polygon points=\"148,193,148,195,148,196,150,195,149,197,150,197,155,198,152,198,151,200,149,199,150,199,151,198,151,198,149,198,149,199,148,199,149,198,148,198,148,197,149,198,149,197,149,198,149,198,149,198,149,197,148,196,148,197,149,197,148,197,149,197,148,197,148,197,148,197,147,197,148,196,147,196,148,195,148,195,147,196,147,195,146,195,147,195,147,194,148,194,147,193,147,194,147,193,147,193,147,193,147,192,146,192,148,192,148,191,146,191,147,191,147,191,147,191,147,190,145,190,146,189,147,189,147,190,148,188,148,189,148,188,149,188,148,188,149,187,148,186,149,184,149,184,149,184,149,183,149,183,150,183,148,183,147,182,148,180,148,177,148,177,151,172,151,165,152,162,152,157,153,155,152,150,154,149,155,152,155,153,156,157,157,157,156,158,155,159,155,162,153,164,153,167,152,168,153,173,152,174,152,175,151,176,152,179,150,180,150,183,150,184,151,186,150,187,151,187,150,187,151,188,150,188,150,190,149,191,149,193,148,193\"></polygon>\n<polygon points=\"151,100,150,100,150,99,150,97,153,98,154,98,153,98,155,99,155,100,151,100\"></polygon>\n<polygon points=\"216,25,219,25,218,26,220,25,219,26,220,26,220,26,219,26,220,26,219,26,220,27,217,27,216,26,216,25\"></polygon>\n<polygon points=\"181,166,179,168,178,170,180,167,179,167,179,168,176,172,176,171,176,170,175,170,173,168,172,168,171,167,170,167,173,164,175,162,175,161,174,161,175,159,176,157,178,155,179,152,177,151,176,149,179,146,180,142,181,143,182,142,182,143,184,143,186,143,186,146,189,145,195,147,194,149,195,150,195,152,193,155,193,156,192,157,188,157,183,160,182,160,183,161,182,161,183,161,182,164,181,166\"></polygon>\n<polygon points=\"66,45,67,46,65,46,66,45,66,45\"></polygon>\n<polygon points=\"163,100,163,100,163,100\"></polygon>\n<polygon points=\"173,53,172,54,173,54,172,54,171,56,172,55,173,56,172,56,173,56,173,57,174,56,176,57,175,58,176,57,175,58,175,59,177,58,176,59,177,59,176,60,176,60,176,59,175,60,175,59,175,58,173,60,174,59,172,59,173,59,173,58,171,59,168,59,169,58,168,58,169,57,170,57,169,57,170,56,169,56,170,55,173,53\"></polygon>\n<polygon points=\"161,19,155,19,153,19,156,18,151,18,158,17,153,17,153,17,149,16,158,15,161,19\"></polygon>\n<polygon points=\"163,101,163,101,163,101\"></polygon>\n<polygon points=\"165,105,165,106,165,105\"></polygon>\n<polygon points=\"160,99,160,99,160,99\"></polygon>\n<polygon points=\"165,106,165,107,165,106\"></polygon>\n<polygon points=\"100,55,100,55,100,55\"></polygon>\n<polygon points=\"129,106,129,107,128,106,126,105,126,104,128,103,131,103,133,103,135,104,132,104,131,106,129,106\"></polygon>\n<polygon points=\"126,58,126,58,126,58\"></polygon>\n<polygon points=\"87,80,87,80,87,80\"></polygon>\n<polygon points=\"146,62,147,62,143,64,142,63,143,64,143,64,140,64,139,65,140,65,135,67,137,65,137,63,137,62,138,63,139,63,138,61,137,61,136,62,133,61,133,60,132,58,131,58,130,57,127,57,128,58,126,58,126,58,124,58,124,57,125,56,125,55,124,53,125,53,125,52,126,52,127,51,126,50,125,50,125,47,127,46,128,47,132,48,136,48,136,51,138,54,140,54,140,60,141,61,144,62,146,62\"></polygon>\n<polygon points=\"160,99,160,99,160,99\"></polygon>\n<polygon points=\"72,54,76,55,79,58,76,57,77,57,76,57,75,56,74,56,75,56,72,55,73,55,72,54\"></polygon>\n<polygon points=\"63,43,62,42,59,43,57,42,83,42,83,45,78,46,79,48,86,52,86,52,85,53,88,55,88,57,79,57,81,56,81,57,80,56,81,57,80,57,80,56,79,57,79,56,79,56,79,55,79,56,78,56,78,56,78,56,78,55,77,56,77,55,77,55,76,55,77,54,76,54,76,55,75,55,76,54,75,55,74,54,75,54,73,54,74,54,73,54,74,53,73,53,72,53,73,52,74,53,74,52,75,52,73,52,73,52,73,52,72,53,72,52,72,52,72,52,71,51,73,51,71,51,71,50,70,51,69,50,70,50,69,49,69,50,69,49,70,48,69,49,70,48,70,48,69,49,69,47,67,46,65,44,63,43\"></polygon>\n<polygon points=\"57,29,60,29,61,32,64,32,64,33,66,33,66,35,69,36,70,37,69,37,70,37,70,39,73,40,74,41,77,40,78,42,54,41,54,28,57,29\"></polygon>\n<polygon points=\"122,58,119,57,118,56,118,57,109,57,109,50,108,49,108,48,108,42,118,42,118,43,121,43,122,45,121,46,124,45,126,46,125,47,125,50,126,50,127,51,126,52,125,52,125,53,124,53,125,55,125,56,123,57,122,58\"></polygon>\n<polygon points=\"56,42,56,42,56,42\"></polygon>\n<polygon points=\"83,31,92,34,95,34,97,35,108,36,108,42,78,42,77,40,74,41,73,40,70,39,70,37,69,37,70,37,69,36,66,35,66,33,64,33,64,32,61,32,60,29,62,30,61,29,63,28,64,28,64,29,70,28,67,28,67,29,68,28,68,29,69,28,73,27,72,27,76,29,77,28,78,28,77,29,79,28,82,28,81,28,81,30,83,31\"></polygon>\n<polygon points=\"88,17,90,18,88,18,89,18,87,19,86,19,86,18,83,20,79,19,84,18,88,17\"></polygon>\n<polygon points=\"84,22,87,22,90,23,85,24,83,25,83,26,79,26,75,25,78,23,77,22,81,21,84,22\"></polygon>\n<polygon points=\"91,19,97,20,97,21,93,22,91,21,96,20,87,20,90,20,87,20,91,20,88,20,91,19\"></polygon>\n<polygon points=\"90,23,92,23,91,24,93,24,96,24,95,25,97,24,97,28,87,28,87,28,87,28,95,27,87,27,86,26,90,26,86,26,87,25,85,25,86,25,86,24,90,23\"></polygon>\n<polygon points=\"471,201,471,201,471,201\"></polygon>\n<polygon points=\"275,14,275,14,275,15,275,14,280,16,276,16,276,17,274,18,274,19,273,19,272,18,273,18,269,17,273,17,270,17,274,17,269,17,269,17,274,16,273,16,273,16,271,16,271,15,270,16,271,16,268,16,267,16,268,16,266,15,267,15,266,15,267,15,266,15,265,15,269,14,267,14,269,15,269,15,270,14,273,15,272,14,275,14\"></polygon>\n<polygon points=\"285,14,288,14,283,15,275,14,277,14,276,13,278,14,277,13,281,14,282,13,282,13,282,14,285,14\"></polygon>\n<polygon points=\"313,107,310,107,309,104,310,101,314,102,314,103,318,100,322,99,324,102,323,102,322,103,313,107\"></polygon>\n<polygon points=\"348,66,345,68,343,68,342,66,344,65,345,64,344,63,343,61,337,60,339,58,339,58,340,57,342,57,345,55,344,54,344,52,342,52,342,51,342,51,342,51,342,49,346,48,348,48,349,50,352,50,352,51,357,49,356,50,358,51,361,55,362,54,363,55,366,54,368,56,371,56,371,57,369,58,369,60,365,59,364,62,365,62,363,62,361,63,362,63,362,65,361,66,359,65,355,66,353,65,352,65,352,66,350,66,348,66\"></polygon>\n<polygon points=\"302,82,303,83,302,83,300,84,299,84,299,80,301,80,304,79,305,80,301,81,302,82\" class=\"active\"></polygon>\n<polygon points=\"10,32,14,33,13,34,12,34,12,34,10,34,11,34,11,35,9,35,11,36,10,36,6,35,6,34,2,34,2,33,2,33,0,33,1,34,0,35,0,29,7,31,8,33,9,33,7,32,10,32\"></polygon>\n<polygon points=\"497,35,493,35,498,36,499,38,499,39,496,38,492,39,491,38,487,39,484,37,486,37,484,36,473,35,471,34,471,33,470,33,471,32,469,31,470,30,476,30,476,29,475,28,476,28,483,28,486,30,488,29,486,28,487,28,495,28,500,29,500,35,498,35,497,35\"></polygon>\n<polygon points=\"328,63,328,68,325,66,323,67,323,66,321,65,320,63,322,63,321,63,321,62,324,62,323,60,321,60,319,61,317,60,318,60,318,59,315,58,319,58,325,57,325,57,326,57,327,60,329,61,329,62,328,63\"></polygon>\n<polygon points=\"326,55,326,54,327,55,328,54,331,54,333,55,335,54,336,54,337,56,337,57,339,58,337,60,335,59,331,62,329,62,328,60,326,59,326,57,324,57,326,56,326,55\"></polygon>\n<polygon points=\"340,74,340,75,337,76,335,75,335,74,334,74,332,73,329,72,325,73,325,71,324,71,324,70,325,70,323,69,324,68,323,67,325,66,327,68,329,68,329,67,331,66,331,66,331,66,331,66,333,66,334,68,336,68,337,70,343,72,342,73,341,73,340,74\"></polygon>\n<polygon points=\"315,83,315,85,312,84,308,82,304,80,304,79,307,77,307,74,309,73,312,73,313,75,314,75,313,78,314,79,316,80,316,81,316,82,317,83,315,83\"></polygon>\n<polygon points=\"320,89,320,89,320,89\"></polygon>\n<polygon points=\"391,116,392,117,390,117,390,116,389,116,389,116,386,113,387,110,388,109,388,106,386,104,387,102,385,99,386,99,386,97,387,98,389,97,390,97,390,98,391,98,390,101,392,100,393,100,393,99,394,100,397,103,396,105,394,105,392,106,393,109,391,107,390,107,390,106,389,107,388,112,389,112,390,115,391,116\"></polygon>\n<polygon points=\"314,67,316,68,317,67,320,69,319,69,318,72,317,71,317,70,317,70,315,71,315,70,313,69,314,69,313,68,315,68,314,67\"></polygon>\n<polygon points=\"403,95,402,95,401,95,401,95,399,95,398,94,398,93,396,93,394,94,394,93,393,94,392,93,391,94,391,96,391,96,390,95,389,95,389,94,388,94,388,93,387,93,387,91,385,92,386,90,387,89,387,87,386,86,387,86,387,85,388,84,387,81,385,80,386,79,385,78,387,78,388,77,387,77,388,77,387,75,388,73,388,72,389,72,385,71,386,70,384,70,385,68,386,68,385,66,390,66,396,67,399,66,403,66,404,65,407,67,409,66,408,67,408,69,406,69,404,70,403,72,404,73,403,77,404,79,402,79,403,80,402,80,403,82,401,83,401,84,402,85,402,87,401,87,402,87,402,88,402,89,405,89,404,90,405,90,406,91,405,93,406,92,407,95,405,95,405,94,405,94,404,93,403,95\"></polygon>\n<polygon points=\"300,79,299,79,300,77,301,77,301,77,300,79\" class=\"active\"></polygon>\n<polygon points=\"354,69,353,69,353,70,350,71,346,70,352,68,350,67,349,68,347,67,349,66,348,66,349,66,352,66,352,65,353,65,355,66,359,65,361,66,359,68,357,68,356,69,354,69\"></polygon>\n<polygon points=\"410,118,410,119,410,118\"></polygon>\n<polygon points=\"412,61,411,62,409,62,408,63,406,62,405,60,405,59,407,59,406,56,409,55,412,56,410,58,411,59,415,58,416,59,416,61,415,60,412,61\"></polygon>\n<polygon points=\"363,116,362,117,361,116,361,114,361,111,363,113,364,115,363,116\"></polygon>\n<polygon points=\"302,80,301,80,299,80,299,79,301,77,300,76,301,75,301,74,304,74,309,73,307,75,307,77,302,80\" class=\"active\"></polygon>\n<polygon points=\"375,94,375,94,375,95,374,95,373,91,372,91,374,90,372,89,373,88,374,89,375,89,375,90,378,90,377,92,377,93,378,92,379,95,378,95,378,96,378,94,378,94,377,94,377,93,376,93,376,92,375,92,376,93,374,92,375,92,376,94,375,94\"></polygon>\n<polygon points=\"424,137,427,137,424,138,424,137\"></polygon>\n<polygon points=\"328,91,328,92,327,92,327,94,323,93,322,92,325,91,328,89,328,90,328,91\"></polygon>\n<polygon points=\"346,73,344,73,345,72,344,70,345,70,346,69,345,69,348,68,348,68,348,69,349,69,347,69,346,70,349,70,350,71,352,70,352,71,354,72,354,73,352,73,350,74,349,72,349,72,346,73\"></polygon>\n<polygon points=\"298,81,298,82,298,81\" class=\"active\"></polygon>\n<polygon points=\"424,68,423,65,423,66,421,65,421,63,420,64,420,62,419,61,420,61,421,60,422,60,420,59,423,58,423,58,425,54,424,53,421,54,420,53,423,51,425,52,427,56,431,57,432,59,437,58,437,59,435,62,433,62,432,63,432,65,431,66,431,66,430,65,430,66,428,67,428,68,426,67,424,68\"></polygon>\n<polygon points=\"299,81,299,80,299,81,298,81,299,81\" class=\"active\"></polygon>\n<polygon points=\"397,112,395,113,396,111,395,111,396,110,397,110,397,109,399,108,400,104,396,99,394,98,396,97,395,97,395,96,393,96,393,95,392,94,392,93,394,94,396,93,398,93,398,94,400,95,398,96,398,96,397,99,401,104,402,107,401,109,398,110,398,112,397,112\"></polygon>\n<polygon points=\"409,94,408,94,409,94\"></polygon>\n<polygon points=\"387,63,386,64,386,66,384,66,383,63,376,62,376,60,375,59,372,58,372,57,378,54,381,55,381,56,385,56,385,56,386,57,388,57,388,58,386,58,387,59,385,60,387,61,387,63\"></polygon>\n<polygon points=\"411,46,410,46,411,48,412,48,412,49,408,51,409,51,408,52,406,52,404,53,401,53,400,55,401,55,400,56,396,55,393,55,392,55,392,54,387,52,388,51,384,50,383,50,384,49,384,48,386,47,385,46,386,45,389,44,390,45,390,44,392,43,392,43,395,44,396,43,396,42,397,42,396,41,395,41,398,39,398,38,397,37,398,37,398,36,400,36,401,36,400,37,402,37,402,38,402,38,403,38,402,39,402,40,404,40,402,42,402,43,406,42,406,43,411,41,413,42,413,42,415,43,415,44,413,44,413,45,414,45,413,46,411,46\"></polygon>\n<polygon points=\"406,135,407,136,409,136,409,137,400,136,396,134,397,133,400,134,401,134,403,135,404,134,406,135\"></polygon>\n<polygon points=\"397,131,397,133,396,133,396,133,395,133,395,133,392,131,389,125,388,125,387,123,383,119,382,117,385,118,386,119,393,124,393,125,394,125,394,126,395,126,395,129,397,128,397,129,397,131\"></polygon>\n<polygon points=\"438,131,437,131,437,130,436,130,436,129,435,130,435,131,434,130,433,129,435,128,436,129,436,128,434,128,433,127,432,127,432,126,434,125,436,126,436,128,438,130,441,127,446,129,446,138,444,136,445,136,443,136,443,136,443,135,444,135,442,135,443,135,441,132,438,131\"></polygon>\n<polygon points=\"338,84,335,84,336,82,335,81,334,79,335,78,334,78,335,76,337,76,341,73,344,74,346,73,349,72,349,72,350,74,352,73,354,73,349,75,350,76,349,78,347,78,348,79,347,79,346,81,345,81,344,81,343,82,342,84,338,84\"></polygon>\n<polygon points=\"298,81,299,79,300,79,299,80,299,80,299,81,298,81,299,81,298,84,298,82,298,81\"></polygon>\n<polygon points=\"476,45,477,47,475,47,475,48,475,49,472,50,472,51,470,51,470,52,468,54,466,47,468,45,468,45,471,44,475,41,477,41,477,40,478,40,478,39,480,38,477,38,476,39,477,39,476,39,475,39,476,38,475,37,476,37,476,36,477,36,477,35,484,36,486,37,484,37,486,38,491,38,492,39,489,40,487,42,484,41,481,42,481,41,479,42,477,42,477,43,475,44,477,45,476,45\"></polygon>\n<polygon points=\"348,86,347,88,348,89,349,91,348,91,346,91,344,92,344,91,343,91,342,89,336,90,336,89,338,88,338,87,337,87,337,86,336,85,335,84,339,84,342,84,343,82,346,81,347,79,348,79,347,78,349,78,349,77,350,76,349,75,350,74,354,74,355,74,356,75,358,76,355,77,353,77,353,79,355,80,354,81,354,82,350,86,348,86\"></polygon>\n<polygon points=\"361,83,359,82,359,80,360,80,360,79,359,78,360,77,359,77,358,76,356,75,355,74,354,74,354,73,354,72,352,71,352,70,354,69,356,69,357,68,358,68,362,67,361,66,362,65,362,63,361,63,363,62,365,63,363,63,368,65,365,64,366,65,365,65,365,67,364,68,364,70,365,70,364,74,365,75,364,76,365,76,364,77,366,80,365,81,365,81,366,81,366,82,365,82,363,83,361,83\"></polygon>\n<polygon points=\"368,86,372,86,372,88,369,88,367,87,366,87,361,85,362,84,363,83,368,85,368,86\"></polygon>\n<polygon points=\"362,106,361,109,361,111,360,111,360,112,360,112,359,112,358,113,357,114,356,113,352,103,351,97,351,96,351,95,352,95,351,95,351,94,351,94,350,96,348,96,346,94,347,94,348,93,346,93,345,92,346,92,345,92,346,91,349,91,347,87,348,86,350,86,354,82,354,81,355,80,353,79,353,77,355,77,358,76,359,77,360,77,359,78,360,79,360,80,359,80,359,82,363,83,361,85,369,88,372,88,372,86,373,86,374,88,378,88,378,87,377,86,379,86,381,84,384,84,384,85,384,85,384,86,385,86,385,87,385,87,384,87,382,88,381,92,380,92,379,95,378,92,377,93,377,92,378,90,375,90,375,89,374,89,373,88,372,89,374,90,372,91,373,91,374,95,373,94,373,95,372,94,371,95,371,96,370,97,368,98,364,101,364,102,362,103,362,106\"></polygon>\n<polygon points=\"396,16,388,17,392,15,393,15,392,16,394,15,396,16,396,16\"></polygon>\n<polygon points=\"385,14,386,14,384,14,389,14,389,15,388,15,389,15,382,15,380,14,379,14,385,14\"></polygon>\n<polygon points=\"383,12,386,13,384,13,385,14,380,14,377,14,383,12\"></polygon>\n<polygon points=\"384,51,388,51,386,54,386,55,385,56,381,56,381,55,378,54,374,56,374,55,375,55,374,54,372,53,374,52,373,51,374,50,373,49,373,49,373,48,374,47,373,46,374,45,372,44,373,43,373,43,371,42,367,42,368,41,367,40,369,40,367,39,369,37,368,37,369,36,369,35,367,35,367,34,366,34,366,32,364,32,364,31,364,31,365,30,365,29,360,28,362,27,360,26,362,25,359,24,366,25,364,26,364,27,364,27,364,27,364,28,367,28,365,27,366,27,366,26,366,26,362,24,362,24,362,23,362,23,362,23,371,22,371,22,369,22,371,22,369,21,371,21,372,21,371,21,374,20,381,20,379,19,380,19,388,19,387,19,390,19,391,18,395,17,398,18,395,18,399,18,398,19,404,18,406,19,405,19,408,20,408,20,406,20,408,20,407,21,400,23,397,23,399,23,396,24,404,23,404,23,403,23,404,24,404,24,406,25,406,26,407,26,403,27,402,28,397,29,398,29,398,31,397,32,397,32,398,34,399,34,397,35,400,36,398,36,398,37,397,37,398,38,398,39,396,40,395,41,397,41,397,42,396,42,396,43,396,43,393,43,390,45,390,45,389,44,386,45,385,46,386,47,384,48,384,49,383,50,384,51\"></polygon>\n<polygon points=\"394,121,395,123,394,123,391,121,390,119,389,116,390,116,390,117,392,116,393,117,394,121\"></polygon>\n<polygon points=\"410,118,412,115,412,116,413,115,413,116,414,117,416,118,414,118,415,119,411,119,409,123,406,123,405,124,404,124,402,123,402,122,405,123,404,123,405,121,407,121,408,119,409,119,410,118,410,119,410,118\"></polygon>\n<polygon points=\"317,83,317,83,317,83\"></polygon>\n<polygon points=\"408,94,408,94,408,94\"></polygon>\n<polygon points=\"464,42,464,42,466,43,460,43,460,43,462,43,458,42,457,43,455,43,454,43,454,42,452,41,454,40,453,39,450,39,445,38,444,37,445,36,444,35,445,34,444,33,445,32,443,32,446,31,446,30,447,30,447,29,448,29,447,28,448,28,446,28,450,25,457,25,458,25,457,25,461,27,470,26,472,27,472,28,474,28,474,29,476,28,476,29,476,30,470,30,469,31,471,32,470,33,471,33,471,34,477,35,477,36,476,36,476,37,475,37,476,38,475,39,476,39,472,41,473,40,472,40,473,39,469,39,464,42\"></polygon>\n<polygon points=\"412,128,411,130,409,131,409,129,411,127,410,125,410,125,410,124,408,124,410,122,411,119,413,119,414,120,413,120,413,120,413,120,414,122,414,122,415,124,414,123,413,126,411,127,412,128\"></polygon>\n<polygon points=\"420,129,420,130,421,131,419,132,418,130,418,129,417,129,417,133,416,133,416,131,416,130,415,130,415,129,416,127,416,126,417,124,418,123,422,124,424,123,423,124,417,124,417,125,417,126,418,127,419,126,421,126,421,126,418,128,420,129\"></polygon>\n<polygon points=\"423,117,422,116,423,115,422,114,421,115,420,114,420,115,419,115,420,114,421,113,422,113,422,114,423,113,423,112,424,112,424,111,425,112,426,115,425,116,425,115,424,117,424,117,423,117\"></polygon>\n<polygon points=\"421,105,421,106,421,105,422,106,422,106,422,107,422,108,420,106,420,107,419,106,418,106,418,105,417,104,417,105,417,104,416,102,417,103,418,99,420,99,420,102,419,104,419,106,421,105\"></polygon>\n<polygon points=\"328,100,327,100,326,101,324,102,322,99,326,97,327,94,327,93,327,92,328,92,328,90,329,92,332,92,333,94,331,97,330,97,330,99,329,99,328,100\"></polygon>\n<polygon points=\"296,77,295,76,298,75,297,76,297,76,296,77\" class=\"active\"></polygon>\n<polygon points=\"373,46,374,47,373,48,373,49,373,49,374,50,374,50,373,51,374,52,373,53,371,52,370,51,371,51,368,49,367,47,373,46\"></polygon>\n<polygon points=\"367,47,368,49,367,50,366,50,365,51,362,49,358,51,356,50,357,49,355,50,355,49,354,48,356,47,355,47,356,46,354,44,356,42,357,40,364,41,366,40,368,41,368,42,371,42,373,43,372,44,374,45,373,46,367,47\"></polygon>\n<polygon points=\"354,44,356,46,355,47,356,47,354,48,355,49,355,50,352,51,352,50,349,50,349,48,348,48,348,47,350,46,348,45,348,44,349,44,351,44,354,44\"></polygon>\n<polygon points=\"373,53,372,53,374,54,375,55,374,55,375,56,371,57,371,56,368,56,366,54,363,55,362,54,361,55,358,51,362,49,365,51,366,50,368,49,371,51,370,51,371,52,373,53\"></polygon>\n<polygon points=\"397,109,397,110,394,110,394,109,393,110,392,106,394,105,397,106,397,105,399,105,399,108,397,109\"></polygon>\n<polygon points=\"411,127,409,130,407,129,405,130,405,129,403,129,403,127,402,126,401,123,402,122,404,124,405,124,406,123,408,123,408,124,410,124,410,125,410,125,411,127\"></polygon>\n<polygon points=\"426,72,424,73,423,72,424,71,424,71,424,70,423,70,423,69,425,68,426,67,428,68,428,67,429,67,431,65,431,66,430,67,430,68,427,70,428,72,426,72\"></polygon>\n<polygon points=\"322,90,321,91,321,90,321,89,322,90\"></polygon>\n<polygon points=\"344,52,344,54,345,55,342,57,340,57,339,58,337,57,337,56,336,54,333,53,335,52,334,52,335,51,336,51,335,51,336,51,335,51,335,50,342,49,342,51,342,52,344,52\"></polygon>\n<polygon points=\"342,65,340,64,336,65,334,63,334,61,335,60,334,60,333,61,334,61,333,61,333,61,331,61,335,59,341,61,343,61,344,63,345,64,344,65,342,66,342,65\"></polygon>\n<polygon points=\"386,104,388,106,388,109,387,111,387,107,386,106,386,102,385,102,384,101,384,102,383,102,383,103,382,102,382,103,382,102,381,103,382,102,381,103,381,101,381,98,380,99,380,98,381,98,380,98,381,98,380,97,379,96,379,97,378,96,379,94,380,92,381,92,382,88,384,87,385,87,385,87,386,85,387,87,387,88,387,89,385,91,385,92,387,91,387,93,388,93,388,94,389,94,389,95,391,95,389,97,386,97,386,99,385,99,387,102,386,104\"></polygon>\n<polygon points=\"310,101,309,102,307,98,304,96,303,92,302,91,299,86,298,86,299,84,300,84,303,83,301,81,304,80,306,81,312,84,317,85,318,87,320,88,319,89,321,91,322,91,321,91,323,93,327,93,327,94,326,97,318,100,314,103,314,102,312,101,310,101,310,101\"></polygon>\n<polygon points=\"450,56,451,57,450,57,449,57,448,59,449,61,449,61,448,60,447,61,447,57,448,54,447,52,447,51,448,50,448,50,449,50,449,52,449,53,450,56\"></polygon>\n<polygon points=\"345,71,345,72,344,73,342,73,343,72,337,70,336,68,334,68,333,66,331,66,331,66,331,66,331,66,329,67,329,68,328,68,328,63,331,62,331,63,333,64,334,63,336,65,340,64,342,65,342,67,342,67,343,68,343,69,344,70,344,71,345,71\"></polygon>\n<polygon points=\"429,76,427,76,427,77,427,77,426,77,425,77,426,75,425,74,426,74,426,73,426,72,428,71,429,73,430,75,429,76\"></polygon>\n<polygon points=\"401,84,401,83,403,82,402,80,403,80,402,79,404,79,403,77,404,73,403,72,404,70,406,69,408,69,408,67,409,66,407,67,406,66,404,65,406,64,405,63,405,63,406,62,408,63,414,60,416,61,416,59,415,58,411,59,410,58,412,56,414,56,416,55,415,55,418,53,417,52,418,51,423,51,420,53,421,54,424,53,425,54,423,58,423,58,420,59,422,60,421,60,420,61,419,61,420,62,420,64,421,63,421,65,423,66,423,65,425,68,418,71,419,70,418,70,419,70,420,69,418,68,415,71,414,71,413,71,414,72,415,72,415,73,416,73,418,72,420,73,420,74,417,75,416,76,417,77,418,80,419,81,417,81,419,82,417,83,420,83,419,84,419,84,419,85,419,86,418,86,417,88,416,88,417,88,416,90,416,89,415,91,414,91,413,92,412,92,412,93,409,93,409,94,408,94,408,93,408,94,407,94,406,93,406,92,405,93,406,91,405,90,404,90,405,89,402,89,402,88,402,87,401,87,402,87,402,85,401,84\"></polygon>\n<polygon points=\"394,123,394,123,394,123\"></polygon>\n<polygon points=\"417,94,417,92,418,91,419,90,419,90,418,95,417,94\"></polygon>\n<polygon points=\"345,69,346,69,345,70,344,70,343,68,345,68,349,66,347,67,349,68,350,67,352,68,350,69,348,69,348,68,345,69\"></polygon>\n<polygon points=\"309,67,308,67,308,66,306,64,310,65,311,66,313,66,315,68,310,68,309,67\"></polygon>\n<polygon points=\"335,81,336,82,335,84,336,85,337,86,337,87,338,87,338,88,336,89,335,90,330,89,329,87,326,88,325,88,321,86,320,83,319,83,318,83,318,83,317,83,316,82,316,81,316,80,314,79,313,77,314,75,313,75,311,72,312,72,311,70,312,70,314,71,317,70,317,70,317,71,318,72,318,73,322,74,325,74,325,73,328,72,332,73,334,74,335,74,335,77,334,78,335,78,334,79,335,81\"></polygon>\n<polygon points=\"378,87,378,88,375,88,373,87,375,86,377,86,378,87\"></polygon>\n<polygon points=\"448,63,451,64,452,63,452,65,453,65,450,65,449,67,447,66,445,66,445,66,446,67,445,67,444,66,445,65,445,65,446,65,447,62,448,63\"></polygon>\n<polygon points=\"432,78,433,78,433,79,433,79,432,81,431,82,432,81,431,82,431,81,431,79,431,79,431,80,430,80,430,79,431,79,430,79,432,78\"></polygon>\n<polygon points=\"437,76,439,75,440,73,441,73,440,73,441,74,442,73,444,71,444,69,445,68,446,68,446,67,446,67,447,70,447,72,446,72,445,75,446,75,445,76,444,76,445,76,444,75,443,77,443,76,442,77,440,77,441,77,440,76,440,77,439,79,438,78,438,77,434,77,434,78,432,78,432,77,434,76,437,76\"></polygon>\n<polygon points=\"396,67,390,66,386,66,386,64,387,62,385,60,387,59,386,58,388,58,388,57,385,56,386,55,386,54,387,53,392,54,392,55,394,55,398,55,401,56,403,57,406,56,407,59,405,59,405,60,406,62,405,63,406,64,403,66,399,66,396,67\"></polygon>\n<polygon points=\"386,86,384,86,384,85,383,84,381,84,378,86,375,86,374,87,373,86,369,86,364,83,364,83,365,82,365,83,366,82,365,81,365,81,366,80,364,77,365,76,364,76,365,75,364,74,365,70,364,70,364,68,365,67,365,65,366,65,365,64,368,65,363,63,365,63,364,62,365,59,369,60,369,58,372,57,372,58,375,59,376,60,376,62,383,63,384,66,385,66,386,68,385,68,384,70,386,70,385,71,389,72,388,72,388,73,387,75,388,77,387,77,388,77,387,78,385,78,386,79,385,80,386,80,387,82,388,84,387,85,387,86,386,86\"></polygon>\n<polygon points=\"398,105,397,106,396,105,397,103,394,100,393,99,393,100,392,100,390,101,391,98,390,98,390,97,389,97,390,95,391,96,391,94,393,95,393,96,395,96,395,97,396,97,394,98,396,99,398,102,399,103,399,105,398,105\"></polygon>\n<polygon points=\"433,63,433,62,435,62,437,59,437,58,432,59,431,57,432,57,433,56,432,54,433,53,435,52,435,52,437,52,437,51,437,51,433,51,433,51,433,50,431,50,435,48,432,48,432,47,433,46,432,46,433,45,433,44,433,44,434,44,433,43,433,42,435,40,435,40,436,39,437,40,439,39,433,37,434,36,434,35,433,34,431,33,435,31,435,30,434,29,435,28,435,28,435,27,433,27,433,26,435,25,435,25,434,25,436,26,444,26,444,25,445,25,443,25,446,24,446,24,455,25,449,25,446,28,448,28,447,28,448,29,447,29,447,30,446,30,446,31,443,32,445,32,444,33,445,34,444,35,445,35,445,36,445,37,444,37,444,38,448,39,453,39,454,40,452,41,454,42,454,42,448,43,438,49,440,49,440,50,441,50,441,51,442,50,442,51,443,50,444,50,446,51,445,51,447,53,445,55,445,57,441,61,436,65,435,66,433,65,431,66,431,66,432,65,432,63,433,63\"></polygon>\n<polygon points=\"443,19,445,20,447,19,446,19,452,20,449,21,444,21,443,21,440,20,441,20,443,19\"></polygon>\n<polygon points=\"432,48,435,48,431,50,433,50,433,51,437,51,437,51,437,52,435,52,435,52,433,53,431,55,433,55,433,56,432,57,428,56,425,52,422,51,418,51,417,52,418,52,418,53,416,55,416,55,414,56,409,55,404,57,400,56,400,55,401,55,400,55,401,53,404,53,406,52,408,52,409,51,408,51,412,49,412,49,411,48,410,46,413,46,414,45,413,45,413,44,415,44,415,42,413,42,413,42,411,41,406,43,406,42,403,43,402,43,404,40,402,40,402,39,403,38,402,38,402,38,402,37,400,37,401,36,401,36,397,35,399,34,398,34,397,32,397,32,398,31,398,29,397,29,402,28,403,27,406,26,406,26,406,25,404,24,404,24,404,24,403,23,405,22,407,22,408,23,411,23,421,24,422,23,421,23,423,22,430,24,429,24,430,24,429,24,430,25,428,25,430,25,429,26,432,27,434,26,433,27,435,27,435,28,435,28,434,29,435,30,435,31,431,33,433,34,434,35,434,36,433,37,439,39,437,40,436,39,435,40,435,40,433,42,433,43,434,44,433,44,433,44,433,45,432,46,433,46,432,47,432,48\"></polygon>\n<polygon points=\"313,68,314,69,313,69,315,70,315,71,314,71,314,70,311,69,310,68,313,68\"></polygon>\n<polygon points=\"202,79,220,65\"></polygon>\n<polygon points=\"155,85,165,75\"></polygon>\n<polygon points=\"220,92,236,79\"></polygon>\n<polygon points=\"210,109,224,96\"></polygon>\n<polygon points=\"234,45,246,33\"></polygon>\n<polygon points=\"221,88,233,74\"></polygon>\n<polygon points=\"218,42,231,28\"></polygon>\n<polygon points=\"192,213,214,195\"></polygon>\n<polygon points=\"230,181,242,136\"></polygon>\n<polygon points=\"160,203,175,191\"></polygon>\n<polygon points=\"438,161,446,161,446,178,444,177,444,175,443,174,444,175,444,175,442,174,442,173,442,172,441,174,440,174,441,173,442,172,441,170,441,171,439,173,439,174,438,173,438,173,438,172,436,170,432,169,429,169,429,161,438,161\"></polygon>\n<polygon points=\"458,156,459,156,460,158,459,157,461,158,463,161,463,163,463,164,462,164,460,166,459,165,457,165,446,165,446,161,442,161,442,148,444,150,446,149,447,146,446,144,447,142,447,142,448,140,449,142,450,145,451,145,452,146,453,151,457,153,458,156,458,156,458,156\"></polygon>\n<polygon points=\"446,170,446,169,447,169,447,170,446,170\"></polygon>\n<polygon points=\"450,180,450,180,450,180\"></polygon>\n<polygon points=\"429,146,430,146,430,145,430,145,431,143,432,143,431,142,432,143,432,142,434,142,434,141,433,140,436,142,438,142,439,142,438,142,439,142,439,142,440,141,440,142,440,143,439,143,438,145,437,146,442,148,442,161,429,161,429,146\"></polygon>\n<polygon points=\"429,168,428,169,424,170,424,168,429,168\"></polygon>\n<polygon points=\"456,182,456,185,454,184,454,186,452,185,452,184,452,184,451,182,452,182,454,183,454,182,456,182\"></polygon>\n<polygon points=\"457,153,457,153,457,153\"></polygon>\n<polygon points=\"471,169,471,169,471,169\"></polygon>\n<polygon points=\"448,173,449,173,451,175,455,175,456,176,458,177,455,178,453,179,453,179,452,178,451,178,452,178,451,178,449,179,446,178,446,178,446,172,447,172,448,173\"></polygon>\n<polygon points=\"424,146,424,145,424,145,425,145,425,144,426,145,426,144,428,145,428,147,428,146,428,147,428,146,429,146,429,168,424,168,424,170,423,171,422,172,417,172,414,174,411,173,410,173,410,172,411,171,411,169,410,165,407,161,408,162,408,160,408,161,409,162,407,159,408,156,409,155,409,156,409,155,412,154,413,154,418,152,420,150,420,149,421,148,422,149,422,148,422,147,423,148,423,148,423,147,423,147,423,147,423,146,424,147,423,146,424,146\"></polygon>\n<polygon points=\"459,174,458,175,458,177,456,176,455,175,451,175,449,173,446,172,446,170,447,170,447,169,446,169,446,165,457,165,459,165,460,166,462,164,463,164,462,169,460,172,460,171,460,172,459,174\"></polygon>\n<polygon points=\"258,53,258,55,257,53,255,53,256,53,256,53,256,52,258,52,257,52,258,51,260,51,259,52,260,52,259,53,258,53\"></polygon>\n<polygon points=\"252,66,252,66,252,66\"></polygon>\n<polygon points=\"282,72,283,73,282,73,282,74,281,74,281,74,281,74,280,74,279,72,280,72,282,72,279,72,279,71,279,71,278,70,279,68,287,67,286,68,283,68,284,69,283,69,283,70,281,69,282,71,282,70,282,71,281,71,283,72,283,73,282,72\" class=\"active\"></polygon>\n<polygon points=\"280,63,282,63,281,64,282,65,281,66,279,67,278,66,278,65,277,65,277,64,277,63,276,62,277,62,276,61,278,61,280,63\"></polygon>\n<polygon points=\"289,62,291,62,290,64,288,64,284,64,282,64,281,63,282,63,280,63,280,62,278,61,279,61,281,59,282,58,285,59,287,58,289,60,289,62\" class=\"active\"></polygon>\n<polygon points=\"260,57,259,56,258,53,260,52,259,52,260,50,262,51,262,50,264,51,262,50,262,50,263,49,262,49,262,49,264,49,264,50,265,49,265,50,267,49,270,50,270,52,270,52,271,54,267,55,269,57,268,58,268,59,261,59,261,57,260,57\"></polygon>\n<polygon points=\"279,61,275,61,272,60,273,60,273,59,274,58,276,59,279,58,282,58,279,61\"></polygon>\n<polygon points=\"292,60,290,60,290,61,289,62,289,60,287,58,288,58,291,58,292,60\" class=\"active\"></polygon>\n<polygon points=\"274,58,274,57,276,56,281,57,281,58,278,58,276,59,274,58\"></polygon>\n<polygon points=\"254,54,254,54,257,53,259,55,258,56,257,55,256,56,254,54\"></polygon>\n<polygon points=\"263,48,264,49,262,49,262,48,261,48,261,46,265,45,264,46,265,47,263,48\"></polygon>\n<polygon points=\"241,50,242,50,241,53,237,54,236,53,237,53,236,53,237,52,238,52,236,52,238,51,236,51,237,50,236,50,238,50,239,49,238,49,240,48,240,48,239,49,241,50\"></polygon>\n<polygon points=\"243,75,243,75,243,75\"></polygon>\n<polygon points=\"247,56,247,56,247,56\"></polygon>\n<polygon points=\"287,41,282,42,282,41,280,41,280,40,279,38,280,37,281,37,282,36,285,35,285,34,283,33,283,32,283,31,283,31,279,29,280,29,281,30,285,30,287,28,289,28,291,28,290,30,292,31,290,32,292,34,291,35,292,36,292,36,294,38,289,41,287,41\" class=\"active\"></polygon>\n<polygon points=\"244,50,243,50,244,50\"></polygon>\n<polygon points=\"301,74,300,75,300,75,300,74,296,75,293,74,291,75,290,74,288,74,289,74,288,74,288,73,288,73,288,72,286,72,287,71,288,72,287,71,287,70,286,70,286,69,287,69,292,68,291,68,293,68,295,67,299,67,301,68,303,68,309,67,311,68,311,69,312,70,311,70,312,72,311,72,312,73,312,74,309,73,304,74,301,74\" class=\"active\"></polygon>\n<polygon points=\"247,57,247,57,247,57\"></polygon>\n<polygon points=\"279,48,279,49,281,49,282,49,277,49,278,49,278,49,278,49,279,48\"></polygon>\n<polygon points=\"304,59,303,60,301,60,302,59,301,59,298,58,298,59,298,59,299,61,298,61,295,61,294,60,295,60,294,60,291,61,291,62,290,62,289,62,290,60,292,61,291,58,288,58,285,59,282,57,281,56,283,55,283,53,284,53,292,54,293,53,297,52,298,53,297,53,298,54,299,54,299,55,302,55,303,56,306,56,305,57,306,57,305,57,305,59,304,59\" class=\"active\"></polygon>\n<polygon points=\"240,73,239,74,238,74,238,72,237,71,238,71,237,71,238,68,238,67,239,66,239,67,241,67,241,67,240,68,240,70,240,70,240,72,240,73\"></polygon>\n<polygon points=\"272,60,273,60,272,61,271,62,269,62,269,62,269,61,269,60,272,60\"></polygon>\n<polygon points=\"246,53,245,54,243,53,245,52,244,51,243,52,244,51,246,51,246,51,246,50,245,49,246,49,243,49,244,48,243,47,242,47,242,48,242,47,243,46,241,46,243,46,242,45,243,45,242,44,243,44,243,44,246,44,244,45,245,45,244,45,247,45,246,46,245,47,246,47,245,47,247,47,248,49,250,50,250,51,249,50,250,51,250,52,252,52,252,53,250,54,252,54,251,54,245,55,245,55,242,55,244,54,246,54,247,53,246,53\"></polygon>\n<polygon points=\"259,56,258,56,258,55,259,56,259,56\"></polygon>\n<polygon points=\"249,72,247,74,244,74,242,75,241,74,242,74,241,74,240,73,240,72,240,70,240,70,240,68,241,67,241,67,239,67,239,66,238,67,238,66,237,65,239,64,248,65,249,66,255,66,254,67,251,68,251,68,250,70,250,71,249,72\"></polygon>\n<polygon points=\"270,75,270,75,270,75\"></polygon>\n<polygon points=\"279,41,279,41,279,41\" class=\"active\"></polygon>\n<polygon points=\"292,53,285,53,283,53,283,53,282,52,283,52,283,50,286,50,286,49,287,48,287,48,287,48,289,47,292,47,293,48,293,49,296,51,294,51,294,53,293,53,292,54,292,53\"></polygon>\n<polygon points=\"260,64,260,64,260,64\"></polygon>\n<polygon points=\"326,23,329,23,327,24,327,24,327,24,327,25,327,25,330,27,324,27,325,26,321,25,324,24,323,24,325,24,323,24,326,23\"></polygon>\n<polygon points=\"333,20,344,18,346,18,345,19,335,20,333,21,333,21,332,21,332,22,331,21,332,22,329,22,330,23,329,22,330,23,328,23,329,23,329,23,325,23,328,23,324,23,328,22,327,22,329,21,328,21,329,21,328,21,333,20\"></polygon>\n<polygon points=\"315,63,315,63,316,64,316,65,317,67,316,68,313,66,311,66,310,65,306,65,301,62,303,61,302,60,305,60,303,60,303,59,305,59,306,58,305,57,306,57,305,57,306,56,303,56,302,55,299,55,299,54,298,54,297,53,298,53,297,52,294,53,293,51,296,51,293,49,293,48,289,47,289,45,288,45,289,45,288,44,289,43,289,42,292,42,290,41,290,41,289,41,294,38,292,36,292,36,291,35,292,34,290,32,292,31,290,30,290,29,289,29,294,28,296,28,295,28,295,28,295,29,297,29,296,29,300,29,307,31,307,32,304,33,294,32,297,33,296,33,298,33,298,34,299,35,298,35,302,36,303,36,301,35,306,35,305,34,309,33,311,33,312,32,311,32,312,31,310,30,314,30,315,31,312,32,315,32,316,32,316,31,318,31,317,31,323,30,325,29,326,29,324,29,325,30,324,30,332,29,333,30,332,30,333,30,335,29,334,28,335,28,340,29,340,29,341,30,341,31,342,31,341,31,342,31,333,35,332,39,329,40,326,40,322,40,323,41,319,42,319,43,317,42,318,41,317,40,316,40,314,41,315,42,315,43,316,43,314,44,316,45,315,45,315,46,318,45,322,47,321,47,323,47,324,46,324,47,324,47,324,47,325,48,324,48,325,49,324,50,321,49,320,49,319,50,317,51,317,52,310,52,309,53,310,54,307,54,309,56,308,57,309,57,308,58,310,59,312,59,312,58,315,59,315,59,316,60,315,61,316,61,315,62,316,62,315,63\"></polygon>\n<polygon points=\"261,44,259,44,260,44,258,44,258,43,259,43,258,43,259,42,257,42,260,41,258,42,258,41,257,41,258,41,257,41,257,41,258,40,257,40,260,40,261,40,257,40,257,40,258,40,257,40,258,40,257,39,259,39,257,39,259,39,258,39,259,38,260,39,259,38,261,38,260,38,260,37,262,38,261,37,262,38,261,37,266,36,265,36,266,36,264,37,263,37,267,35,266,35,268,34,267,34,268,34,267,34,268,33,268,34,268,33,270,33,268,33,269,33,268,33,269,32,268,32,269,32,269,32,271,32,270,32,272,31,271,31,272,31,271,30,272,30,273,31,272,31,273,30,272,30,275,30,273,30,275,30,274,30,275,30,274,29,275,29,277,29,277,28,277,28,277,29,278,28,278,29,279,29,278,28,279,28,281,28,280,28,281,28,279,27,280,27,283,28,282,27,284,27,284,27,284,26,286,27,285,27,285,28,287,26,287,27,288,27,288,26,290,26,289,27,289,27,289,27,290,27,293,27,290,28,291,28,291,28,293,28,290,29,290,28,288,28,286,28,286,29,285,30,281,30,280,29,278,29,278,29,278,30,276,30,275,31,273,31,272,33,270,33,270,34,269,35,270,35,269,36,267,37,267,39,268,40,267,40,268,41,266,42,266,43,265,43,265,42,264,43,263,43,261,44\"></polygon>\n<polygon points=\"256,65,254,65,254,66,254,66,248,65,248,65,249,63,248,62,249,62,248,62,248,61,247,60,247,59,246,59,244,59,243,58,244,58,243,58,246,57,246,58,248,57,247,56,248,57,251,56,250,56,252,55,252,54,254,54,256,56,257,55,258,56,261,57,261,59,260,59,258,61,259,61,260,62,259,62,260,64,261,64,260,64,259,65,256,65\"></polygon>\n<polygon points=\"276,65,278,65,277,66,277,67,276,66,276,65\"></polygon>\n<polygon points=\"271,57,270,57,268,56,267,55,271,54,273,55,273,55,275,55,276,56,274,57,271,57\"></polygon>\n<polygon points=\"281,45,283,46,284,45,284,45,285,44,288,45,289,47,287,48,285,47,279,47,279,46,281,45\" class=\"active\"></polygon>\n<polygon points=\"273,69,273,70,274,71,272,72,273,71,272,69,265,66,264,64,262,63,260,64,261,64,260,64,259,62,260,62,259,61,262,60,263,61,263,60,264,61,265,60,267,60,269,60,269,61,269,62,267,62,267,63,267,63,269,65,270,67,272,67,272,67,276,69,275,70,274,69,273,69\"></polygon>\n<polygon points=\"320,49,323,49,322,50,322,51,321,53,317,52,317,51,317,51,319,50,320,49\"></polygon>\n<polygon points=\"325,47,324,47,324,47,324,47,324,46,323,47,321,47,321,47,322,46,321,45,322,45,322,44,325,44,326,46,325,46,325,47\"></polygon>\n<polygon points=\"267,64,267,64,267,64\"></polygon>\n<polygon points=\"272,63,277,63,277,63,277,64,277,64,277,64,276,65,276,66,274,65,272,63\"></polygon>\n<polygon points=\"298,61,299,62,301,62,297,63,296,62,296,62,295,62,297,61,297,61,298,61\"></polygon>\n<polygon points=\"281,66,282,67,282,68,279,68,278,67,279,67,281,66\"></polygon>\n<polygon points=\"289,66,288,66,289,67,287,67,286,68,282,68,281,66,282,65,281,64,281,64,282,64,285,64,288,64,290,64,289,66\" class=\"active\"></polygon>\n<polygon points=\"267,47,268,46,267,45,267,44,266,44,265,43,266,43,266,42,268,41,267,40,268,40,267,39,267,37,268,36,270,36,269,35,270,34,270,33,272,33,273,32,272,31,274,30,275,31,275,30,278,30,278,29,283,31,283,31,283,32,283,33,284,34,280,34,281,34,280,34,280,35,279,35,280,36,279,36,275,38,274,37,275,38,274,38,275,39,274,39,274,41,277,42,275,42,276,43,275,43,275,43,274,43,272,44,274,44,273,44,273,44,273,45,273,45,272,47,270,47,270,48,269,48,268,48,268,48,267,47\"></polygon>\n<polygon points=\"283,43,286,42,289,43,288,44,289,45,287,45,285,44,284,45,284,44,283,44,283,43,283,43\" class=\"active\"></polygon>\n<polygon points=\"278,70,277,69,277,67,277,66,277,66,279,66,278,68,279,69,278,70\"></polygon>\n<polygon points=\"282,57,284,58,282,58,281,58,282,57\" class=\"active\"></polygon>\n<polygon points=\"263,59,263,60,263,59\"></polygon>\n<polygon points=\"267,67,267,67,267,67\"></polygon>\n<polygon points=\"263,59,268,59,268,58,271,57,273,57,274,58,273,59,273,60,272,60,270,61,267,60,267,60,264,60,263,59\"></polygon>\n<polygon points=\"279,47,285,47,287,48,286,49,286,50,283,50,282,49,281,49,280,48,279,47\" class=\"active\"></polygon>\n<polygon points=\"315,57,316,59,318,59,318,60,317,60,318,61,318,62,317,61,317,62,315,62,316,61,315,61,316,60,315,59,315,59,314,59,313,58,312,58,312,59,311,59,308,58,309,57,308,57,309,56,307,54,310,54,309,53,310,52,317,52,320,53,320,54,317,55,318,56,316,55,315,57\"></polygon>\n<polygon points=\"317,40,318,41,317,42,319,43,319,42,321,42,324,41,324,43,325,43,325,44,322,44,322,45,321,45,322,46,321,47,318,45,315,46,315,45,316,45,314,44,316,43,315,43,315,42,314,41,316,40,317,40\"></polygon>\n<polygon points=\"283,55,282,56,282,57,280,56,276,56,275,55,273,55,273,55,271,54,270,52,270,52,270,50,275,49,277,49,277,50,282,49,283,51,282,52,284,54,283,55\"></polygon>\n<polygon points=\"277,63,272,62,274,65,272,65,270,62,269,63,269,62,271,62,272,61,273,60,275,61,276,61,277,62,277,63\"></polygon>\n<polygon points=\"298,59,298,59,298,58,299,58,302,59,301,60,299,61,299,61,298,59\" class=\"active\"></polygon>\n<polygon points=\"259,61,258,61,260,59,262,59,263,59,263,60,265,60,264,61,263,60,263,61,262,60,260,61,259,61,259,61\"></polygon>\n<polygon points=\"305,160,324,142\"></polygon>\n<polygon points=\"344,140,356,127\"></polygon>\n<polygon points=\"392,145,402,134\"></polygon>\n<polygon points=\"379,147,390,136\"></polygon>\n<polygon points=\"305,147,317,136\"></polygon>\n<polygon points=\"320,194,358,177\"></polygon>\n<polygon points=\"314,144,328,125\"></polygon>\n<polygon points=\"346,126,357,115\"></polygon>\n<polygon points=\"328,154,338,139\"></polygon>\n<polygon points=\"308,148,318,138\"></polygon>\n<polygon points=\"322,160,333,149\"></polygon>\n<polygon points=\"5,150,17,139\"></polygon>\n<polygon points=\"485,190,481,189,484,186,487,185,490,181,491,182,492,182,492,182,492,182,492,183,490,185,490,186,488,187,487,189,485,190\"></polygon>\n<polygon points=\"495,181,494,183,493,182,493,181,491,180,492,179,493,178,492,176,492,175,492,176,490,173,492,174,493,176,494,177,494,176,495,178,498,177,497,179,496,179,495,181\"></polygon>\n<polygon points=\"-1,192,11,181\"></polygon>\n<polygon points=\"442,123,464,106\"></polygon>\n<polygon points=\"93,168,103,158\"></polygon>\n<polygon points=\"3,137,18,124\"></polygon>\n<polygon points=\"5,143,17,132\"></polygon>\n<polygon points=\"476,153,491,143\"></polygon>\n<polygon points=\"1,149,1,149,1,149\"></polygon>\n<polygon points=\"490,143,505,128\"></polygon>\n<polygon points=\"117,132,131,118\"></polygon>\n<polygon points=\"55,162,68,150\"></polygon>\n<polygon points=\"477,118,488,107\"></polygon>\n<polygon points=\"466,142,485,132\"></polygon>\n<polygon points=\"446,112,456,101\"></polygon>\n<polygon points=\"8,99,35,89\"></polygon>\n<polygon points=\"10,107,20,97\"></polygon>\n<polygon points=\"27,141,41,118\"></polygon>\n<polygon points=\"471,123,481,113\"></polygon>\n<polygon points=\"474,119,489,105\"></polygon>\n<polygon points=\"-3,91,9,80\"></polygon>\n<polygon points=\"50,145,63,131\"></polygon>\n<polygon points=\"477,131,487,121\"></polygon>\n<polygon points=\"9,157,19,146\"></polygon>\n<polygon points=\"478,170,488,160\"></polygon>\n<polygon points=\"470,162,489,147\"></polygon>\n<polygon points=\"7,150,20,135\"></polygon>\n<polygon points=\"427,126,442,109\"></polygon>\n<polygon points=\"63,165,82,153\"></polygon>\n<polygon points=\"463,122,478,110\"></polygon>\n<polygon points=\"447,141,471,126\"></polygon>\n<polygon points=\"20,155,32,137\"></polygon>\n<polygon points=\"446,110,458,91\"></polygon>\n<polygon points=\"35,163,61,145\"></polygon>\n<polygon points=\"485,134,496,115\"></polygon>\n<polygon points=\"0,161,14,142\"></polygon>\n<polygon points=\"476,103,486,93\"></polygon>\n<polygon points=\"-3,150,10,138\"></polygon>\n</svg>`","/*\n  Note that re-exported types should be explicitly and separately exported\n  as types because of issues with parceljs\n\n  The error messages will be very perplexing\n\n  https://github.com/parcel-bundler/parcel/issues/4796\n  https://github.com/parcel-bundler/parcel/issues/4240\n  https://devblogs.microsoft.com/typescript/announcing-typescript-3-8/#type-only-imports-exports\n*/ const $34b63e9d5b96494c$export$a5a6e0b888b2c992 = {\n    debug: false,\n    perf: false\n};\n\n\nfunction $5165f04a46b33615$export$b7d58db314e0ac27(obj) {\n    if (obj == null || typeof obj !== \"object\") return obj;\n    if (Array.isArray(obj)) // @ts-expect-error-error\n    return obj.map($5165f04a46b33615$export$b7d58db314e0ac27);\n    const clone = {};\n    for(const key in obj){\n        const val = obj[key];\n        if (obj != null && typeof obj === \"object\") clone[key] = $5165f04a46b33615$export$b7d58db314e0ac27(val);\n        else clone[key] = val;\n    }\n    return clone;\n}\n\n\nconst $e921b0bd4f6415ab$export$c6592bbc1eebb717 = \"-xin-data\";\nconst $e921b0bd4f6415ab$export$4c0223f67078aeac = `.${$e921b0bd4f6415ab$export$c6592bbc1eebb717}`;\nconst $e921b0bd4f6415ab$export$6a7099543a9795c7 = \"-xin-event\";\nconst $e921b0bd4f6415ab$export$21d9322c3477441b = `.${$e921b0bd4f6415ab$export$6a7099543a9795c7}`;\nconst $e921b0bd4f6415ab$export$a3622eb3b5dd592a = Symbol(\"xin-path\");\nconst $e921b0bd4f6415ab$export$bdd0d039ad781534 = Symbol(\"xin-value\");\nconst $e921b0bd4f6415ab$export$40700dafb97c3799 = (x)=>{\n    return x[$e921b0bd4f6415ab$export$a3622eb3b5dd592a];\n};\nfunction $e921b0bd4f6415ab$export$5dcba2d45033d435(x) {\n    // eslint-disable-next-line\n    return typeof x === \"object\" && x !== null ? x[$e921b0bd4f6415ab$export$bdd0d039ad781534] || x : x;\n}\nconst $e921b0bd4f6415ab$export$fe712848e6e66613 = new WeakMap();\nconst $e921b0bd4f6415ab$export$1f922de8d0ecbb7e = new WeakMap();\nconst $e921b0bd4f6415ab$export$4cac8128ba61a55f = (element)=>{\n    return {\n        eventBindings: $e921b0bd4f6415ab$export$fe712848e6e66613.get(element),\n        dataBindings: $e921b0bd4f6415ab$export$1f922de8d0ecbb7e.get(element)\n    };\n};\nconst $e921b0bd4f6415ab$export$fa8cc6a36b1ccd7f = (element)=>{\n    const cloned = element.cloneNode();\n    if (cloned instanceof HTMLElement) {\n        const dataBindings = $e921b0bd4f6415ab$export$1f922de8d0ecbb7e.get(element);\n        const eventHandlers = $e921b0bd4f6415ab$export$fe712848e6e66613.get(element);\n        if (dataBindings != null) // @ts-expect-error-error\n        $e921b0bd4f6415ab$export$1f922de8d0ecbb7e.set(cloned, (0, $5165f04a46b33615$export$b7d58db314e0ac27)(dataBindings));\n        if (eventHandlers != null) // @ts-expect-error-error\n        $e921b0bd4f6415ab$export$fe712848e6e66613.set(cloned, (0, $5165f04a46b33615$export$b7d58db314e0ac27)(eventHandlers));\n    }\n    for (const node of element instanceof HTMLTemplateElement ? element.content.childNodes : element.childNodes)if (node instanceof HTMLElement || node instanceof DocumentFragment) cloned.appendChild($e921b0bd4f6415ab$export$fa8cc6a36b1ccd7f(node));\n    else cloned.appendChild(node.cloneNode());\n    return cloned;\n};\nconst $e921b0bd4f6415ab$export$86caed35dd837d06 = new WeakMap();\nconst $e921b0bd4f6415ab$export$4c309843c07ce679 = (element)=>{\n    const html = document.body.parentElement;\n    while(element.parentElement != null && element.parentElement !== html){\n        const item = $e921b0bd4f6415ab$export$86caed35dd837d06.get(element);\n        if (item != null) return item;\n        element = element.parentElement;\n    }\n    return false;\n};\n\n\n\nconst $f0b099915f91bd21$export$253d09664e30b967 = Symbol(\"observer should be removed\");\nconst $f0b099915f91bd21$export$58bed631278dbc67 = [] // { path_string_or_test, callback }\n;\nconst $f0b099915f91bd21$var$touchedPaths = [];\nlet $f0b099915f91bd21$var$updateTriggered = false;\nlet $f0b099915f91bd21$var$updatePromise;\nlet $f0b099915f91bd21$var$resolveUpdate;\nclass $f0b099915f91bd21$export$c92b1d5f43586026 {\n    constructor(test, callback){\n        const callbackDescription = typeof callback === \"string\" ? `\"${callback}\"` : `function ${callback.name}`;\n        let testDescription;\n        if (typeof test === \"string\") {\n            this.test = (t)=>typeof t === \"string\" && t !== \"\" && (test.startsWith(t) || t.startsWith(test));\n            testDescription = `test = \"${test}\"`;\n        } else if (test instanceof RegExp) {\n            this.test = test.test.bind(test);\n            testDescription = `test = \"${test.toString()}\"`;\n        } else if (test instanceof Function) {\n            this.test = test;\n            testDescription = `test = function ${test.name}`;\n        } else throw new Error(\"expect listener test to be a string, RegExp, or test function\");\n        this.description = `${testDescription}, ${callbackDescription}`;\n        if (typeof callback === \"function\") this.callback = callback;\n        else throw new Error(\"expect callback to be a path or function\");\n        $f0b099915f91bd21$export$58bed631278dbc67.push(this);\n    }\n}\nconst $f0b099915f91bd21$export$1c2919332513559b = async ()=>{\n    if ($f0b099915f91bd21$var$updatePromise === undefined) return;\n    await $f0b099915f91bd21$var$updatePromise;\n};\nconst $f0b099915f91bd21$var$update = ()=>{\n    if ((0, $34b63e9d5b96494c$export$a5a6e0b888b2c992).perf) console.time(\"xin async update\");\n    const paths = [\n        ...$f0b099915f91bd21$var$touchedPaths\n    ];\n    for (const path of paths)$f0b099915f91bd21$export$58bed631278dbc67.filter((listener)=>{\n        let heard;\n        try {\n            heard = listener.test(path);\n        } catch (e) {\n            throw new Error(`Listener ${listener.description} threw \"${e}\" at \"${path}\"`);\n        }\n        if (heard === $f0b099915f91bd21$export$253d09664e30b967) {\n            $f0b099915f91bd21$export$23a2283368c55ea2(listener);\n            return false;\n        }\n        return heard;\n    }).forEach((listener)=>{\n        let outcome;\n        try {\n            outcome = listener.callback(path);\n        } catch (e) {\n            console.error(`Listener ${listener.description} threw \"${e}\" handling \"${path}\"`);\n        }\n        if (outcome === $f0b099915f91bd21$export$253d09664e30b967) $f0b099915f91bd21$export$23a2283368c55ea2(listener);\n    });\n    $f0b099915f91bd21$var$touchedPaths.splice(0);\n    $f0b099915f91bd21$var$updateTriggered = false;\n    if (typeof $f0b099915f91bd21$var$resolveUpdate === \"function\") $f0b099915f91bd21$var$resolveUpdate();\n    if ((0, $34b63e9d5b96494c$export$a5a6e0b888b2c992).perf) console.timeEnd(\"xin async update\");\n};\nconst $f0b099915f91bd21$export$d0b7ea69ab6056df = (touchable)=>{\n    const path = typeof touchable === \"string\" ? touchable : (0, $e921b0bd4f6415ab$export$40700dafb97c3799)(touchable);\n    if (path === undefined) {\n        console.error(\"touch was called on an invalid target\", touchable);\n        throw new Error(\"touch was called on an invalid target\");\n    }\n    if ($f0b099915f91bd21$var$updateTriggered === false) {\n        $f0b099915f91bd21$var$updatePromise = new Promise((resolve)=>{\n            $f0b099915f91bd21$var$resolveUpdate = resolve;\n        });\n        $f0b099915f91bd21$var$updateTriggered = setTimeout($f0b099915f91bd21$var$update);\n    }\n    if ($f0b099915f91bd21$var$touchedPaths.find((touchedPath)=>path.startsWith(touchedPath)) == null) $f0b099915f91bd21$var$touchedPaths.push(path);\n};\nconst $f0b099915f91bd21$export$d1203567a167490e = (test, callback)=>{\n    return new $f0b099915f91bd21$export$c92b1d5f43586026(test, callback);\n};\nconst $f0b099915f91bd21$export$23a2283368c55ea2 = (listener)=>{\n    const index = $f0b099915f91bd21$export$58bed631278dbc67.indexOf(listener);\n    if (index > -1) $f0b099915f91bd21$export$58bed631278dbc67.splice(index, 1);\n    else throw new Error(\"unobserve failed, listener not found\");\n};\n\n\n// unique tokens passed to set by path to delete or create properties\nconst $31366a4b885eb48b$var$stringify = (x)=>{\n    try {\n        return JSON.stringify(x);\n    } catch (_) {\n        return \"{has circular references}\";\n    }\n};\nconst $31366a4b885eb48b$export$5a4bb2b1c89bdce7 = (...messages)=>new Error(messages.map($31366a4b885eb48b$var$stringify).join(\" \"));\n\n\nconst $c62be31ef05b0c90$var$now36 = ()=>new Date(parseInt(\"1000000000\", 36) + Date.now()).valueOf().toString(36).slice(1);\nlet $c62be31ef05b0c90$var$_seq = 0;\nconst $c62be31ef05b0c90$var$seq = ()=>(parseInt(\"10000\", 36) + ++$c62be31ef05b0c90$var$_seq).toString(36).slice(-5);\nconst $c62be31ef05b0c90$var$id = ()=>$c62be31ef05b0c90$var$now36() + $c62be31ef05b0c90$var$seq();\nconst $c62be31ef05b0c90$var$_delete_ = {};\nconst $c62be31ef05b0c90$var$_newObject_ = {};\nfunction $c62be31ef05b0c90$export$f5d2dd4cfd729958(path) {\n    if (path === \"\") return [];\n    if (Array.isArray(path)) return path;\n    else {\n        const parts = [];\n        while(path.length > 0){\n            let index = path.search(/\\[[^\\]]+\\]/);\n            if (index === -1) {\n                parts.push(path.split(\".\"));\n                break;\n            } else {\n                const part = path.slice(0, index);\n                path = path.slice(index);\n                if (part !== \"\") parts.push(part.split(\".\"));\n                index = path.indexOf(\"]\") + 1;\n                parts.push(path.slice(1, index - 1));\n                // handle paths dereferencing array element like foo[0].id\n                if (path.slice(index, index + 1) === \".\") index += 1;\n                path = path.slice(index);\n            }\n        }\n        return parts;\n    }\n}\nconst $c62be31ef05b0c90$var$idPathMaps = new WeakMap();\nfunction $c62be31ef05b0c90$var$buildIdPathValueMap(array, idPath) {\n    if ($c62be31ef05b0c90$var$idPathMaps.get(array) === undefined) $c62be31ef05b0c90$var$idPathMaps.set(array, {});\n    if ($c62be31ef05b0c90$var$idPathMaps.get(array)[idPath] === undefined) $c62be31ef05b0c90$var$idPathMaps.get(array)[idPath] = {};\n    const map = $c62be31ef05b0c90$var$idPathMaps.get(array)[idPath];\n    if (idPath === \"_auto_\") array.forEach((item, idx)=>{\n        if (item._auto_ === undefined) item._auto_ = $c62be31ef05b0c90$var$id();\n        map[item._auto_ + \"\"] = idx;\n    });\n    else array.forEach((item, idx)=>{\n        map[$c62be31ef05b0c90$export$44b5bed83342a92f(item, idPath) + \"\"] = idx;\n    });\n    return map;\n}\nfunction $c62be31ef05b0c90$var$getIdPathMap(array, idPath) {\n    if ($c62be31ef05b0c90$var$idPathMaps.get(array) === undefined || $c62be31ef05b0c90$var$idPathMaps.get(array)[idPath] === undefined) return $c62be31ef05b0c90$var$buildIdPathValueMap(array, idPath);\n    else return $c62be31ef05b0c90$var$idPathMaps.get(array)[idPath];\n}\nfunction $c62be31ef05b0c90$var$keyToIndex(array, idPath, idValue) {\n    idValue = idValue + \"\";\n    let idx = $c62be31ef05b0c90$var$getIdPathMap(array, idPath)[idValue];\n    if (idx === undefined || $c62be31ef05b0c90$export$44b5bed83342a92f(array[idx], idPath) + \"\" !== idValue) idx = $c62be31ef05b0c90$var$buildIdPathValueMap(array, idPath)[idValue];\n    return idx;\n}\nfunction $c62be31ef05b0c90$var$byKey(obj, key, valueToInsert) {\n    if (obj[key] === undefined && valueToInsert !== undefined) obj[key] = valueToInsert;\n    return obj[key];\n}\nfunction $c62be31ef05b0c90$var$byIdPath(array, idPath, idValue, valueToInsert) {\n    let idx = idPath !== \"\" ? $c62be31ef05b0c90$var$keyToIndex(array, idPath, idValue) : idValue;\n    if (valueToInsert === $c62be31ef05b0c90$var$_delete_) {\n        array.splice(idx, 1);\n        $c62be31ef05b0c90$var$idPathMaps.delete(array);\n        return Symbol(\"deleted\");\n    } else if (valueToInsert === $c62be31ef05b0c90$var$_newObject_) {\n        if (idPath === \"\" && array[idx] === undefined) array[idx] = {};\n    } else if (valueToInsert !== undefined) {\n        if (idx !== undefined) array[idx] = valueToInsert;\n        else if (idPath !== \"\" && $c62be31ef05b0c90$export$44b5bed83342a92f(valueToInsert, idPath) + \"\" === idValue + \"\") {\n            array.push(valueToInsert);\n            idx = array.length - 1;\n        } else throw new Error(`byIdPath insert failed at [${idPath}=${idValue}]`);\n    }\n    return array[idx];\n}\nfunction $c62be31ef05b0c90$var$expectArray(obj) {\n    if (!Array.isArray(obj)) throw (0, $31366a4b885eb48b$export$5a4bb2b1c89bdce7)(\"setByPath failed: expected array, found\", obj);\n}\nfunction $c62be31ef05b0c90$var$expectObject(obj) {\n    if (obj == null || !(obj instanceof Object)) throw (0, $31366a4b885eb48b$export$5a4bb2b1c89bdce7)(\"setByPath failed: expected Object, found\", obj);\n}\nfunction $c62be31ef05b0c90$export$44b5bed83342a92f(obj, path) {\n    const parts = $c62be31ef05b0c90$export$f5d2dd4cfd729958(path);\n    let found = obj;\n    let i, iMax, j, jMax;\n    for(i = 0, iMax = parts.length; found !== undefined && i < iMax; i++){\n        const part = parts[i];\n        if (Array.isArray(part)) for(j = 0, jMax = part.length; found !== undefined && j < jMax; j++){\n            const key = part[j];\n            found = found[key];\n        }\n        else {\n            if (found.length === 0) {\n                // @ts-expect-error-error\n                found = found[part.slice(1)];\n                if (part[0] !== \"=\") return undefined;\n            } else if (part.includes(\"=\")) {\n                const [idPath, ...tail] = part.split(\"=\");\n                found = $c62be31ef05b0c90$var$byIdPath(found, idPath, tail.join(\"=\"));\n            } else {\n                j = parseInt(part, 10);\n                found = found[j];\n            }\n        }\n    }\n    return found;\n}\nfunction $c62be31ef05b0c90$export$f65a19d15516795e(orig, path, val) {\n    let obj = orig;\n    const parts = $c62be31ef05b0c90$export$f5d2dd4cfd729958(path);\n    while(obj != null && parts.length > 0){\n        const part = parts.shift();\n        if (typeof part === \"string\") {\n            const equalsOffset = part.indexOf(\"=\");\n            if (equalsOffset > -1) {\n                if (equalsOffset === 0) $c62be31ef05b0c90$var$expectObject(obj);\n                else $c62be31ef05b0c90$var$expectArray(obj);\n                const idPath = part.slice(0, equalsOffset);\n                const idValue = part.slice(equalsOffset + 1);\n                obj = $c62be31ef05b0c90$var$byIdPath(obj, idPath, idValue, parts.length > 0 ? $c62be31ef05b0c90$var$_newObject_ : val);\n                if (parts.length === 0) return true;\n            } else {\n                $c62be31ef05b0c90$var$expectArray(obj);\n                const idx = parseInt(part, 10);\n                if (parts.length > 0) obj = obj[idx];\n                else {\n                    if (val !== $c62be31ef05b0c90$var$_delete_) {\n                        if (obj[idx] === val) return false;\n                        obj[idx] = val;\n                    } else obj.splice(idx, 1);\n                    return true;\n                }\n            }\n        } else if (Array.isArray(part) && part.length > 0) {\n            $c62be31ef05b0c90$var$expectObject(obj);\n            while(part.length > 0){\n                const key = part.shift();\n                if (part.length > 0 || parts.length > 0) // if we're at the end of part.length then we need to insert an array\n                obj = $c62be31ef05b0c90$var$byKey(obj, key, part.length > 0 ? {} : []);\n                else {\n                    if (val !== $c62be31ef05b0c90$var$_delete_) {\n                        if (obj[key] === val) return false;\n                        obj[key] = val;\n                    } else {\n                        if (!Object.prototype.hasOwnProperty.call(obj, key)) return false;\n                        // eslint-disable-next-line\n                        delete obj[key];\n                    }\n                    return true;\n                }\n            }\n        } else throw new Error(`setByPath failed, bad path ${path}`);\n    }\n    // eslint-disable-next-line\n    throw new Error(`setByPath(${orig}, ${path}, ${val}) failed`);\n}\nfunction $c62be31ef05b0c90$export$102e532907108dad(orig, path) {\n    if ($c62be31ef05b0c90$export$44b5bed83342a92f(orig, path) !== null) $c62be31ef05b0c90$export$f65a19d15516795e(orig, path, $c62be31ef05b0c90$var$_delete_);\n}\n\n\n\n// list of Array functions that change the array\nconst $547f11326d897190$var$ARRAY_MUTATIONS = [\n    \"sort\",\n    \"splice\",\n    \"copyWithin\",\n    \"fill\",\n    \"pop\",\n    \"push\",\n    \"reverse\",\n    \"shift\",\n    \"unshift\"\n];\nconst $547f11326d897190$var$registry = {};\nconst $547f11326d897190$var$debugPaths = true;\nconst $547f11326d897190$var$validPath = /^\\.?([^.[\\](),])+(\\.[^.[\\](),]+|\\[\\d+\\]|\\[[^=[\\](),]*=[^[\\]()]+\\])*$/;\nconst $547f11326d897190$export$a678af82bf766611 = (path)=>$547f11326d897190$var$validPath.test(path);\nconst $547f11326d897190$var$extendPath = (path = \"\", prop = \"\")=>{\n    if (path === \"\") return prop;\n    else {\n        if (prop.match(/^\\d+$/) !== null || prop.includes(\"=\")) return `${path}[${prop}]`;\n        else return `${path}.${prop}`;\n    }\n};\nconst $547f11326d897190$var$regHandler = (path = \"\")=>({\n        // TODO figure out how to correctly return array[Symbol.iterator] so that for(const foo of xin.foos) works\n        // as you'd expect\n        get (target, _prop) {\n            if (_prop === (0, $e921b0bd4f6415ab$export$a3622eb3b5dd592a)) return path;\n            else if (_prop === (0, $e921b0bd4f6415ab$export$bdd0d039ad781534)) return target;\n            if (typeof _prop === \"symbol\") // @ts-expect-error\n            return target[_prop];\n            let prop = _prop;\n            const compoundProp = prop.match(/^([^.[]+)\\.(.+)$/) ?? // basePath.subPath (omit '.')\n            prop.match(/^([^\\]]+)(\\[.+)/) ?? // basePath[subPath\n            prop.match(/^(\\[[^\\]]+\\])\\.(.+)$/) ?? // [basePath].subPath (omit '.')\n            prop.match(/^(\\[[^\\]]+\\])\\[(.+)$/) // [basePath][subPath\n            ;\n            if (compoundProp !== null) {\n                const [, basePath, subPath] = compoundProp;\n                const currentPath = $547f11326d897190$var$extendPath(path, basePath);\n                const value = (0, $c62be31ef05b0c90$export$44b5bed83342a92f)(target, basePath);\n                return value !== null && typeof value === \"object\" ? new Proxy(value, $547f11326d897190$var$regHandler(currentPath))[subPath] : value;\n            }\n            if (prop.startsWith(\"[\") && prop.endsWith(\"]\")) prop = prop.substring(1, prop.length - 1);\n            if (!Array.isArray(target) && target[prop] !== undefined || Array.isArray(target) && prop.includes(\"=\")) {\n                let value;\n                if (prop.includes(\"=\")) {\n                    const [idPath, needle] = prop.split(\"=\");\n                    value = target.find((candidate)=>`${(0, $c62be31ef05b0c90$export$44b5bed83342a92f)(candidate, idPath)}` === needle);\n                } else value = target[prop];\n                if (value !== null && typeof value === \"object\") {\n                    const currentPath = $547f11326d897190$var$extendPath(path, prop);\n                    return new Proxy(value, $547f11326d897190$var$regHandler(currentPath));\n                } else if (typeof value === \"function\") return value.bind(target);\n                else return value;\n            } else if (Array.isArray(target)) {\n                const value = target[prop];\n                return typeof value === \"function\" ? (...items)=>{\n                    // @ts-expect-error\n                    const result = Array.prototype[prop].apply(target, items);\n                    if ($547f11326d897190$var$ARRAY_MUTATIONS.includes(prop)) (0, $f0b099915f91bd21$export$d0b7ea69ab6056df)(path);\n                    return result;\n                } : typeof value === \"object\" ? new Proxy(value, $547f11326d897190$var$regHandler($547f11326d897190$var$extendPath(path, prop))) : value;\n            } else return target[prop];\n        },\n        set (_, prop, value) {\n            // eslint-disable-next-line\n            if (value != null && value[0, $e921b0bd4f6415ab$export$a3622eb3b5dd592a]) value = value[0, $e921b0bd4f6415ab$export$bdd0d039ad781534];\n            const fullPath = $547f11326d897190$var$extendPath(path, prop);\n            if ($547f11326d897190$var$debugPaths && !$547f11326d897190$export$a678af82bf766611(fullPath)) throw new Error(`setting invalid path ${fullPath}`);\n            let existing = $547f11326d897190$export$966034e6c6823eb0[fullPath];\n            // eslint-disable-next-line\n            if (existing != null && existing[0, $e921b0bd4f6415ab$export$bdd0d039ad781534] != null) existing = existing[0, $e921b0bd4f6415ab$export$bdd0d039ad781534];\n            if (existing !== value && (0, $c62be31ef05b0c90$export$f65a19d15516795e)($547f11326d897190$var$registry, fullPath, value)) (0, $f0b099915f91bd21$export$d0b7ea69ab6056df)(fullPath);\n            return true;\n        }\n    });\nconst $547f11326d897190$export$d1203567a167490e = (test, callback)=>{\n    const func = typeof callback === \"function\" ? callback : $547f11326d897190$export$966034e6c6823eb0[callback];\n    if (typeof func !== \"function\") throw new Error(`observe expects a function or path to a function, ${callback} is neither`);\n    return (0, $f0b099915f91bd21$export$d1203567a167490e)(test, func);\n};\nconst $547f11326d897190$export$966034e6c6823eb0 = new Proxy($547f11326d897190$var$registry, $547f11326d897190$var$regHandler());\n\n\n\nconst { document: $b5796eaeba5c782e$var$document , MutationObserver: $b5796eaeba5c782e$var$MutationObserver  } = globalThis;\nconst $b5796eaeba5c782e$export$80bf2f765c31be6a = (element, changedPath)=>{\n    const dataBindings = (0, $e921b0bd4f6415ab$export$1f922de8d0ecbb7e).get(element);\n    for (const dataBinding of dataBindings){\n        let { path: path , binding: binding , options: options  } = dataBinding;\n        const { toDOM: toDOM  } = binding;\n        if (toDOM != null) {\n            if (path.startsWith(\"^\")) {\n                const dataSource = (0, $e921b0bd4f6415ab$export$4c309843c07ce679)(element);\n                if (dataSource != null && dataSource[0, $e921b0bd4f6415ab$export$a3622eb3b5dd592a] != null) path = dataBinding.path = `${dataSource[0, $e921b0bd4f6415ab$export$a3622eb3b5dd592a]}${path.substring(1)}`;\n                else {\n                    console.error(`Cannot resolve relative binding ${path}`, element, \"is not part of a list\");\n                    throw new Error(`Cannot resolve relative binding ${path}`);\n                }\n            }\n            if (changedPath == null || path.startsWith(changedPath)) toDOM(element, (0, $547f11326d897190$export$966034e6c6823eb0)[path], options);\n        }\n    }\n};\n// this is just to allow bind to be testable in node\nif ($b5796eaeba5c782e$var$MutationObserver != null) {\n    const observer = new $b5796eaeba5c782e$var$MutationObserver((mutationsList)=>{\n        mutationsList.forEach((mutation)=>{\n            [\n                ...mutation.addedNodes\n            ].forEach((node)=>{\n                if (node instanceof HTMLElement) [\n                    ...node.querySelectorAll((0, $e921b0bd4f6415ab$export$4c0223f67078aeac))\n                ].forEach((element)=>$b5796eaeba5c782e$export$80bf2f765c31be6a(element));\n            });\n        });\n    });\n    observer.observe($b5796eaeba5c782e$var$document.body, {\n        subtree: true,\n        childList: true\n    });\n}\n(0, $547f11326d897190$export$d1203567a167490e)(()=>true, (changedPath)=>{\n    const boundElements = $b5796eaeba5c782e$var$document.querySelectorAll((0, $e921b0bd4f6415ab$export$4c0223f67078aeac));\n    for (const element of boundElements)$b5796eaeba5c782e$export$80bf2f765c31be6a(element, changedPath);\n});\nconst $b5796eaeba5c782e$var$handleChange = (event)=>{\n    // @ts-expect-error-error\n    let target = event.target.closest((0, $e921b0bd4f6415ab$export$4c0223f67078aeac));\n    while(target != null){\n        const dataBindings = (0, $e921b0bd4f6415ab$export$1f922de8d0ecbb7e).get(target);\n        for (const dataBinding of dataBindings){\n            const { binding: binding , path: path  } = dataBinding;\n            const { fromDOM: fromDOM  } = binding;\n            if (fromDOM != null) {\n                let value;\n                try {\n                    value = fromDOM(target, dataBinding.options);\n                } catch (e) {\n                    console.error(\"Cannot get value from\", target, \"via\", dataBinding);\n                    throw new Error(\"Cannot obtain value fromDOM\");\n                }\n                if (value != null) {\n                    const existing = (0, $547f11326d897190$export$966034e6c6823eb0)[path];\n                    // eslint-disable-next-line\n                    if (existing == null) (0, $547f11326d897190$export$966034e6c6823eb0)[path] = value;\n                    else {\n                        // @ts-expect-error-error\n                        const existingActual = existing[0, $e921b0bd4f6415ab$export$a3622eb3b5dd592a] != null ? existing[0, $e921b0bd4f6415ab$export$bdd0d039ad781534] : existing;\n                        const valueActual = value[0, $e921b0bd4f6415ab$export$a3622eb3b5dd592a] != null ? value[0, $e921b0bd4f6415ab$export$bdd0d039ad781534] : value;\n                        if (existingActual !== valueActual) (0, $547f11326d897190$export$966034e6c6823eb0)[path] = valueActual;\n                    }\n                }\n            }\n        }\n        target = target.parentElement.closest((0, $e921b0bd4f6415ab$export$4c0223f67078aeac));\n    }\n};\nif (globalThis.document != null) {\n    $b5796eaeba5c782e$var$document.body.addEventListener(\"change\", $b5796eaeba5c782e$var$handleChange, true);\n    $b5796eaeba5c782e$var$document.body.addEventListener(\"input\", $b5796eaeba5c782e$var$handleChange, true);\n}\nfunction $b5796eaeba5c782e$export$2385a24977818dd0(element, what, binding, options) {\n    if (element instanceof DocumentFragment) throw new Error(\"bind cannot bind to a DocumentFragment\");\n    let path;\n    if (typeof what === \"object\" && what[0, $e921b0bd4f6415ab$export$a3622eb3b5dd592a] === undefined && options === undefined) {\n        const { value: value  } = what;\n        path = typeof value === \"string\" ? value : value[0, $e921b0bd4f6415ab$export$a3622eb3b5dd592a];\n        options = what;\n        delete options.value;\n    } else path = typeof what === \"string\" ? what : what[0, $e921b0bd4f6415ab$export$a3622eb3b5dd592a];\n    if (path == null) throw new Error(\"bind requires a path or object with xin Proxy\");\n    const { toDOM: toDOM  } = binding;\n    element.classList.add((0, $e921b0bd4f6415ab$export$c6592bbc1eebb717));\n    let dataBindings = (0, $e921b0bd4f6415ab$export$1f922de8d0ecbb7e).get(element);\n    if (dataBindings == null) {\n        dataBindings = [];\n        (0, $e921b0bd4f6415ab$export$1f922de8d0ecbb7e).set(element, dataBindings);\n    }\n    dataBindings.push({\n        path: path,\n        binding: binding,\n        options: options\n    });\n    if (toDOM != null && !path.startsWith(\"^\")) (0, $f0b099915f91bd21$export$d0b7ea69ab6056df)(path);\n    return element;\n}\nconst $b5796eaeba5c782e$var$handledEventTypes = new Set();\nconst $b5796eaeba5c782e$var$handleBoundEvent = (event)=>{\n    // @ts-expect-error-error\n    let target = event?.target.closest((0, $e921b0bd4f6415ab$export$21d9322c3477441b));\n    let propagationStopped = false;\n    const wrappedEvent = new Proxy(event, {\n        get (target, prop) {\n            if (prop === \"stopPropagation\") return ()=>{\n                event.stopPropagation();\n                propagationStopped = true;\n            };\n            else {\n                // @ts-expect-error-error\n                const value = target[prop];\n                return typeof value === \"function\" ? value.bind(target) : value;\n            }\n        }\n    });\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while(!propagationStopped && target != null){\n        const eventBindings = (0, $e921b0bd4f6415ab$export$fe712848e6e66613).get(target);\n        // eslint-disable-next-line\n        const handlers = eventBindings[event.type] || [];\n        for (const handler of handlers){\n            if (typeof handler === \"function\") // eslint-disable-next-line\n            handler(wrappedEvent);\n            else {\n                const func = (0, $547f11326d897190$export$966034e6c6823eb0)[handler];\n                if (typeof func === \"function\") func(wrappedEvent);\n                else throw new Error(`no event handler found at path ${handler}`);\n            }\n            if (propagationStopped) continue;\n        }\n        target = target.parentElement != null ? target.parentElement.closest((0, $e921b0bd4f6415ab$export$21d9322c3477441b)) : null;\n    }\n};\nconst $b5796eaeba5c782e$export$af631764ddc44097 = (element, eventType, eventHandler)=>{\n    let eventBindings = (0, $e921b0bd4f6415ab$export$fe712848e6e66613).get(element);\n    element.classList.add((0, $e921b0bd4f6415ab$export$6a7099543a9795c7));\n    if (eventBindings == null) {\n        eventBindings = {};\n        (0, $e921b0bd4f6415ab$export$fe712848e6e66613).set(element, eventBindings);\n    }\n    // eslint-disable-next-line\n    if (!eventBindings[eventType]) eventBindings[eventType] = [];\n    if (!eventBindings[eventType].includes(eventHandler)) eventBindings[eventType].push(eventHandler);\n    if (!$b5796eaeba5c782e$var$handledEventTypes.has(eventType)) {\n        $b5796eaeba5c782e$var$handledEventTypes.add(eventType);\n        $b5796eaeba5c782e$var$document.body.addEventListener(eventType, $b5796eaeba5c782e$var$handleBoundEvent, true);\n    }\n};\n\n\n\n\nconst $f314c6851ceb0f9e$export$635e15bbd66f01ea = (target, type)=>{\n    const event = new Event(type);\n    target.dispatchEvent(event);\n};\nconst $f314c6851ceb0f9e$var$valueType = (element)=>{\n    if (element instanceof HTMLInputElement) return element.type;\n    else if (element instanceof HTMLSelectElement && element.hasAttribute(\"multiple\")) return \"multi-select\";\n    else return \"other\";\n};\nconst $f314c6851ceb0f9e$export$80746c6bc6142fc8 = (element, newValue)=>{\n    switch($f314c6851ceb0f9e$var$valueType(element)){\n        case \"radio\":\n            // @ts-expect-error\n            element.checked = element.value === newValue;\n            break;\n        case \"checkbox\":\n            // @ts-expect-error\n            element.checked = newValue;\n            break;\n        case \"date\":\n            // @ts-expect-error\n            element.valueAsDate = new Date(newValue);\n            break;\n        case \"multi-select\":\n            for (const option of [\n                ...element.querySelectorAll(\"option\")\n            ])option.selected = newValue[option.value];\n            break;\n        default:\n            // @ts-expect-error\n            element.value = newValue;\n    }\n};\nconst $f314c6851ceb0f9e$export$bf7199a9ebcb84a9 = (element)=>{\n    switch($f314c6851ceb0f9e$var$valueType(element)){\n        case \"radio\":\n            {\n                const radio = element.parentElement?.querySelector(`[name=\"${element.name}\"]:checked`);\n                return radio != null ? radio.value : null;\n            }\n        case \"checkbox\":\n            // @ts-expect-error\n            return element.checked;\n        case \"date\":\n            // @ts-expect-error\n            return element.valueAsDate.toISOString();\n        case \"multi-select\":\n            return [\n                ...element.querySelectorAll(\"option\")\n            ].reduce((map, option)=>{\n                map[option.value] = option.selected;\n                return map;\n            }, {});\n        default:\n            return element.value;\n    }\n};\n/* global ResizeObserver */ const { ResizeObserver: $f314c6851ceb0f9e$var$ResizeObserver  } = globalThis;\nconst $f314c6851ceb0f9e$export$b13421f1ae71d316 = $f314c6851ceb0f9e$var$ResizeObserver != null ? new $f314c6851ceb0f9e$var$ResizeObserver((entries)=>{\n    for (const entry of entries){\n        const element = entry.target;\n        $f314c6851ceb0f9e$export$635e15bbd66f01ea(element, \"resize\");\n    }\n}) : {\n    observe () {},\n    unobserve () {}\n};\nfunction $f314c6851ceb0f9e$var$convertToXinSlot(slot) {\n    const xinSlot = document.createElement(\"xin-slot\");\n    if (slot.name !== \"\") xinSlot.setAttribute(\"name\", slot.name);\n    slot.replaceWith(xinSlot);\n}\nconst $f314c6851ceb0f9e$export$6bb13967611cdb1 = (elt, content)=>{\n    let isSlotted = false;\n    if (elt != null && content != null) {\n        if (typeof content === \"string\") elt.textContent = content;\n        else if (Array.isArray(content)) content.forEach((node)=>{\n            elt.append(node instanceof Node ? (0, $e921b0bd4f6415ab$export$fa8cc6a36b1ccd7f)(node) : node);\n            if (node instanceof Node && node.querySelector(\"slot\") != null) isSlotted = true;\n        });\n        else if (content instanceof HTMLElement || content instanceof DocumentFragment) {\n            const slots = [\n                ...content.querySelectorAll(\"slot\")\n            ];\n            if (slots.length > 0) {\n                isSlotted = true;\n                slots.forEach($f314c6851ceb0f9e$var$convertToXinSlot);\n            }\n            elt.append((0, $e921b0bd4f6415ab$export$fa8cc6a36b1ccd7f)(content));\n        } else throw new Error(\"expect text content or document node\");\n    }\n    return isSlotted;\n};\n\n\nconst $fb7e454a17657925$export$61fc7d43ac8f84b0 = (origFn, minInterval = 250)=>{\n    let debounceId;\n    return (...args)=>{\n        if (debounceId !== undefined) clearTimeout(debounceId);\n        debounceId = setTimeout(()=>{\n            origFn(...args);\n        }, minInterval);\n    };\n};\nconst $fb7e454a17657925$export$de363e709c412c8a = (origFn, minInterval = 250)=>{\n    let debounceId;\n    let previousCall = Date.now() - minInterval;\n    let inFlight = false;\n    return (...args)=>{\n        clearTimeout(debounceId);\n        debounceId = setTimeout(async ()=>{\n            origFn(...args);\n            previousCall = Date.now();\n        }, minInterval);\n        if (!inFlight && Date.now() - previousCall >= minInterval) {\n            inFlight = true;\n            try {\n                origFn(...args);\n                previousCall = Date.now();\n            } finally{\n                inFlight = false;\n            }\n        }\n    };\n};\n\n\n\n\nconst $ea2c6a36710de0a8$var$listBindingRef = Symbol(\"list-binding\");\nconst $ea2c6a36710de0a8$var$SLICE_INTERVAL_MS = 16 // 60fps\n;\nfunction $ea2c6a36710de0a8$var$updateRelativeBindings(element, path) {\n    const boundElements = [\n        ...element.querySelectorAll((0, $e921b0bd4f6415ab$export$4c0223f67078aeac))\n    ];\n    if (element.matches((0, $e921b0bd4f6415ab$export$4c0223f67078aeac))) boundElements.unshift(element);\n    for (const boundElement of boundElements){\n        const bindings = (0, $e921b0bd4f6415ab$export$1f922de8d0ecbb7e).get(boundElement);\n        for (const binding of bindings){\n            if (binding.path.startsWith(\"^\")) binding.path = `${path}${binding.path.substring(1)}`;\n            if (binding.binding.toDOM != null) binding.binding.toDOM(boundElement, (0, $547f11326d897190$export$966034e6c6823eb0)[binding.path]);\n        }\n    }\n}\nclass $ea2c6a36710de0a8$var$ListBinding {\n    _array = [];\n    constructor(boundElement, options = {}){\n        this.boundElement = boundElement;\n        this.itemToElement = new WeakMap();\n        if (boundElement.children.length !== 1) throw new Error(\"ListBinding expects an element with exactly one child element\");\n        if (boundElement.children[0] instanceof HTMLTemplateElement) {\n            const template = boundElement.children[0];\n            if (template.content.children.length !== 1) throw new Error(\"ListBinding expects a template with exactly one child element\");\n            this.template = (0, $e921b0bd4f6415ab$export$fa8cc6a36b1ccd7f)(template.content.children[0]);\n        } else {\n            this.template = boundElement.children[0];\n            this.template.remove();\n        }\n        this.listTop = document.createElement(\"div\");\n        this.listBottom = document.createElement(\"div\");\n        this.boundElement.append(this.listTop);\n        this.boundElement.append(this.listBottom);\n        this.options = options;\n        if (options.virtual != null) {\n            (0, $f314c6851ceb0f9e$export$b13421f1ae71d316).observe(this.boundElement);\n            this._update = (0, $fb7e454a17657925$export$de363e709c412c8a)(()=>{\n                this.update(this._array, true);\n            }, $ea2c6a36710de0a8$var$SLICE_INTERVAL_MS);\n            this.boundElement.addEventListener(\"scroll\", this._update);\n            this.boundElement.addEventListener(\"resize\", this._update);\n        }\n    }\n    visibleSlice() {\n        const { virtual: virtual , hiddenProp: hiddenProp , visibleProp: visibleProp  } = this.options;\n        let visibleArray = this._array;\n        if (hiddenProp !== undefined) visibleArray = visibleArray.filter((item)=>item[hiddenProp] !== true);\n        if (visibleProp !== undefined) visibleArray = visibleArray.filter((item)=>item[visibleProp] === true);\n        let firstItem = 0;\n        let lastItem = visibleArray.length - 1;\n        let topBuffer = 0;\n        let bottomBuffer = 0;\n        if (virtual != null) {\n            const width = this.boundElement.offsetWidth;\n            const height = this.boundElement.offsetHeight;\n            const visibleColumns = virtual.width != null ? Math.max(1, Math.floor(width / virtual.width)) : 1;\n            const visibleRows = Math.ceil(height / virtual.height) + 1;\n            const totalRows = Math.ceil(visibleArray.length / visibleColumns);\n            const visibleItems = visibleColumns * visibleRows;\n            let topRow = Math.floor(this.boundElement.scrollTop / virtual.height);\n            if (topRow > totalRows - visibleRows + 1) topRow = Math.max(0, totalRows - visibleRows + 1);\n            firstItem = topRow * visibleColumns;\n            lastItem = firstItem + visibleItems - 1;\n            topBuffer = topRow * virtual.height;\n            bottomBuffer = Math.max(totalRows * virtual.height - height - topBuffer, 0);\n        }\n        return {\n            items: visibleArray,\n            firstItem: firstItem,\n            lastItem: lastItem,\n            topBuffer: topBuffer,\n            bottomBuffer: bottomBuffer\n        };\n    }\n    update(array, isSlice) {\n        if (array == null) array = [];\n        this._array = array;\n        const { initInstance: initInstance , updateInstance: updateInstance , hiddenProp: hiddenProp , visibleProp: visibleProp  } = this.options;\n        // @ts-expect-error\n        const arrayPath = (0, $e921b0bd4f6415ab$export$40700dafb97c3799)(array);\n        const slice = this.visibleSlice();\n        this.boundElement.classList.toggle(\"-xin-empty-list\", slice.items.length === 0);\n        const previousSlice = this._previousSlice;\n        const { firstItem: firstItem , lastItem: lastItem , topBuffer: topBuffer , bottomBuffer: bottomBuffer  } = slice;\n        if (hiddenProp === undefined && visibleProp === undefined && isSlice === true && previousSlice != null && firstItem === previousSlice.firstItem && lastItem === previousSlice.lastItem) return;\n        this._previousSlice = slice;\n        let removed = 0;\n        let moved = 0;\n        let created = 0;\n        for (const element of [\n            ...this.boundElement.children\n        ]){\n            if (element === this.listTop || element === this.listBottom) continue;\n            const proxy = (0, $e921b0bd4f6415ab$export$86caed35dd837d06).get(element);\n            if (proxy == null) element.remove();\n            else {\n                const idx = slice.items.indexOf(proxy);\n                if (idx < firstItem || idx > lastItem) {\n                    element.remove();\n                    this.itemToElement.delete(proxy);\n                    (0, $e921b0bd4f6415ab$export$86caed35dd837d06).delete(element);\n                    removed++;\n                }\n            }\n        }\n        this.listTop.style.height = String(topBuffer) + \"px\";\n        this.listBottom.style.height = String(bottomBuffer) + \"px\";\n        // build a complete new set of elements in the right order\n        const elements = [];\n        const { idPath: idPath  } = this.options;\n        for(let i = firstItem; i <= lastItem; i++){\n            const item = slice.items[i];\n            if (item === undefined) continue;\n            let element = this.itemToElement.get((0, $e921b0bd4f6415ab$export$5dcba2d45033d435)(item));\n            if (element == null) {\n                created++;\n                element = (0, $e921b0bd4f6415ab$export$fa8cc6a36b1ccd7f)(this.template);\n                if (typeof item === \"object\") {\n                    this.itemToElement.set((0, $e921b0bd4f6415ab$export$5dcba2d45033d435)(item), element);\n                    (0, $e921b0bd4f6415ab$export$86caed35dd837d06).set(element, (0, $e921b0bd4f6415ab$export$5dcba2d45033d435)(item));\n                }\n                this.boundElement.insertBefore(element, this.listBottom);\n                if (idPath != null) {\n                    const idValue = item[idPath];\n                    const itemPath = `${arrayPath}[${idPath}=${idValue}]`;\n                    $ea2c6a36710de0a8$var$updateRelativeBindings(element, itemPath);\n                } else {\n                    const itemPath = `${arrayPath}[${i}]`;\n                    $ea2c6a36710de0a8$var$updateRelativeBindings(element, itemPath);\n                }\n                if (initInstance != null) // eslint-disable-next-line\n                initInstance(element, item);\n            }\n            if (updateInstance != null) // eslint-disable-next-line\n            updateInstance(element, item);\n            elements.push(element);\n        }\n        // make sure all the elements are in the DOM and in the correct location\n        let insertionPoint = null;\n        for (const element of elements){\n            if (element.previousElementSibling !== insertionPoint) {\n                moved++;\n                if (insertionPoint?.nextElementSibling != null) this.boundElement.insertBefore(element, insertionPoint.nextElementSibling);\n                else this.boundElement.insertBefore(element, this.listBottom);\n            }\n            insertionPoint = element;\n        }\n        if ((0, $34b63e9d5b96494c$export$a5a6e0b888b2c992).perf) console.log(arrayPath, \"updated\", {\n            removed: removed,\n            created: created,\n            moved: moved\n        });\n    }\n}\nconst $ea2c6a36710de0a8$export$b0eb386be3b9fed8 = (boundElement, options)=>{\n    let listBinding = boundElement[$ea2c6a36710de0a8$var$listBindingRef];\n    if (listBinding == null) {\n        listBinding = new $ea2c6a36710de0a8$var$ListBinding(boundElement, options);\n        boundElement[$ea2c6a36710de0a8$var$listBindingRef] = listBinding;\n    }\n    return listBinding;\n};\n\n\n\nconst $7d9f6326e1d5d994$export$97a1a3e6f39778d2 = {\n    value: {\n        toDOM (element, value) {\n            (0, $f314c6851ceb0f9e$export$80746c6bc6142fc8)(element, value);\n        },\n        fromDOM (element) {\n            return (0, $f314c6851ceb0f9e$export$bf7199a9ebcb84a9)(element);\n        }\n    },\n    text: {\n        toDOM (element, value) {\n            element.textContent = value;\n        }\n    },\n    enabled: {\n        toDOM (element, value) {\n            // eslint-disable-next-line\n            element.disabled = !value;\n        }\n    },\n    disabled: {\n        toDOM (element, value) {\n            element.disabled = Boolean(value);\n        }\n    },\n    style: {\n        toDOM (element, value) {\n            if (typeof value === \"object\") for (const prop of Object.keys(value))// @ts-expect-error\n            element.style[prop] = value[prop];\n            else if (typeof value === \"string\") element.setAttribute(\"style\", value);\n            else throw new Error(\"style binding expects either a string or object\");\n        }\n    },\n    list: {\n        toDOM (element, value, options) {\n            const listBinding = (0, $ea2c6a36710de0a8$export$b0eb386be3b9fed8)(element, options);\n            listBinding.update(value);\n        }\n    }\n};\n\n\n/*\n# more-math\n\nSome simple functions egregiously missing from `Math`\n*/ const $0e50e8a626908591$export$ba6bc6c220358ed9 = 180 / Math.PI;\nconst $0e50e8a626908591$export$1518e1a62333c8a4 = Math.PI / 180;\nfunction $0e50e8a626908591$export$7d15b64cf5a3a4c4(min, v, max) {\n    return v < min ? min : v > max ? max : v;\n}\nfunction $0e50e8a626908591$export$3a89f8d6f6bf6c9f(a, b, t) {\n    t = $0e50e8a626908591$export$7d15b64cf5a3a4c4(0, t, 1);\n    return t * (b - a) + a;\n}\nconst $0e50e8a626908591$export$5e0dd9fd5d74e0c5 = {\n    clamp: $0e50e8a626908591$export$7d15b64cf5a3a4c4,\n    lerp: $0e50e8a626908591$export$3a89f8d6f6bf6c9f\n};\n\n\nconst $72989831e95a2bab$var$hex2 = (n)=>(\"00\" + Math.round(Number(n)).toString(16)).slice(-2);\nclass $72989831e95a2bab$var$HslColor {\n    constructor(r, g, b){\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        const l = Math.max(r, g, b);\n        const s = l - Math.min(r, g, b);\n        const h = s !== 0 ? l === r ? (g - b) / s : l === g ? 2 + (b - r) / s : 4 + (r - g) / s : 0;\n        this.h = 60 * h < 0 ? 60 * h + 360 : 60 * h;\n        this.s = s !== 0 ? l <= 0.5 ? s / (2 * l - s) : s / (2 - (2 * l - s)) : 0;\n        this.l = (2 * l - s) / 2;\n    }\n}\nconst $72989831e95a2bab$var$span = globalThis.document !== undefined ? globalThis.document.createElement(\"span\") : undefined;\nclass $72989831e95a2bab$export$892596cec99bc70e {\n    static fromCss(spec) {\n        let converted = spec;\n        if ($72989831e95a2bab$var$span instanceof HTMLSpanElement) {\n            $72989831e95a2bab$var$span.style.color = spec;\n            document.body.appendChild($72989831e95a2bab$var$span);\n            converted = getComputedStyle($72989831e95a2bab$var$span).color;\n            $72989831e95a2bab$var$span.remove();\n        }\n        const [r, g, b, a] = converted.match(/[\\d.]+/g);\n        return new $72989831e95a2bab$export$892596cec99bc70e(Number(r), Number(g), Number(b), a == null ? 1 : Number(a));\n    }\n    static fromHsl(h, s, l, a = 1) {\n        return $72989831e95a2bab$export$892596cec99bc70e.fromCss(`hsla(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%, ${a.toFixed(2)})`);\n    }\n    constructor(r, g, b, a = 1){\n        this.r = (0, $0e50e8a626908591$export$7d15b64cf5a3a4c4)(0, r, 255);\n        this.g = (0, $0e50e8a626908591$export$7d15b64cf5a3a4c4)(0, g, 255);\n        this.b = (0, $0e50e8a626908591$export$7d15b64cf5a3a4c4)(0, b, 255);\n        this.a = a !== undefined ? (0, $0e50e8a626908591$export$7d15b64cf5a3a4c4)(0, a, 1) : a = 1;\n    }\n    get inverse() {\n        return new $72989831e95a2bab$export$892596cec99bc70e(255 - this.r, 255 - this.g, 255 - this.b, this.a);\n    }\n    get inverseLuminance() {\n        const { h: h , s: s , l: l  } = this._hsl;\n        return $72989831e95a2bab$export$892596cec99bc70e.fromHsl(h, s, 1 - l, this.a);\n    }\n    get rgb() {\n        const { r: r , g: g , b: b  } = this;\n        return `rgb(${r.toFixed(0)},${g.toFixed(0)},${b.toFixed(0)})`;\n    }\n    get rgba() {\n        const { r: r , g: g , b: b , a: a  } = this;\n        return `rgba(${r.toFixed(0)},${g.toFixed(0)},${b.toFixed(0)},${a.toFixed(2)})`;\n    }\n    get RGBA() {\n        return [\n            this.r / 255,\n            this.g / 255,\n            this.b / 255,\n            this.a\n        ];\n    }\n    get ARGB() {\n        return [\n            this.a,\n            this.r / 255,\n            this.g / 255,\n            this.b / 255\n        ];\n    }\n    get _hsl() {\n        if (this._hslCached == null) this._hslCached = new $72989831e95a2bab$var$HslColor(this.r, this.g, this.b);\n        return this._hslCached;\n    }\n    get hsl() {\n        const { h: h , s: s , l: l  } = this._hsl;\n        return `hsl(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%)`;\n    }\n    get hsla() {\n        const { h: h , s: s , l: l  } = this._hsl;\n        return `hsla(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%, ${this.a.toFixed(2)})`;\n    }\n    get mono() {\n        const v = this.brightness * 255;\n        return new $72989831e95a2bab$export$892596cec99bc70e(v, v, v);\n    }\n    get brightness() {\n        // http://www.itu.int/rec/R-REC-BT.601\n        return (0.299 * this.r + 0.587 * this.g + 0.114 * this.b) / 255;\n    }\n    get html() {\n        return this.a === 1 ? \"#\" + $72989831e95a2bab$var$hex2(this.r) + $72989831e95a2bab$var$hex2(this.g) + $72989831e95a2bab$var$hex2(this.b) : \"#\" + $72989831e95a2bab$var$hex2(this.r) + $72989831e95a2bab$var$hex2(this.g) + $72989831e95a2bab$var$hex2(this.b) + $72989831e95a2bab$var$hex2(Math.floor(255 * this.a));\n    }\n    brighten(amount) {\n        let { h: h , s: s , l: l  } = this._hsl;\n        l = (0, $0e50e8a626908591$export$7d15b64cf5a3a4c4)(0, l + amount * (1 - l), 1);\n        return $72989831e95a2bab$export$892596cec99bc70e.fromHsl(h, s, l, this.a);\n    }\n    darken(amount) {\n        let { h: h , s: s , l: l  } = this._hsl;\n        l = (0, $0e50e8a626908591$export$7d15b64cf5a3a4c4)(0, l * (1 - amount), 1);\n        return $72989831e95a2bab$export$892596cec99bc70e.fromHsl(h, s, l, this.a);\n    }\n    saturate(amount) {\n        let { h: h , s: s , l: l  } = this._hsl;\n        s = (0, $0e50e8a626908591$export$7d15b64cf5a3a4c4)(0, s + amount * (1 - s), 1);\n        return $72989831e95a2bab$export$892596cec99bc70e.fromHsl(h, s, l, this.a);\n    }\n    desaturate(amount) {\n        let { h: h , s: s , l: l  } = this._hsl;\n        s = (0, $0e50e8a626908591$export$7d15b64cf5a3a4c4)(0, s * (1 - amount), 1);\n        return $72989831e95a2bab$export$892596cec99bc70e.fromHsl(h, s, l, this.a);\n    }\n    rotate(amount) {\n        let { h: h , s: s , l: l  } = this._hsl;\n        h = (h + 360 + amount) % 360;\n        return $72989831e95a2bab$export$892596cec99bc70e.fromHsl(h, s, l, this.a);\n    }\n    opacity(alpha) {\n        const { h: h , s: s , l: l  } = this._hsl;\n        return $72989831e95a2bab$export$892596cec99bc70e.fromHsl(h, s, l, alpha);\n    }\n    swatch() {\n        const { r: r , g: g , b: b , a: a  } = this;\n        console.log(`%c   %c ${this.html}, rgba(${r}, ${g}, ${b}, ${a}), ${this.hsla}`, `background-color: rgba(${r}, ${g}, ${b}, ${a})`, \"background-color: #eee\");\n    }\n    blend(otherColor, t) {\n        return new $72989831e95a2bab$export$892596cec99bc70e((0, $0e50e8a626908591$export$3a89f8d6f6bf6c9f)(this.r, otherColor.r, t), (0, $0e50e8a626908591$export$3a89f8d6f6bf6c9f)(this.g, otherColor.g, t), (0, $0e50e8a626908591$export$3a89f8d6f6bf6c9f)(this.b, otherColor.b, t), (0, $0e50e8a626908591$export$3a89f8d6f6bf6c9f)(this.a, otherColor.a, t));\n    }\n}\n\n\n\n\nfunction $bed4bed3dcfb6f9a$export$87ae551bf60f4bb(s) {\n    return s.replace(/[A-Z]/g, (c)=>{\n        return `-${c.toLocaleLowerCase()}`;\n    });\n}\nfunction $bed4bed3dcfb6f9a$export$fd322201efdc650f(s) {\n    return s.replace(/-([a-z])/g, (_, c)=>{\n        return c.toLocaleUpperCase();\n    });\n}\n\n\nconst $9e0c0b8784c80412$var$templates = {};\nconst $9e0c0b8784c80412$var$create = (tagType, ...contents)=>{\n    if ($9e0c0b8784c80412$var$templates[tagType] === undefined) $9e0c0b8784c80412$var$templates[tagType] = globalThis.document.createElement(tagType);\n    const elt = $9e0c0b8784c80412$var$templates[tagType].cloneNode();\n    const elementProps = {};\n    for (const item of contents)if (item instanceof Element || item instanceof DocumentFragment || typeof item === \"string\" || typeof item === \"number\") {\n        if (elt instanceof HTMLTemplateElement) elt.content.append(item);\n        else elt.append(item);\n    } else Object.assign(elementProps, item);\n    for (const key of Object.keys(elementProps)){\n        const value = elementProps[key];\n        if (key === \"apply\") value(elt);\n        else if (key === \"style\") {\n            if (typeof value === \"object\") {\n                for (const prop of Object.keys(value))if (prop.startsWith(\"--\")) elt.style.setProperty(prop, value[prop]);\n                else // @ts-expect-error\n                elt.style[prop] = value[prop];\n            } else elt.setAttribute(\"style\", value);\n        } else if (key.match(/^on[A-Z]/) != null) {\n            const eventType = key.substring(2).toLowerCase();\n            (0, $b5796eaeba5c782e$export$af631764ddc44097)(elt, eventType, value);\n        } else if (key.match(/^bind[A-Z]/) != null) {\n            const bindingType = key.substring(4, 5).toLowerCase() + key.substring(5);\n            const binding = (0, $7d9f6326e1d5d994$export$97a1a3e6f39778d2)[bindingType];\n            if (binding !== undefined) (0, $b5796eaeba5c782e$export$2385a24977818dd0)(elt, value, binding);\n            else throw new Error(`${key} is not allowed, bindings.${bindingType} is not defined`);\n        // @ts-expect-error\n        } else if (elt[key] !== undefined) // @ts-expect-error\n        elt[key] = value;\n        else {\n            const attr = (0, $bed4bed3dcfb6f9a$export$87ae551bf60f4bb)(key);\n            if (attr === \"class\") value.split(\" \").forEach((className)=>{\n                elt.classList.add(className);\n            });\n            else if (elt[attr] !== undefined) // @ts-expect-error-error\n            elt[attr] = value;\n            else if (typeof value === \"boolean\") value ? elt.setAttribute(attr, \"\") : elt.removeAttribute(attr);\n            else elt.setAttribute(attr, value);\n        }\n    }\n    return elt;\n};\nconst $9e0c0b8784c80412$var$fragment = (...contents)=>{\n    const frag = globalThis.document.createDocumentFragment();\n    for (const item of contents)frag.append(item);\n    return frag;\n};\nconst $9e0c0b8784c80412$export$7a5d735b2ab6389d = new Proxy({\n    fragment: $9e0c0b8784c80412$var$fragment\n}, {\n    get (target, tagName) {\n        tagName = tagName.replace(/[A-Z]/g, (c)=>`-${c.toLocaleLowerCase()}`);\n        if (tagName.match(/^\\w+(-\\w+)*$/) == null) throw new Error(`${tagName} does not appear to be a valid element tagName`);\n        else if (target[tagName] === undefined) // @ts-expect-error\n        target[tagName] = (...contents)=>$9e0c0b8784c80412$var$create(tagName, ...contents);\n        // @ts-expect-error\n        return target[tagName];\n    },\n    set () {\n        throw new Error(\"You may not add new properties to elements\");\n    }\n});\n\n\n\nfunction $49cee7f7f866c751$export$bc59121b0a0fcbd3(styleSheet) {\n    return (0, $9e0c0b8784c80412$export$7a5d735b2ab6389d).style($49cee7f7f866c751$export$dbf350e5966cf602(styleSheet));\n}\nconst $49cee7f7f866c751$var$numericProps = [\n    \"animation-iteration-count\",\n    \"flex\",\n    \"flex-base\",\n    \"flex-grow\",\n    \"flex-shrink\",\n    \"gap\",\n    \"opacity\",\n    \"order\",\n    \"tab-size\",\n    \"widows\",\n    \"z-index\",\n    \"zoom\"\n];\nconst $49cee7f7f866c751$var$renderProp = (indentation, cssProp, value)=>{\n    if (value === undefined) return \"\";\n    else if (typeof value === \"string\" || $49cee7f7f866c751$var$numericProps.includes(cssProp)) return `${indentation}  ${cssProp}: ${value};`;\n    else return `${indentation}  ${cssProp}: ${value}px;`;\n};\nconst $49cee7f7f866c751$var$renderStatement = (key, value, indentation = \"\")=>{\n    const cssProp = (0, $bed4bed3dcfb6f9a$export$87ae551bf60f4bb)(key);\n    if (typeof value === \"object\") {\n        const renderedRule = Object.keys(value).map((innerKey)=>$49cee7f7f866c751$var$renderStatement(innerKey, value[innerKey], `${indentation}  `)).join(\"\\n\");\n        return `${indentation}  ${key} {\\n${renderedRule}\\n${indentation}  }`;\n    } else return $49cee7f7f866c751$var$renderProp(indentation, cssProp, value);\n};\nconst $49cee7f7f866c751$export$dbf350e5966cf602 = (obj, indentation = \"\")=>{\n    const selectors = Object.keys(obj).map((selector)=>{\n        const body = obj[selector];\n        if (typeof body === \"string\") {\n            if (selector === \"@import\") return `@import url('${body}');`;\n            throw new Error(\"top-level string value only allowed for `@import`\");\n        }\n        const rule = Object.keys(body).map((prop)=>$49cee7f7f866c751$var$renderStatement(prop, body[prop])).join(\"\\n\");\n        return `${indentation}${selector} {\\n${rule}\\n}`;\n    });\n    return selectors.join(\"\\n\\n\");\n};\nconst $49cee7f7f866c751$export$90d0ea046136e3ed = (obj)=>{\n    const rule = {};\n    for (const key of Object.keys(obj)){\n        const value = obj[key];\n        const kabobKey = (0, $bed4bed3dcfb6f9a$export$87ae551bf60f4bb)(key);\n        rule[`--${kabobKey}`] = typeof value === \"number\" && value !== 0 ? String(value) + \"px\" : value;\n    }\n    return rule;\n};\nconst $49cee7f7f866c751$export$808aaf1b460dc9af = (obj)=>{\n    const rule = {};\n    for (const key of Object.keys(obj)){\n        let value = obj[key];\n        if (typeof value === \"string\" && value.match(/^(#|rgb[a]?\\(|hsl[a]?\\()/) != null) {\n            value = (0, $72989831e95a2bab$export$892596cec99bc70e).fromCss(value).inverseLuminance.html;\n            rule[`--${(0, $bed4bed3dcfb6f9a$export$87ae551bf60f4bb)(key)}`] = value;\n        }\n    }\n    return rule;\n};\nconst $49cee7f7f866c751$export$3cb96c9f6c8d16a4 = new Proxy({}, {\n    get (target, prop) {\n        if (target[prop] == null) {\n            prop = prop.replace(/[A-Z]/g, (x)=>`-${x.toLocaleLowerCase()}`);\n            let [, varName, , isNegative, scaleText, method] = prop.match(/^([^\\d_]*)((_)?(\\d+)(\\w*))?$/);\n            varName = `--${varName}`;\n            if (scaleText != null) {\n                const scale = isNegative == null ? Number(scaleText) / 100 : -Number(scaleText) / 100;\n                switch(method){\n                    case \"b\":\n                        {\n                            const baseColor = getComputedStyle(document.body).getPropertyValue(varName);\n                            target[prop] = scale > 0 ? (0, $72989831e95a2bab$export$892596cec99bc70e).fromCss(baseColor).brighten(scale).rgba : (0, $72989831e95a2bab$export$892596cec99bc70e).fromCss(baseColor).darken(-scale).rgba;\n                        }\n                        break;\n                    case \"s\":\n                        {\n                            const baseColor = getComputedStyle(document.body).getPropertyValue(varName);\n                            target[prop] = scale > 0 ? (0, $72989831e95a2bab$export$892596cec99bc70e).fromCss(baseColor).saturate(scale).rgba : (0, $72989831e95a2bab$export$892596cec99bc70e).fromCss(baseColor).desaturate(-scale).rgba;\n                        }\n                        break;\n                    case \"h\":\n                        {\n                            const baseColor = getComputedStyle(document.body).getPropertyValue(varName);\n                            target[prop] = (0, $72989831e95a2bab$export$892596cec99bc70e).fromCss(baseColor).rotate(scale * 100).rgba;\n                            console.log((0, $72989831e95a2bab$export$892596cec99bc70e).fromCss(baseColor).hsla, (0, $72989831e95a2bab$export$892596cec99bc70e).fromCss(baseColor).rotate(scale).hsla);\n                        }\n                        break;\n                    case \"o\":\n                        {\n                            const baseColor = getComputedStyle(document.body).getPropertyValue(varName);\n                            target[prop] = (0, $72989831e95a2bab$export$892596cec99bc70e).fromCss(baseColor).opacity(scale).rgba;\n                        }\n                        break;\n                    case \"\":\n                        target[prop] = `calc(var(${varName}) * ${scale})`;\n                        break;\n                    default:\n                        console.error(method);\n                        throw new Error(`Unrecognized method ${method} for css variable ${varName}`);\n                }\n            } else target[prop] = `var(${varName})`;\n        }\n        return target[prop];\n    }\n});\n\n\n\n\n\n\n\n\nlet $cd387b053feba574$var$instanceCount = 0;\nclass $cd387b053feba574$export$16fa2f45be04daa8 extends HTMLElement {\n    static elements = (0, $9e0c0b8784c80412$export$7a5d735b2ab6389d);\n    content = (0, $9e0c0b8784c80412$export$7a5d735b2ab6389d).slot();\n    static StyleNode(styleSpec) {\n        return (0, $9e0c0b8784c80412$export$7a5d735b2ab6389d).style((0, $49cee7f7f866c751$export$dbf350e5966cf602)(styleSpec));\n    }\n    static elementCreator(options) {\n        if (this._elementCreator == null) {\n            let desiredTag = options != null ? options.tag : null;\n            if (desiredTag == null) {\n                desiredTag = (0, $bed4bed3dcfb6f9a$export$87ae551bf60f4bb)(this.name);\n                if (desiredTag.startsWith(\"-\")) desiredTag = desiredTag.substring(1);\n                if (!desiredTag.includes(\"-\")) desiredTag += \"-elt\";\n            }\n            let attempts = 0;\n            while(this._elementCreator == null){\n                attempts += 1;\n                const tag = attempts === 1 ? desiredTag : `${desiredTag}-${attempts}`;\n                try {\n                    window.customElements.define(tag, this, options);\n                    this._elementCreator = (0, $9e0c0b8784c80412$export$7a5d735b2ab6389d)[tag];\n                } catch (e) {\n                    throw new Error(`could not define ${this.name} as <${tag}>: ${String(e)}`);\n                }\n            }\n        }\n        return this._elementCreator;\n    }\n    initAttributes(...attributeNames) {\n        const attributes = {};\n        const attributeValues = {};\n        const observer = new MutationObserver((mutationsList)=>{\n            let triggerRender = false;\n            mutationsList.forEach((mutation)=>{\n                // eslint-disable-next-line\n                triggerRender = !!(mutation.attributeName && attributeNames.includes((0, $bed4bed3dcfb6f9a$export$fd322201efdc650f)(mutation.attributeName)));\n            });\n            if (triggerRender && this.queueRender !== undefined) this.queueRender(false);\n        });\n        observer.observe(this, {\n            attributes: true\n        });\n        attributeNames.forEach((attributeName)=>{\n            attributes[attributeName] = (0, $5165f04a46b33615$export$b7d58db314e0ac27)(this[attributeName]);\n            const attributeKabob = (0, $bed4bed3dcfb6f9a$export$87ae551bf60f4bb)(attributeName);\n            Object.defineProperty(this, attributeName, {\n                enumerable: false,\n                get () {\n                    if (typeof attributes[attributeName] === \"boolean\") return this.hasAttribute(attributeKabob);\n                    else {\n                        // eslint-disable-next-line\n                        if (this.hasAttribute(attributeKabob)) return typeof attributes[attributeName] === \"number\" ? parseFloat(this.getAttribute(attributeKabob)) : this.getAttribute(attributeKabob);\n                        else if (attributeValues[attributeName] !== undefined) // @ts-expect-error\n                        return attributeValues[attributeName];\n                        else return attributes[attributeName];\n                    }\n                },\n                set (value) {\n                    if (typeof attributes[attributeName] === \"boolean\") {\n                        if (value !== this[attributeName]) {\n                            // eslint-disable-next-line\n                            if (value) this.setAttribute(attributeKabob, \"\");\n                            else this.removeAttribute(attributeKabob);\n                            this.queueRender();\n                        }\n                    } else if (typeof attributes[attributeName] === \"number\") {\n                        if (value !== parseFloat(this[attributeName])) {\n                            this.setAttribute(attributeKabob, value);\n                            this.queueRender();\n                        }\n                    } else if (typeof value === \"object\" || `${value}` !== `${this[attributeName]}`) {\n                        if (value === null || value === undefined || typeof value === \"object\") this.removeAttribute(attributeKabob);\n                        else this.setAttribute(attributeKabob, value);\n                        this.queueRender();\n                        // @ts-expect-error\n                        attributeValues[attributeName] = value;\n                    }\n                }\n            });\n        });\n    }\n    initValue() {\n        const valueDescriptor = Object.getOwnPropertyDescriptor(this, \"value\");\n        if (valueDescriptor === undefined || valueDescriptor.get !== undefined || valueDescriptor.set !== undefined) return;\n        let value = this.hasAttribute(\"value\") ? this.getAttribute(\"value\") : (0, $5165f04a46b33615$export$b7d58db314e0ac27)(this.value);\n        delete this.value;\n        Object.defineProperty(this, \"value\", {\n            enumerable: false,\n            get () {\n                return value;\n            },\n            set (newValue) {\n                if (value !== newValue) {\n                    value = newValue;\n                    this.queueRender(true);\n                }\n            }\n        });\n    }\n    get refs() {\n        const root = this.shadowRoot != null ? this.shadowRoot : this;\n        if (this._refs == null) this._refs = new Proxy({}, {\n            get (target, ref) {\n                if (target[ref] === undefined) {\n                    let element = root.querySelector(`[data-ref=\"${ref}\"]`);\n                    if (element == null) element = root.querySelector(ref);\n                    if (element == null) throw new Error(`elementRef \"${ref}\" does not exist!`);\n                    element.removeAttribute(\"data-ref\");\n                    target[ref] = element;\n                }\n                return target[ref];\n            }\n        });\n        return this._refs;\n    }\n    constructor(){\n        super();\n        $cd387b053feba574$var$instanceCount += 1;\n        this.initAttributes(\"hidden\");\n        this.instanceId = `${this.tagName.toLocaleLowerCase()}-${$cd387b053feba574$var$instanceCount}`;\n        this._value = (0, $5165f04a46b33615$export$b7d58db314e0ac27)(this.defaultValue);\n    }\n    connectedCallback() {\n        this.hydrate();\n        // super annoyingly, chrome loses its shit if you set *any* attributes in the constructor\n        if (this.role != null) this.setAttribute(\"role\", this.role);\n        if (this.onResize !== undefined) {\n            (0, $f314c6851ceb0f9e$export$b13421f1ae71d316).observe(this);\n            if (this._onResize == null) this._onResize = this.onResize.bind(this);\n            this.addEventListener(\"resize\", this._onResize);\n        }\n        if (this.value != null && this.getAttribute(\"value\") != null) this._value = this.getAttribute(\"value\");\n        this.queueRender();\n    }\n    disconnectedCallback() {\n        (0, $f314c6851ceb0f9e$export$b13421f1ae71d316).unobserve(this);\n    }\n    _changeQueued = false;\n    _renderQueued = false;\n    queueRender(triggerChangeEvent = false) {\n        if (!this._hydrated) return;\n        if (!this._changeQueued) this._changeQueued = triggerChangeEvent;\n        if (!this._renderQueued) {\n            this._renderQueued = true;\n            requestAnimationFrame(()=>{\n                // TODO add mechanism to allow component developer to have more control over\n                // whether input vs. change events are emitted\n                if (this._changeQueued) (0, $f314c6851ceb0f9e$export$635e15bbd66f01ea)(this, \"change\");\n                this._changeQueued = false;\n                this._renderQueued = false;\n                this.render();\n            });\n        }\n    }\n    _hydrated = false;\n    hydrate() {\n        if (!this._hydrated) {\n            this.initValue();\n            const _content = typeof this.content === \"function\" ? this.content() : this.content;\n            if (this.styleNode !== undefined) {\n                const shadow = this.attachShadow({\n                    mode: \"open\"\n                });\n                shadow.appendChild(this.styleNode);\n                (0, $f314c6851ceb0f9e$export$6bb13967611cdb1)(shadow, _content);\n            } else {\n                const existingChildren = [\n                    ...this.childNodes\n                ];\n                if ((0, $f314c6851ceb0f9e$export$6bb13967611cdb1)(this, _content) && existingChildren.length > 0) {\n                    const slotMap = {\n                        \"\": this\n                    };\n                    [\n                        ...this.querySelectorAll(\"xin-slot\")\n                    ].forEach((slot)=>{\n                        // @ts-expect-error\n                        slotMap[slot.name] = slot;\n                    });\n                    existingChildren.forEach((child)=>{\n                        const defaultSlot = slotMap[\"\"];\n                        const destSlot = child instanceof Element ? slotMap[child.slot] : defaultSlot;\n                        (destSlot !== undefined ? destSlot : defaultSlot).append(child);\n                    });\n                }\n            }\n            this._hydrated = true;\n        }\n    }\n    render() {}\n}\nclass $cd387b053feba574$var$XinSlot extends $cd387b053feba574$export$16fa2f45be04daa8 {\n    name = \"\";\n    content = null;\n    constructor(){\n        super();\n        this.initAttributes(\"name\");\n    }\n}\nconst $cd387b053feba574$export$a0751b4aa1961d4e = $cd387b053feba574$var$XinSlot.elementCreator({\n    tag: \"xin-slot\"\n});\n\n\n\n\n\n\nconst $4c651860c5272284$export$93b87f7746612069 = (test = ()=>true)=>{\n    const savedState = localStorage.getItem(\"xin-state\");\n    if (savedState != null) {\n        const state = JSON.parse(savedState);\n        for (const key of Object.keys(state).filter(test))if ((0, $547f11326d897190$export$966034e6c6823eb0)[key] !== undefined) Object.assign((0, $547f11326d897190$export$966034e6c6823eb0)[key], state[key]);\n        else (0, $547f11326d897190$export$966034e6c6823eb0)[key] = state[key];\n    }\n    const saveState = (0, $fb7e454a17657925$export$61fc7d43ac8f84b0)(()=>{\n        const obj = {};\n        const state = (0, $547f11326d897190$export$966034e6c6823eb0)[0, $e921b0bd4f6415ab$export$bdd0d039ad781534];\n        for (const key of Object.keys(state).filter(test))obj[key] = state[key];\n        localStorage.setItem(\"xin-state\", JSON.stringify(obj));\n        console.log(\"xin state saved to localStorage\");\n    }, 500);\n    (0, $547f11326d897190$export$d1203567a167490e)(test, saveState);\n};\n\n\n\n\n\n\n\nvar $526cc5d62ff194fb$exports = {};\n\n\n\nfunction $7bb234cc8fd49201$export$95a552d2395ab4c4(obj) {\n    const registered = {};\n    Object.keys(obj).forEach((key)=>{\n        // eslint-disable-next-line\n        (0, $547f11326d897190$export$966034e6c6823eb0)[key] = obj[key];\n        registered[key] = (0, $547f11326d897190$export$966034e6c6823eb0)[key];\n    });\n    return registered;\n}\n\n\n\n\nexport {$b5796eaeba5c782e$export$2385a24977818dd0 as bind, $b5796eaeba5c782e$export$af631764ddc44097 as on, $7d9f6326e1d5d994$export$97a1a3e6f39778d2 as bindings, $49cee7f7f866c751$export$3cb96c9f6c8d16a4 as vars, $49cee7f7f866c751$export$90d0ea046136e3ed as initVars, $49cee7f7f866c751$export$dbf350e5966cf602 as css, $49cee7f7f866c751$export$808aaf1b460dc9af as darkMode, $72989831e95a2bab$export$892596cec99bc70e as Color, $cd387b053feba574$export$16fa2f45be04daa8 as Component, $9e0c0b8784c80412$export$7a5d735b2ab6389d as elements, $4c651860c5272284$export$93b87f7746612069 as hotReload, $e921b0bd4f6415ab$export$4c309843c07ce679 as getListItem, $e921b0bd4f6415ab$export$40700dafb97c3799 as xinPath, $e921b0bd4f6415ab$export$5dcba2d45033d435 as xinValue, $0e50e8a626908591$export$5e0dd9fd5d74e0c5 as MoreMath, $34b63e9d5b96494c$export$a5a6e0b888b2c992 as settings, $fb7e454a17657925$export$de363e709c412c8a as throttle, $fb7e454a17657925$export$61fc7d43ac8f84b0 as debounce, $547f11326d897190$export$966034e6c6823eb0 as xin, $547f11326d897190$export$d1203567a167490e as observe, $f0b099915f91bd21$export$23a2283368c55ea2 as unobserve, $f0b099915f91bd21$export$d0b7ea69ab6056df as touch, $f0b099915f91bd21$export$253d09664e30b967 as observerShouldBeRemoved, $7bb234cc8fd49201$export$95a552d2395ab4c4 as xinProxy};\n//# sourceMappingURL=module.js.map\n","/*\n  Note that re-exported types should be explicitly and separately exported\n  as types because of issues with parceljs\n\n  The error messages will be very perplexing\n\n  https://github.com/parcel-bundler/parcel/issues/4796\n  https://github.com/parcel-bundler/parcel/issues/4240\n  https://devblogs.microsoft.com/typescript/announcing-typescript-3-8/#type-only-imports-exports\n*/\n\nexport { bind, on } from './bind'\nexport { bindings } from './bindings'\nexport { vars, initVars, css, darkMode } from './css'\nexport type { XinStyleSheet, XinStyleMap, XinStyleRule } from './css-types'\nexport { Color } from './color'\nexport { Component } from './component'\nexport { elements } from './elements'\nexport type { ElementsProxy } from './elements'\nexport { hotReload } from './hot-reload'\nexport { getListItem, xinPath, xinValue } from './metadata'\nexport { MoreMath } from './more-math'\nexport { settings } from './settings'\nexport { throttle, debounce } from './throttle'\nexport { xin, observe, unobserve, touch, observerShouldBeRemoved } from './xin'\nexport * from './xin-types'\nexport { xinProxy } from './xin-proxy'\n","import { xin, touch, observe } from './xin'\nimport {\n  getListItem, elementToBindings, elementToHandlers, DataBindings, BOUND_CLASS, BOUND_SELECTOR,\n  EVENT_CLASS, EVENT_SELECTOR, XinEventBindings, XIN_PATH, XIN_VALUE\n} from './metadata'\nimport { XinObject, XinProxy, XinEventHandler, XinTouchableType, XinBinding, XinBindingSpec } from './xin-types'\n\nconst { document, MutationObserver } = globalThis\n\nexport const touchElement = (element: HTMLElement, changedPath?: string): void => {\n  const dataBindings = elementToBindings.get(element) as DataBindings\n  for (const dataBinding of dataBindings) {\n    let { path, binding, options } = dataBinding\n    const { toDOM } = binding\n    if (toDOM != null) {\n      if (path.startsWith('^')) {\n        const dataSource = getListItem(element)\n        if (dataSource != null && (dataSource as XinProxy)[XIN_PATH] != null) {\n          path = dataBinding.path = `${(dataSource as XinProxy)[XIN_PATH]}${path.substring(1)}`\n        } else {\n          console.error(`Cannot resolve relative binding ${path}`, element, 'is not part of a list')\n          throw new Error(`Cannot resolve relative binding ${path}`)\n        }\n      }\n      if (changedPath == null || path.startsWith(changedPath)) {\n        toDOM(element, xin[path], options)\n      }\n    }\n  }\n}\n\n// this is just to allow bind to be testable in node\nif (MutationObserver != null) {\n  const observer = new MutationObserver((mutationsList) => {\n    mutationsList.forEach((mutation) => {\n      [...mutation.addedNodes].forEach(node => {\n        if (node instanceof HTMLElement) {\n          [...node.querySelectorAll(BOUND_SELECTOR)].forEach(element => touchElement(element as HTMLElement))\n        }\n      })\n    })\n  })\n  observer.observe(document.body, { subtree: true, childList: true })\n}\n\nobserve(() => true, (changedPath: string) => {\n  const boundElements = document.querySelectorAll(BOUND_SELECTOR)\n\n  for (const element of boundElements) {\n    touchElement(element as HTMLElement, changedPath)\n  }\n})\n\nconst handleChange = (event: Event): void => {\n  // @ts-expect-error-error\n  let target = event.target.closest(BOUND_SELECTOR)\n  while (target != null) {\n    const dataBindings = elementToBindings.get(target) as DataBindings\n    for (const dataBinding of dataBindings) {\n      const { binding, path } = dataBinding\n      const { fromDOM } = binding\n      if (fromDOM != null) {\n        let value\n        try {\n          value = fromDOM(target, dataBinding.options)\n        } catch (e) {\n          console.error('Cannot get value from', target, 'via', dataBinding)\n          throw new Error('Cannot obtain value fromDOM')\n        }\n        if (value != null) {\n          const existing = xin[path]\n          // eslint-disable-next-line\n          if (existing == null) {\n            xin[path] = value\n          } else {\n            // @ts-expect-error-error\n            const existingActual = existing[XIN_PATH] != null ? (existing as XinProxy)[XIN_VALUE] : existing\n            const valueActual = value[XIN_PATH] != null ? value[XIN_VALUE] : value\n            if (existingActual !== valueActual) {\n              xin[path] = valueActual\n            }\n          }\n        }\n      }\n    }\n    target = target.parentElement.closest(BOUND_SELECTOR)\n  }\n}\n\nif (globalThis.document != null) {\n  document.body.addEventListener('change', handleChange, true)\n  document.body.addEventListener('input', handleChange, true)\n}\n\nexport function bind<T extends HTMLElement> (element: T, what: XinTouchableType | XinBindingSpec, binding: XinBinding<T>, options?: XinObject): T {\n  if (element instanceof DocumentFragment) {\n    throw new Error('bind cannot bind to a DocumentFragment')\n  }\n  let path: string\n  if (typeof what === 'object' && (what as XinProxy)[XIN_PATH] === undefined && options === undefined) {\n    const { value } = what as XinBindingSpec\n    path = typeof value === 'string' ? value : value[XIN_PATH]\n    options = what as XinObject\n    delete options.value\n  } else {\n    path = typeof what === 'string' ? what : (what as XinProxy)[XIN_PATH]\n  }\n  if (path == null) {\n    throw new Error('bind requires a path or object with xin Proxy')\n  }\n  const { toDOM } = binding\n\n  element.classList.add(BOUND_CLASS)\n  let dataBindings = elementToBindings.get(element)\n  if (dataBindings == null) {\n    dataBindings = []\n    elementToBindings.set(element, dataBindings)\n  }\n  dataBindings.push({ path, binding: binding as XinBinding<HTMLElement>, options })\n\n  if (toDOM != null && !path.startsWith('^')) {\n    touch(path)\n  }\n\n  return element\n}\n\nconst handledEventTypes: Set<string> = new Set()\n\nconst handleBoundEvent = (event: Event): void => {\n  // @ts-expect-error-error\n  let target = event?.target.closest(EVENT_SELECTOR)\n  let propagationStopped = false\n\n  const wrappedEvent = new Proxy(event, {\n    get (target, prop) {\n      if (prop === 'stopPropagation') {\n        return () => {\n          event.stopPropagation()\n          propagationStopped = true\n        }\n      } else {\n        // @ts-expect-error-error\n        const value = target[prop]\n        return typeof value === 'function' ? value.bind(target) : value\n      }\n    }\n  })\n  // eslint-disable-next-line no-unmodified-loop-condition\n  while (!propagationStopped && target != null) {\n    const eventBindings = elementToHandlers.get(target) as XinEventBindings\n    // eslint-disable-next-line\n    const handlers = eventBindings[event.type] || [] as XinEventHandler[]\n    for (const handler of handlers) {\n      if (typeof handler === 'function') {\n        // eslint-disable-next-line\n        handler(wrappedEvent)\n      } else {\n        const func = xin[handler]\n        if (typeof func === 'function') {\n          func(wrappedEvent)\n        } else {\n          throw new Error(`no event handler found at path ${handler}`)\n        }\n      }\n      if (propagationStopped) {\n        continue\n      }\n    }\n    target = target.parentElement != null ? target.parentElement.closest(EVENT_SELECTOR) : null\n  }\n}\n\nexport const on = (element: HTMLElement, eventType: string, eventHandler: XinEventHandler): void => {\n  let eventBindings = elementToHandlers.get(element)\n  element.classList.add(EVENT_CLASS)\n  if (eventBindings == null) {\n    eventBindings = {}\n    elementToHandlers.set(element, eventBindings)\n  }\n  // eslint-disable-next-line\n  if (!eventBindings[eventType]) {\n    eventBindings[eventType] = []\n  }\n  if (!eventBindings[eventType].includes(eventHandler)) {\n    eventBindings[eventType].push(eventHandler)\n  }\n  if (!handledEventTypes.has(eventType)) {\n    handledEventTypes.add(eventType)\n    document.body.addEventListener(eventType, handleBoundEvent, true)\n  }\n}\n","import { XinProxyObject, XinProxy, XinProxyTarget, XinObject, XinArray, XinValue, PathTestFunction, ObserverCallbackFunction } from './xin-types'\nimport { settings } from './settings'\nimport { Listener, touch, observe as _observe, unobserve, updates, observerShouldBeRemoved } from './path-listener'\nimport { getByPath, setByPath } from './by-path'\nimport { XIN_VALUE, XIN_PATH } from './metadata'\n\ninterface ProxyConstructor {\n  revocable: <T extends object, P extends object>(\n    target: T,\n    handler: ProxyHandler<P>,\n  ) => { proxy: P, revoke: () => void }\n  new <T extends object>(target: T, handler: ProxyHandler<T>): T\n  new <T extends object, P extends object>(target: T, handler: ProxyHandler<P>): P\n}\ndeclare let Proxy: ProxyConstructor\n\n// list of Array functions that change the array\nconst ARRAY_MUTATIONS = ['sort', 'splice', 'copyWithin', 'fill', 'pop', 'push', 'reverse', 'shift', 'unshift']\n\nconst registry: XinObject = {}\nconst debugPaths = true\nconst validPath = /^\\.?([^.[\\](),])+(\\.[^.[\\](),]+|\\[\\d+\\]|\\[[^=[\\](),]*=[^[\\]()]+\\])*$/\n\nconst isValidPath = (path: string): boolean => validPath.test(path)\n\nconst extendPath = (path = '', prop = ''): string => {\n  if (path === '') {\n    return prop\n  } else {\n    if (prop.match(/^\\d+$/) !== null || prop.includes('=')) {\n      return `${path}[${prop}]`\n    } else {\n      return `${path}.${prop}`\n    }\n  }\n}\n\nconst regHandler = (path = ''): ProxyHandler<XinObject> => ({\n  // TODO figure out how to correctly return array[Symbol.iterator] so that for(const foo of xin.foos) works\n  // as you'd expect\n  get (target: XinObject | XinArray, _prop: string | symbol): XinValue {\n    if (_prop === XIN_PATH) {\n      return path\n    } else if (_prop === XIN_VALUE) {\n      return target\n    }\n    if (typeof _prop === 'symbol') {\n      // @ts-expect-error\n      return target[_prop]\n    }\n    let prop = _prop\n    const compoundProp = prop.match(/^([^.[]+)\\.(.+)$/) ?? // basePath.subPath (omit '.')\n                        prop.match(/^([^\\]]+)(\\[.+)/) ?? // basePath[subPath\n                        prop.match(/^(\\[[^\\]]+\\])\\.(.+)$/) ?? // [basePath].subPath (omit '.')\n                        prop.match(/^(\\[[^\\]]+\\])\\[(.+)$/) // [basePath][subPath\n    if (compoundProp !== null) {\n      const [, basePath, subPath] = compoundProp\n      const currentPath = extendPath(path, basePath)\n      const value = getByPath(target, basePath)\n      return value !== null && typeof value === 'object' ? new Proxy<XinObject, XinProxyObject>(value, regHandler(currentPath))[subPath] : value\n    }\n    if (prop.startsWith('[') && prop.endsWith(']')) {\n      prop = prop.substring(1, prop.length - 1)\n    }\n    if (\n      (!Array.isArray(target) && target[prop] !== undefined) ||\n      (Array.isArray(target) && prop.includes('='))\n    ) {\n      let value: XinValue\n      if (prop.includes('=')) {\n        const [idPath, needle] = prop.split('=')\n        value = (target as XinObject[]).find(\n          (candidate: XinObject) => `${getByPath(candidate, idPath) as string}` === needle\n        )\n      } else {\n        value = (target as XinArray)[prop as unknown as number]\n      }\n      if (value !== null && typeof value === 'object') {\n        const currentPath = extendPath(path, prop)\n        return new Proxy<XinObject, XinProxyObject>(value, regHandler(currentPath)) as XinValue\n      } else if (typeof value === 'function') {\n        return value.bind(target)\n      } else {\n        return value\n      }\n    } else if (Array.isArray(target)) {\n      const value = target[prop as unknown as number]\n      return typeof value === 'function'\n        ? (...items: any[]) => {\n            // @ts-expect-error\n            const result = (Array.prototype[prop]).apply(target, items)\n            if (ARRAY_MUTATIONS.includes(prop)) {\n              touch(path)\n            }\n            return result\n          }\n        : typeof value === 'object'\n          ? new Proxy<XinProxyTarget, XinObject>(value, regHandler(extendPath(path, prop)))\n          : value\n    } else {\n      return target[prop]\n    }\n  },\n  set (_, prop: string, value: any) {\n    // eslint-disable-next-line\n    if (value != null && value[XIN_PATH]) {\n      value = value[XIN_VALUE]\n    }\n    const fullPath = extendPath(path, prop)\n    if (debugPaths && !isValidPath(fullPath)) {\n      throw new Error(`setting invalid path ${fullPath}`)\n    }\n    let existing = xin[fullPath] as XinProxy\n    // eslint-disable-next-line\n    if (existing != null && existing[XIN_VALUE] != null) {\n      existing = existing[XIN_VALUE] as XinProxy\n    }\n    if (existing !== value && setByPath(registry, fullPath, value)) {\n      touch(fullPath)\n    }\n    return true\n  }\n})\n\nconst observe = (test: string | RegExp | PathTestFunction, callback: string | ObserverCallbackFunction): Listener => {\n  const func = typeof callback === 'function' ? callback : (xin)[callback]\n\n  if (typeof func !== 'function') {\n    throw new Error(`observe expects a function or path to a function, ${callback as string} is neither`)\n  }\n\n  return _observe(test, func as ObserverCallbackFunction)\n}\n\nconst xin = new Proxy<XinObject, XinProxyObject>(registry, regHandler())\n\nexport {\n  xin,\n  updates,\n  touch,\n  observe,\n  unobserve,\n  observerShouldBeRemoved,\n  isValidPath,\n  settings\n}\n","export const settings = {\n  debug: false,\n  perf: false\n}\n","import { PathTestFunction, ObserverCallbackFunction } from './xin-types'\nimport { xinPath } from './metadata'\nimport { settings } from './settings'\n\nexport const observerShouldBeRemoved = Symbol('observer should be removed')\nexport const listeners: Listener[] = [] // { path_string_or_test, callback }\nconst touchedPaths: string[] = []\nlet updateTriggered: number | boolean = false\nlet updatePromise: Promise<undefined>\nlet resolveUpdate: Function\n\nexport class Listener {\n  description: string\n  test: PathTestFunction\n  callback: ObserverCallbackFunction\n\n  constructor (test: string | RegExp | PathTestFunction, callback: string | ObserverCallbackFunction) {\n    const callbackDescription = typeof callback === 'string' ? `\"${callback}\"` : `function ${callback.name}`\n    let testDescription\n    if (typeof test === 'string') {\n      this.test = t => typeof t === 'string' && t !== '' && (test.startsWith(t) || t.startsWith(test))\n      testDescription = `test = \"${test}\"`\n    } else if (test instanceof RegExp) {\n      this.test = test.test.bind(test)\n      testDescription = `test = \"${test.toString()}\"`\n    } else if (test instanceof Function) {\n      this.test = test\n      testDescription = `test = function ${test.name}`\n    } else {\n      throw new Error(\n        'expect listener test to be a string, RegExp, or test function'\n      )\n    }\n    this.description = `${testDescription}, ${callbackDescription}`\n    if (typeof callback === 'function') {\n      this.callback = callback\n    } else {\n      throw new Error('expect callback to be a path or function')\n    }\n    listeners.push(this)\n  }\n}\n\nexport const updates = async (): Promise<void> => {\n  if (updatePromise === undefined) {\n    return\n  }\n  await updatePromise\n}\n\nconst update = (): void => {\n  if (settings.perf) {\n    console.time('xin async update')\n  }\n  const paths = [...touchedPaths]\n\n  for (const path of paths) {\n    listeners\n      .filter(listener => {\n        let heard\n        try {\n          heard = listener.test(path)\n        } catch (e) {\n          throw new Error(`Listener ${listener.description} threw \"${e as string}\" at \"${path}\"`)\n        }\n        if (heard === observerShouldBeRemoved) {\n          unobserve(listener)\n          return false\n        }\n        return heard as boolean\n      })\n      .forEach(listener => {\n        let outcome\n        try {\n          outcome = listener.callback(path)\n        } catch (e) {\n          console.error(`Listener ${listener.description} threw \"${e as string}\" handling \"${path}\"`)\n        }\n        if (outcome === observerShouldBeRemoved) {\n          unobserve(listener)\n        }\n      })\n  }\n\n  touchedPaths.splice(0)\n  updateTriggered = false\n  if (typeof resolveUpdate === 'function') {\n    resolveUpdate()\n  }\n  if (settings.perf) {\n    console.timeEnd('xin async update')\n  }\n}\n\nexport const touch = (touchable: any): void => {\n  const path = typeof touchable === 'string' ? touchable : xinPath(touchable)\n\n  if (path === undefined) {\n    console.error('touch was called on an invalid target', touchable)\n    throw new Error('touch was called on an invalid target')\n  }\n\n  if (updateTriggered === false) {\n    updatePromise = new Promise(resolve => {\n      resolveUpdate = resolve\n    })\n    updateTriggered = setTimeout(update)\n  }\n\n  if (touchedPaths.find(touchedPath => path.startsWith(touchedPath)) == null) {\n    touchedPaths.push(path)\n  }\n}\n\nexport const observe = (test: string | RegExp | PathTestFunction, callback: ObserverCallbackFunction): Listener => {\n  return new Listener(test, callback)\n}\n\nexport const unobserve = (listener: Listener): void => {\n  const index = listeners.indexOf(listener)\n  if (index > -1) {\n    listeners.splice(index, 1)\n  } else {\n    throw new Error('unobserve failed, listener not found')\n  }\n}\n","import { XinObject, XinProxy, XinBinding, XinEventHandler } from './xin-types'\nimport { deepClone } from './deep-clone'\n\nexport const BOUND_CLASS = '-xin-data'\nexport const BOUND_SELECTOR = `.${BOUND_CLASS}`\nexport const EVENT_CLASS = '-xin-event'\nexport const EVENT_SELECTOR = `.${EVENT_CLASS}`\n\nexport const XIN_PATH = Symbol('xin-path')\nexport const XIN_VALUE = Symbol('xin-value')\n\nexport const xinPath = (x: any): string | undefined => {\n  return x[XIN_PATH]\n}\n\nexport function xinValue<T extends {}> (x: T): T {\n  // eslint-disable-next-line\n  return (typeof x === 'object' && x !== null ? (x as unknown as XinProxy)[XIN_VALUE] || x : x) as T\n}\n\nexport interface DataBinding<T = HTMLElement> {\n  path: string\n  binding: XinBinding<T>\n  options?: XinObject\n}\n\nexport type DataBindings = DataBinding[]\n\nexport interface XinEventBindings {\n  [eventType: string]: XinEventHandler[]\n}\n\nexport const elementToHandlers: WeakMap<Element, XinEventBindings> = new WeakMap()\nexport const elementToBindings: WeakMap<Element, DataBindings> = new WeakMap()\n\ninterface ElementMetadata {\n  eventBindings?: XinEventBindings\n  dataBindings?: DataBindings\n}\n\nexport const getElementBindings = (element: Element): ElementMetadata => {\n  return {\n    eventBindings: elementToHandlers.get(element),\n    dataBindings: elementToBindings.get(element)\n  }\n}\n\nexport const cloneWithBindings = (element: Node): Node => {\n  const cloned = element.cloneNode()\n  if (cloned instanceof HTMLElement) {\n    const dataBindings = elementToBindings.get(element as HTMLElement)\n    const eventHandlers = elementToHandlers.get(element as HTMLElement)\n    if (dataBindings != null) {\n      // @ts-expect-error-error\n      elementToBindings.set(cloned, deepClone(dataBindings))\n    }\n    if (eventHandlers != null) {\n      // @ts-expect-error-error\n      elementToHandlers.set(cloned, deepClone(eventHandlers))\n    }\n  }\n  for (const node of element instanceof HTMLTemplateElement ? element.content.childNodes : element.childNodes) {\n    if (node instanceof HTMLElement || node instanceof DocumentFragment) {\n      cloned.appendChild(cloneWithBindings(node))\n    } else {\n      cloned.appendChild(node.cloneNode())\n    }\n  }\n  return cloned\n}\n\nexport const elementToItem: WeakMap<HTMLElement, XinObject> = new WeakMap()\n\nexport const getListItem = (element: HTMLElement): any => {\n  const html = document.body.parentElement\n  while (element.parentElement != null && element.parentElement !== html) {\n    const item = elementToItem.get(element)\n    if (item != null) {\n      return item\n    }\n    element = element.parentElement\n  }\n  return false\n}\n","import { XinObject, XinArray } from './xin-types'\n\ntype Scalar = string | boolean | number | Function\ntype Cloneable = Scalar | XinObject | XinArray\n\nexport function deepClone (obj: Cloneable): Cloneable | Cloneable[] {\n  if (obj == null || typeof obj !== 'object') {\n    return obj\n  }\n  if (Array.isArray(obj)) {\n    // @ts-expect-error-error\n    return obj.map(deepClone)\n  }\n  const clone: XinObject = {}\n  for (const key in obj) {\n    const val = obj[key]\n    if (obj != null && typeof obj === 'object') {\n      clone[key] = deepClone(val) as XinObject\n    } else {\n      clone[key] = val\n    }\n  }\n  return clone\n}\n","// unique tokens passed to set by path to delete or create properties\n\nimport { XinObject, XinArray, XinScalar } from './xin-types'\nimport { makeError } from './make-error'\n\nconst now36 = (): string => new Date(parseInt('1000000000', 36) + Date.now()).valueOf().toString(36).slice(1)\nlet _seq = 0\nconst seq = (): string => (parseInt('10000', 36) + (++_seq)).toString(36).slice(-5)\nconst id = (): string => now36() + seq()\n\nconst _delete_ = {}\nconst _newObject_ = {}\n\ntype Part = string | string[]\ntype PartArray = Part[]\n\nfunction pathParts (path: string | PartArray): PartArray {\n  if (path === '') {\n    return []\n  }\n\n  if (Array.isArray(path)) {\n    return path\n  } else {\n    const parts: PartArray = []\n    while (path.length > 0) {\n      let index = path.search(/\\[[^\\]]+\\]/)\n      if (index === -1) {\n        parts.push(path.split('.'))\n        break\n      } else {\n        const part = path.slice(0, index)\n        path = path.slice(index)\n        if (part !== '') {\n          parts.push(part.split('.'))\n        }\n        index = path.indexOf(']') + 1\n        parts.push(path.slice(1, index - 1))\n        // handle paths dereferencing array element like foo[0].id\n        if (path.slice(index, index + 1) === '.') {\n          index += 1\n        }\n        path = path.slice(index)\n      }\n    }\n    return parts\n  }\n}\n\nconst idPathMaps = new WeakMap()\n\ninterface IdPathMap {\n  [key: string]: number\n}\n\nfunction buildIdPathValueMap (array: XinObject[], idPath: string): IdPathMap {\n  if (idPathMaps.get(array) === undefined) {\n    idPathMaps.set(array, {})\n  }\n  if (idPathMaps.get(array)[idPath] === undefined) {\n    idPathMaps.get(array)[idPath] = {}\n  }\n  const map = idPathMaps.get(array)[idPath]\n\n  if (idPath === '_auto_') {\n    array.forEach((item, idx) => {\n      if (item._auto_ === undefined) item._auto_ = id()\n      map[item._auto_ as string + ''] = idx\n    })\n  } else {\n    array.forEach((item, idx) => {\n      map[getByPath(item, idPath) as string + ''] = idx\n    })\n  }\n  return map\n}\n\nfunction getIdPathMap (array: XinObject[], idPath: string): IdPathMap {\n  if (idPathMaps.get(array) === undefined || idPathMaps.get(array)[idPath] === undefined) {\n    return buildIdPathValueMap(array, idPath)\n  } else {\n    return idPathMaps.get(array)[idPath]\n  }\n}\n\nfunction keyToIndex (array: XinObject[], idPath: string, idValue: any): number {\n  idValue = idValue as string + ''\n  let idx = getIdPathMap(array, idPath)[idValue]\n  if (idx === undefined || getByPath(array[idx], idPath) as string + '' !== idValue) {\n    idx = buildIdPathValueMap(array, idPath)[idValue]\n  }\n  return idx\n}\n\nfunction byKey (obj: XinObject, key: string, valueToInsert?: any): any {\n  if (obj[key] === undefined && valueToInsert !== undefined) {\n    obj[key] = valueToInsert\n  }\n  return obj[key]\n}\n\nfunction byIdPath (array: any[], idPath: string, idValue: string, valueToInsert?: any): any {\n  let idx = idPath !== '' ? keyToIndex(array, idPath, idValue) : idValue\n  if (valueToInsert === _delete_) {\n    array.splice(idx as number, 1)\n    idPathMaps.delete(array)\n    return Symbol('deleted')\n  } else if (valueToInsert === _newObject_) {\n    if (idPath === '' && array[idx as number] === undefined) {\n      array[idx as number] = {}\n    }\n  } else if (valueToInsert !== undefined) {\n    if (idx !== undefined) {\n      array[idx as number] = valueToInsert\n    } else if (idPath !== '' && getByPath(valueToInsert, idPath) as string + '' === idValue + '') {\n      array.push(valueToInsert)\n      idx = array.length - 1\n    } else {\n      throw new Error(`byIdPath insert failed at [${idPath}=${idValue}]`)\n    }\n  }\n  return array[idx as number]\n}\n\nfunction expectArray (obj: any): void {\n  if (!Array.isArray(obj)) {\n    throw makeError('setByPath failed: expected array, found', obj)\n  }\n}\n\nfunction expectObject (obj: any): void {\n  if ((obj == null) || !(obj instanceof Object)) {\n    throw makeError('setByPath failed: expected Object, found', obj)\n  }\n}\n\nfunction getByPath (obj: XinObject | XinArray, path: string): any {\n  const parts = pathParts(path)\n  let found: XinObject | XinArray | XinScalar = obj\n  let i, iMax, j, jMax\n  for (i = 0, iMax = parts.length; found !== undefined && i < iMax; i++) {\n    const part = parts[i]\n    if (Array.isArray(part)) {\n      for (j = 0, jMax = part.length; found !== undefined && j < jMax; j++) {\n        const key = part[j]\n        found = (found as XinObject)[key]\n      }\n    } else {\n      if ((found as XinArray).length === 0) {\n        // @ts-expect-error-error\n        found = (found as XinArray)[part.slice(1)]\n        if (part[0] !== '=') {\n          return undefined\n        }\n      } else if (part.includes('=')) {\n        const [idPath, ...tail] = part.split('=')\n        found = byIdPath(found as any[], idPath, tail.join('='))\n      } else {\n        j = parseInt(part, 10)\n        found = (found as XinArray)[j]\n      }\n    }\n  }\n  return found\n}\n\nfunction setByPath (orig: XinObject | XinArray, path: string, val: any): boolean {\n  let obj: XinObject | XinArray | XinScalar = orig\n  const parts = pathParts(path)\n\n  while ((obj != null) && (parts.length > 0)) {\n    const part = parts.shift()\n    if (typeof part === 'string') {\n      const equalsOffset = part.indexOf('=')\n      if (equalsOffset > -1) {\n        if (equalsOffset === 0) {\n          expectObject(obj)\n        } else {\n          expectArray(obj)\n        }\n        const idPath = part.slice(0, equalsOffset)\n        const idValue = part.slice(equalsOffset + 1)\n        obj = byIdPath(obj as any[], idPath, idValue, (parts.length > 0) ? _newObject_ : val)\n        if (parts.length === 0) {\n          return true\n        }\n      } else {\n        expectArray(obj)\n        const idx = parseInt(part, 10)\n        if (parts.length > 0) {\n          obj = (obj as XinArray)[idx]\n        } else {\n          if (val !== _delete_) {\n            if ((obj as XinArray)[idx] === val) {\n              return false\n            }\n            (obj as XinArray)[idx] = val\n          } else {\n            (obj as XinArray).splice(idx, 1)\n          }\n          return true\n        }\n      }\n    } else if (Array.isArray(part) && (part.length > 0)) {\n      expectObject(obj)\n      while (part.length > 0) {\n        const key = part.shift() as string\n        if ((part.length > 0) || (parts.length > 0)) {\n          // if we're at the end of part.length then we need to insert an array\n          obj = byKey((obj as XinObject), key, (part.length > 0) ? {} : [])\n        } else {\n          if (val !== _delete_) {\n            if ((obj as XinObject)[key] === val) {\n              return false\n            }\n            (obj as XinObject)[key] = val\n          } else {\n            if (!Object.prototype.hasOwnProperty.call(obj, key)) {\n              return false\n            }\n            // eslint-disable-next-line\n            delete (obj as XinObject)[key]\n          }\n          return true\n        }\n      }\n    } else {\n      throw new Error(`setByPath failed, bad path ${path}`)\n    }\n  }\n\n  // eslint-disable-next-line\n  throw new Error(`setByPath(${orig}, ${path}, ${val}) failed`)\n}\n\nfunction deleteByPath (orig: XinObject, path: string): void {\n  if (getByPath(orig, path) !== null) {\n    setByPath(orig, path, _delete_)\n  }\n}\n\nexport { getByPath, setByPath, deleteByPath, pathParts }\n","const stringify = (x: any): string => {\n  try {\n    return JSON.stringify(x)\n  } catch (_) {\n    return '{has circular references}'\n  }\n}\n\nexport const makeError = (...messages: any[]): Error => new Error(messages.map(stringify).join(' '))\n","import { XinObject, XinBinding, ValueElement } from './xin-types'\nimport { getListBinding } from './list-binding'\nimport { getValue, setValue } from './dom'\n\nexport const bindings: { [key: string | symbol]: XinBinding } = {\n  value: {\n    toDOM (element: HTMLElement, value: any) {\n      setValue(element, value)\n    },\n\n    fromDOM (element: HTMLElement) {\n      return getValue(element as ValueElement)\n    }\n  },\n\n  text: {\n    toDOM (element: HTMLElement, value: any) {\n      element.textContent = value\n    }\n  },\n\n  enabled: {\n    toDOM (element: HTMLElement, value: any) {\n      // eslint-disable-next-line\n      (element as HTMLInputElement).disabled = !value\n    }\n  },\n\n  disabled: {\n    toDOM (element: HTMLElement, value: any) {\n      (element as HTMLInputElement).disabled = Boolean(value)\n    }\n  },\n\n  style: {\n    toDOM (element: HTMLElement, value: any) {\n      if (typeof value === 'object') {\n        for (const prop of Object.keys(value)) {\n          // @ts-expect-error\n          element.style[prop] = value[prop]\n        }\n      } else if (typeof value === 'string') {\n        element.setAttribute('style', value)\n      } else {\n        throw new Error('style binding expects either a string or object')\n      }\n    }\n  },\n\n  list: {\n    toDOM (element: HTMLElement, value: any[], options?: XinObject) {\n      const listBinding = getListBinding(element, options)\n      listBinding.update(value)\n    }\n  }\n}\n","import { settings } from './settings'\nimport { resizeObserver } from './dom'\nimport { throttle } from './throttle'\nimport { xin } from './xin'\nimport { cloneWithBindings, elementToItem, elementToBindings, BOUND_SELECTOR, DataBinding, xinValue, xinPath } from './metadata'\nimport { XinObject } from './xin-types'\n\nconst listBindingRef = Symbol('list-binding')\nconst SLICE_INTERVAL_MS = 16 // 60fps\n\ndeclare global {\n  interface HTMLElement {\n    [listBindingRef]?: ListBinding\n  }\n}\n\ninterface ListBindingOptions {\n  idPath?: string\n  initInstance?: (element: HTMLElement, value: any) => void\n  updateInstance?: (element: HTMLElement, value: any) => void\n  virtual?: { height: number, width?: number }\n  hiddenProp?: symbol | string\n  visibleProp?: symbol | string\n}\n\ninterface VirtualListSlice {\n  items: any[]\n  firstItem: number\n  lastItem: number\n  topBuffer: number\n  bottomBuffer: number\n}\n\nfunction updateRelativeBindings (element: HTMLElement, path: string): void {\n  const boundElements = [...element.querySelectorAll(BOUND_SELECTOR)]\n  if (element.matches(BOUND_SELECTOR)) {\n    boundElements.unshift(element)\n  }\n  for (const boundElement of boundElements) {\n    const bindings = elementToBindings.get(boundElement) as DataBinding[]\n    for (const binding of bindings) {\n      if (binding.path.startsWith('^')) {\n        binding.path = `${path}${binding.path.substring(1)}`\n      }\n      if (binding.binding.toDOM != null) {\n        binding.binding.toDOM(boundElement as HTMLElement, xin[binding.path])\n      }\n    }\n  }\n}\n\nclass ListBinding {\n  boundElement: HTMLElement\n  listTop: HTMLElement\n  listBottom: HTMLElement\n  template: HTMLElement\n  options: ListBindingOptions\n  itemToElement: WeakMap<XinObject, HTMLElement>\n  private _array: any[] = []\n  private readonly _update?: VoidFunction\n  private _previousSlice?: VirtualListSlice\n\n  constructor (boundElement: HTMLElement, options: ListBindingOptions = {}) {\n    this.boundElement = boundElement\n    this.itemToElement = new WeakMap()\n    if (boundElement.children.length !== 1) {\n      throw new Error('ListBinding expects an element with exactly one child element')\n    }\n    if (boundElement.children[0] instanceof HTMLTemplateElement) {\n      const template = boundElement.children[0]\n      if (template.content.children.length !== 1) {\n        throw new Error('ListBinding expects a template with exactly one child element')\n      }\n      this.template = cloneWithBindings(template.content.children[0]) as HTMLElement\n    } else {\n      this.template = boundElement.children[0] as HTMLElement\n      this.template.remove()\n    }\n    this.listTop = document.createElement('div')\n    this.listBottom = document.createElement('div')\n    this.boundElement.append(this.listTop)\n    this.boundElement.append(this.listBottom)\n    this.options = options\n    if (options.virtual != null) {\n      resizeObserver.observe(this.boundElement)\n      this._update = throttle(() => {\n        this.update(this._array, true)\n      }, SLICE_INTERVAL_MS)\n      this.boundElement.addEventListener('scroll', this._update)\n      this.boundElement.addEventListener('resize', this._update)\n    }\n  }\n\n  private visibleSlice (): VirtualListSlice {\n    const { virtual, hiddenProp, visibleProp } = this.options\n    let visibleArray = this._array\n    if (hiddenProp !== undefined) {\n      visibleArray = visibleArray.filter(item => item[hiddenProp] !== true)\n    }\n    if (visibleProp !== undefined) {\n      visibleArray = visibleArray.filter(item => item[visibleProp] === true)\n    }\n    let firstItem = 0\n    let lastItem = visibleArray.length - 1\n    let topBuffer = 0\n    let bottomBuffer = 0\n\n    if (virtual != null) {\n      const width = this.boundElement.offsetWidth\n      const height = this.boundElement.offsetHeight\n\n      const visibleColumns = virtual.width != null ? Math.max(1, Math.floor(width / virtual.width)) : 1\n      const visibleRows = Math.ceil(height / virtual.height) + 1\n      const totalRows = Math.ceil(visibleArray.length / visibleColumns)\n      const visibleItems = visibleColumns * visibleRows\n      let topRow = Math.floor(this.boundElement.scrollTop / virtual.height)\n      if (topRow > totalRows - visibleRows + 1) {\n        topRow = Math.max(0, totalRows - visibleRows + 1)\n      }\n      firstItem = topRow * visibleColumns\n      lastItem = firstItem + visibleItems - 1\n\n      topBuffer = topRow * virtual.height\n      bottomBuffer = Math.max(totalRows * virtual.height - height - topBuffer, 0)\n    }\n\n    return {\n      items: visibleArray,\n      firstItem,\n      lastItem,\n      topBuffer,\n      bottomBuffer\n    }\n  }\n\n  update (array?: any[], isSlice?: boolean): void {\n    if (array == null) {\n      array = []\n    }\n    this._array = array\n\n    const { initInstance, updateInstance, hiddenProp, visibleProp } = this.options\n    // @ts-expect-error\n    const arrayPath: string = xinPath(array)\n\n    const slice = this.visibleSlice()\n    this.boundElement.classList.toggle('-xin-empty-list', slice.items.length === 0)\n    const previousSlice = this._previousSlice\n    const { firstItem, lastItem, topBuffer, bottomBuffer } = slice\n    if (\n      hiddenProp === undefined &&\n      visibleProp === undefined &&\n      isSlice === true &&\n      previousSlice != null &&\n      firstItem === previousSlice.firstItem &&\n      lastItem === previousSlice.lastItem\n    ) {\n      return\n    }\n    this._previousSlice = slice\n\n    let removed = 0\n    let moved = 0\n    let created = 0\n\n    for (const element of [...this.boundElement.children]) {\n      if (element === this.listTop || element === this.listBottom) {\n        continue\n      }\n      const proxy = elementToItem.get(element as HTMLElement)\n      if (proxy == null) {\n        element.remove()\n      } else {\n        const idx = slice.items.indexOf(proxy)\n        if (idx < firstItem || idx > lastItem) {\n          element.remove()\n          this.itemToElement.delete(proxy)\n          elementToItem.delete(element as HTMLElement)\n          removed++\n        }\n      }\n    }\n\n    this.listTop.style.height = String(topBuffer) + 'px'\n    this.listBottom.style.height = String(bottomBuffer) + 'px'\n\n    // build a complete new set of elements in the right order\n    const elements: HTMLElement[] = []\n    const { idPath } = this.options\n    for (let i = firstItem; i <= lastItem; i++) {\n      const item = slice.items[i]\n      if (item === undefined) {\n        continue\n      }\n      let element = this.itemToElement.get(xinValue(item))\n      if (element == null) {\n        created++\n        element = cloneWithBindings(this.template) as HTMLElement\n        if (typeof item === 'object') {\n          this.itemToElement.set(xinValue(item), element)\n          elementToItem.set(element, xinValue(item))\n        }\n        this.boundElement.insertBefore(element, this.listBottom)\n        if (idPath != null) {\n          const idValue = item[idPath] as string\n          const itemPath = `${arrayPath}[${idPath}=${idValue}]`\n          updateRelativeBindings(element, itemPath)\n        } else {\n          const itemPath = `${arrayPath}[${i}]`\n          updateRelativeBindings(element, itemPath)\n        }\n        if (initInstance != null) {\n          // eslint-disable-next-line\n          initInstance(element, item)\n        }\n      }\n      if (updateInstance != null) {\n        // eslint-disable-next-line\n        updateInstance(element, item)\n      }\n      elements.push(element)\n    }\n\n    // make sure all the elements are in the DOM and in the correct location\n    let insertionPoint: HTMLElement | null = null\n    for (const element of elements) {\n      if (element.previousElementSibling !== insertionPoint) {\n        moved++\n        if (insertionPoint?.nextElementSibling != null) {\n          this.boundElement.insertBefore(element, insertionPoint.nextElementSibling)\n        } else {\n          this.boundElement.insertBefore(element, this.listBottom)\n        }\n      }\n      insertionPoint = element\n    }\n\n    if (settings.perf) {\n      console.log(arrayPath, 'updated', { removed, created, moved })\n    }\n  }\n}\n\nexport const getListBinding = (boundElement: HTMLElement, options?: ListBindingOptions): ListBinding => {\n  let listBinding = boundElement[listBindingRef]\n  if (listBinding == null) {\n    listBinding = new ListBinding(boundElement, options)\n    boundElement[listBindingRef] = listBinding\n  }\n  return listBinding\n}\n","import { cloneWithBindings } from './metadata'\nimport { ContentType, ValueElement } from './xin-types'\n\nexport const dispatch = (target: Element, type: string): void => {\n  const event = new Event(type)\n  target.dispatchEvent(event)\n}\n\nconst valueType = (element: HTMLElement): string => {\n  if (element instanceof HTMLInputElement) {\n    return element.type\n  } else if (element instanceof HTMLSelectElement && element.hasAttribute('multiple')) {\n    return 'multi-select'\n  } else {\n    return 'other'\n  }\n}\n\nexport const setValue = (element: HTMLElement, newValue: any): void => {\n  switch (valueType(element)) {\n    case 'radio':\n      // @ts-expect-error\n      element.checked = element.value === newValue\n      break\n    case 'checkbox':\n      // @ts-expect-error\n      element.checked = newValue\n      break\n    case 'date':\n      // @ts-expect-error\n      element.valueAsDate = new Date(newValue)\n      break\n    case 'multi-select':\n      for (const option of [...element.querySelectorAll('option')] as HTMLOptionElement[]) {\n        option.selected = newValue[option.value]\n      }\n      break\n    default:\n      // @ts-expect-error\n      element.value = newValue\n  }\n}\n\ninterface PickMap {\n  [key: string]: boolean\n}\nexport const getValue = (element: ValueElement): any => {\n  switch (valueType(element)) {\n    case 'radio':\n    {\n      const radio = element.parentElement?.querySelector(`[name=\"${element.name}\"]:checked`) as HTMLInputElement\n      return radio != null ? radio.value : null\n    }\n    case 'checkbox':\n      // @ts-expect-error\n      return element.checked\n    case 'date':\n      // @ts-expect-error\n      return element.valueAsDate.toISOString()\n    case 'multi-select':\n      return [...element.querySelectorAll('option')]\n        .reduce((map: PickMap, option: HTMLOptionElement): PickMap => {\n          map[option.value] = option.selected\n          return map\n        }, {})\n    default:\n      return element.value\n  }\n}\n\n/* global ResizeObserver */\nconst { ResizeObserver } = globalThis\nexport const resizeObserver = ResizeObserver != null\n  ? new ResizeObserver(entries => {\n    for (const entry of entries) {\n      const element = entry.target\n      dispatch(element, 'resize')\n    }\n  })\n  : {\n      observe () {},\n      unobserve () {}\n    }\n\nfunction convertToXinSlot (slot: HTMLSlotElement): void {\n  const xinSlot = document.createElement('xin-slot')\n  if (slot.name !== '') {\n    xinSlot.setAttribute('name', slot.name)\n  }\n  slot.replaceWith(xinSlot)\n}\n\nexport const appendContentToElement = (elt: Element | ShadowRoot | null | undefined, content: ContentType | null | undefined): boolean => {\n  let isSlotted = false\n  if (elt != null && content != null) {\n    if (typeof content === 'string') {\n      elt.textContent = content\n    } else if (Array.isArray(content)) {\n      content.forEach(node => {\n        elt.append(node instanceof Node ? cloneWithBindings(node) : node)\n        if (node instanceof Node && (node.querySelector('slot') != null)) {\n          isSlotted = true\n        }\n      })\n    } else if (content instanceof HTMLElement || content instanceof DocumentFragment) {\n      const slots = [...content.querySelectorAll('slot')]\n      if (slots.length > 0) {\n        isSlotted = true\n        slots.forEach(convertToXinSlot)\n      }\n      elt.append(cloneWithBindings(content))\n    } else {\n      throw new Error('expect text content or document node')\n    }\n  }\n  return isSlotted\n}\n","type VoidFunc = (...args: any[]) => void\n\nexport const debounce = (origFn: VoidFunc, minInterval = 250): VoidFunc => {\n  let debounceId: number\n  return (...args: any[]) => {\n    if (debounceId !== undefined) clearTimeout(debounceId)\n    debounceId = setTimeout(() => {\n      origFn(...args)\n    }, minInterval)\n  }\n}\n\nexport const throttle = (origFn: VoidFunc, minInterval = 250): VoidFunc => {\n  let debounceId: number\n  let previousCall = Date.now() - minInterval\n  let inFlight = false\n  return (...args: any[]) => {\n    clearTimeout(debounceId)\n    debounceId = setTimeout(async () => {\n      origFn(...args)\n      previousCall = Date.now()\n    }, minInterval)\n    if (!inFlight && Date.now() - previousCall >= minInterval) {\n      inFlight = true\n      try {\n        origFn(...args)\n        previousCall = Date.now()\n      } finally {\n        inFlight = false\n      }\n    }\n  }\n}\n","import { Color } from './color'\nimport { elements } from './elements'\nimport { camelToKabob } from './string-case'\nimport { XinStyleSheet, XinStyleRule, XinStyleMap } from './css-types'\n\nexport function StyleNode (styleSheet: XinStyleSheet): HTMLStyleElement {\n  return elements.style(css(styleSheet))\n}\n\nconst numericProps = [\n  'animation-iteration-count', 'flex', 'flex-base', 'flex-grow', 'flex-shrink', 'gap', 'opacity', 'order',\n  'tab-size', 'widows', 'z-index', 'zoom'\n]\nconst renderProp = (indentation: string, cssProp: string, value: string | number | undefined): string => {\n  if (value === undefined) {\n    return ''\n  } else if (typeof value === 'string' || numericProps.includes(cssProp)) {\n    return `${indentation}  ${cssProp}: ${value};`\n  } else {\n    return `${indentation}  ${cssProp}: ${value}px;`\n  }\n}\n\nconst renderStatement = (key: string, value: string | number | XinStyleRule | undefined, indentation = ''): string => {\n  const cssProp = camelToKabob(key)\n  if (typeof value === 'object') {\n    const renderedRule = Object.keys(value).map(innerKey => renderStatement(innerKey, value[innerKey], `${indentation}  `)).join('\\n')\n    return `${indentation}  ${key} {\\n${renderedRule}\\n${indentation}  }`\n  } else {\n    return renderProp(indentation, cssProp, value)\n  }\n}\n\nexport const css = (obj: XinStyleSheet | XinStyleMap, indentation = ''): string => {\n  const selectors = Object.keys(obj).map((selector) => {\n    const body = obj[selector]\n    if (typeof body === 'string') {\n      if (selector === '@import') {\n        return `@import url('${body}');`\n      }\n      throw new Error('top-level string value only allowed for `@import`')\n    }\n    const rule = Object.keys(body)\n      .map(prop => renderStatement(prop, body[prop]))\n      .join('\\n')\n    return `${indentation}${selector} {\\n${rule}\\n}`\n  })\n  return selectors.join('\\n\\n')\n}\n\nexport const initVars = (obj: { [key: string]: string | number }): XinStyleRule => {\n  const rule: XinStyleRule = {}\n  for (const key of Object.keys(obj)) {\n    const value = obj[key]\n    const kabobKey = camelToKabob(key)\n    rule[`--${kabobKey}`] = typeof value === 'number' && value !== 0 ? String(value) + 'px' : value\n  }\n  return rule\n}\n\nexport const darkMode = (obj: XinStyleRule): XinStyleRule => {\n  const rule: XinStyleRule = {}\n  for (const key of Object.keys(obj)) {\n    let value = obj[key]\n    if (typeof value === 'string' && value.match(/^(#|rgb[a]?\\(|hsl[a]?\\()/) != null) {\n      value = Color.fromCss(value).inverseLuminance.html\n      rule[`--${camelToKabob(key)}`] = value\n    }\n  }\n  return rule\n}\n\nexport const vars = new Proxy<{ [key: string]: string }>({}, {\n  get (target, prop: string) {\n    if (target[prop] == null) {\n      prop = prop.replace(/[A-Z]/g, x => `-${x.toLocaleLowerCase()}`)\n      let [,varName,, isNegative, scaleText, method] = prop.match(/^([^\\d_]*)((_)?(\\d+)(\\w*))?$/) as string[]\n      varName = `--${varName}`\n      if (scaleText != null) {\n        const scale = isNegative == null ? Number(scaleText) / 100 : -Number(scaleText) / 100\n        switch (method) {\n          case 'b': // brighten\n            {\n              const baseColor = getComputedStyle(document.body).getPropertyValue(varName)\n              target[prop] = scale > 0 ? Color.fromCss(baseColor).brighten(scale).rgba : Color.fromCss(baseColor).darken(-scale).rgba\n            }\n            break\n          case 's': // saturate\n            {\n              const baseColor = getComputedStyle(document.body).getPropertyValue(varName)\n              target[prop] = scale > 0 ? Color.fromCss(baseColor).saturate(scale).rgba : Color.fromCss(baseColor).desaturate(-scale).rgba\n            }\n            break\n          case 'h': // hue\n            {\n              const baseColor = getComputedStyle(document.body).getPropertyValue(varName)\n              target[prop] = Color.fromCss(baseColor).rotate(scale * 100).rgba\n              console.log(Color.fromCss(baseColor).hsla, Color.fromCss(baseColor).rotate(scale).hsla)\n            }\n            break\n          case 'o': // alpha\n            {\n              const baseColor = getComputedStyle(document.body).getPropertyValue(varName)\n              target[prop] = Color.fromCss(baseColor).opacity(scale).rgba\n            }\n            break\n          case '':\n            target[prop] = `calc(var(${varName}) * ${scale})`\n            break\n          default:\n            console.error(method)\n            throw new Error(`Unrecognized method ${method} for css variable ${varName}`)\n        }\n      } else {\n        target[prop] = `var(${varName})`\n      }\n    }\n    return target[prop]\n  }\n})\n","import { lerp, clamp } from './more-math'\n\nconst hex2 = (n: number): string => ('00' + Math.round(Number(n)).toString(16)).slice(-2)\n\nclass HslColor {\n  h: number\n  s: number\n  l: number\n\n  constructor (r: number, g: number, b: number) {\n    r /= 255\n    g /= 255\n    b /= 255\n    const l = Math.max(r, g, b)\n    const s = l - Math.min(r, g, b)\n    const h = s !== 0\n      ? l === r\n        ? (g - b) / s\n        : l === g\n          ? 2 + (b - r) / s\n          : 4 + (r - g) / s\n      : 0\n\n    this.h = 60 * h < 0 ? 60 * h + 360 : 60 * h\n    this.s = s !== 0 ? (l <= 0.5 ? s / (2 * l - s) : s / (2 - (2 * l - s))) : 0\n    this.l = (2 * l - s) / 2\n  }\n}\n\nconst span = globalThis.document !== undefined ? globalThis.document.createElement('span') : undefined\nexport class Color {\n  r: number\n  g: number\n  b: number\n  a: number\n\n  static fromCss (spec: string): Color {\n    let converted = spec\n    if (span instanceof HTMLSpanElement) {\n      span.style.color = spec\n      document.body.appendChild(span)\n      converted = getComputedStyle(span).color\n      span.remove()\n    }\n    const [r, g, b, a] = converted.match(/[\\d.]+/g) as string[]\n    return new Color(Number(r), Number(g), Number(b), a == null ? 1 : Number(a))\n  }\n\n  static fromHsl (h: number, s: number, l: number, a = 1): Color {\n    return Color.fromCss(`hsla(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%, ${a.toFixed(2)})`)\n  }\n\n  constructor (r: number, g: number, b: number, a = 1) {\n    this.r = clamp(0, r, 255)\n    this.g = clamp(0, g, 255)\n    this.b = clamp(0, b, 255)\n    this.a = a !== undefined ? clamp(0, a, 1) : a = 1\n  }\n\n  get inverse (): Color {\n    return new Color(255 - this.r, 255 - this.g, 255 - this.b, this.a)\n  }\n\n  get inverseLuminance (): Color {\n    const { h, s, l } = this._hsl\n    return Color.fromHsl(h, s, 1 - l, this.a)\n  }\n\n  get rgb (): string {\n    const { r, g, b } = this\n    return `rgb(${r.toFixed(0)},${g.toFixed(0)},${b.toFixed(0)})`\n  }\n\n  get rgba (): string {\n    const { r, g, b, a } = this\n    return `rgba(${r.toFixed(0)},${g.toFixed(0)},${b.toFixed(0)},${a.toFixed(2)})`\n  }\n\n  get RGBA (): number[] {\n    return [this.r / 255, this.g / 255, this.b / 255, this.a]\n  }\n\n  get ARGB (): number[] {\n    return [this.a, this.r / 255, this.g / 255, this.b / 255]\n  }\n\n  _hslCached?: HslColor\n\n  get _hsl (): HslColor {\n    if (this._hslCached == null) {\n      this._hslCached = new HslColor(this.r, this.g, this.b)\n    }\n    return this._hslCached\n  }\n\n  get hsl (): string {\n    const { h, s, l } = this._hsl\n    return `hsl(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%)`\n  }\n\n  get hsla (): string {\n    const { h, s, l } = this._hsl\n    return `hsla(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%, ${this.a.toFixed(2)})`\n  }\n\n  get mono (): Color {\n    const v = this.brightness * 255\n    return new Color(v, v, v)\n  }\n\n  get brightness (): number {\n    // http://www.itu.int/rec/R-REC-BT.601\n    return (0.299 * this.r + 0.587 * this.g + 0.114 * this.b) / 255\n  }\n\n  get html (): string {\n    return this.a === 1 ? '#' + hex2(this.r) + hex2(this.g) + hex2(this.b) : '#' + hex2(this.r) + hex2(this.g) + hex2(this.b) + hex2(Math.floor(255 * this.a))\n  }\n\n  brighten (amount: number): Color {\n    let { h, s, l } = this._hsl\n    l = clamp(0, l + amount * (1 - l), 1)\n    return Color.fromHsl(h, s, l, this.a)\n  }\n\n  darken (amount: number): Color {\n    let { h, s, l } = this._hsl\n    l = clamp(0, l * (1 - amount), 1)\n    return Color.fromHsl(h, s, l, this.a)\n  }\n\n  saturate (amount: number): Color {\n    let { h, s, l } = this._hsl\n    s = clamp(0, s + amount * (1 - s), 1)\n    return Color.fromHsl(h, s, l, this.a)\n  }\n\n  desaturate (amount: number): Color {\n    let { h, s, l } = this._hsl\n    s = clamp(0, s * (1 - amount), 1)\n    return Color.fromHsl(h, s, l, this.a)\n  }\n\n  rotate (amount: number): Color {\n    let { h, s, l } = this._hsl\n    h = (h + 360 + amount) % 360\n    return Color.fromHsl(h, s, l, this.a)\n  }\n\n  opacity (alpha: number): Color {\n    const { h, s, l } = this._hsl\n    return Color.fromHsl(h, s, l, alpha)\n  }\n\n  swatch (): void {\n    const { r, g, b, a } = this\n    console.log(`%c   %c ${this.html}, rgba(${r}, ${g}, ${b}, ${a}), ${this.hsla}`, `background-color: rgba(${r}, ${g}, ${b}, ${a})`, 'background-color: #eee')\n  }\n\n  blend (otherColor: Color, t: number): Color {\n    return new Color(\n      lerp(this.r, otherColor.r, t),\n      lerp(this.g, otherColor.g, t),\n      lerp(this.b, otherColor.b, t),\n      lerp(this.a, otherColor.a, t)\n    )\n  }\n}\n","/*\n# more-math\n\nSome simple functions egregiously missing from `Math`\n*/\n\nexport const RADIANS_TO_DEGREES = 180 / Math.PI\nexport const DEGREES_TO_RADIANS = Math.PI / 180\n\nexport function clamp (min: number, v: number, max: number): number {\n  return v < min ? min : (v > max ? max : v)\n}\n\nexport function lerp (a: number, b: number, t: number): number {\n  t = clamp(0, t, 1)\n  return t * (b - a) + a\n}\n\nexport const MoreMath = {\n  clamp,\n  lerp\n}\n","import { bind, on } from './bind'\nimport { bindings } from './bindings'\nimport { ElementPart, ElementProps, ElementCreator, SwissArmyElement } from './xin-types'\nimport { camelToKabob } from './string-case'\n\nexport interface ElementsProxy {\n  a: ElementCreator<HTMLAnchorElement>\n  abbr: ElementCreator\n  acronym: ElementCreator\n  address: ElementCreator\n  area: ElementCreator<HTMLAreaElement>\n  article: ElementCreator\n  aside: ElementCreator\n  audio: ElementCreator<HTMLAudioElement>\n  b: ElementCreator\n  base: ElementCreator<HTMLBaseElement>\n  basefont: ElementCreator\n  bdi: ElementCreator\n  bdo: ElementCreator\n  big: ElementCreator\n  blockquote: ElementCreator<HTMLQuoteElement>\n  body: ElementCreator<HTMLBodyElement>\n  br: ElementCreator<HTMLBRElement>\n  button: ElementCreator<HTMLButtonElement>\n  canvas: ElementCreator<HTMLCanvasElement>\n  caption: ElementCreator\n  center: ElementCreator\n  cite: ElementCreator\n  code: ElementCreator\n  col: ElementCreator<HTMLTableColElement>\n  colgroup: ElementCreator<HTMLTableColElement>\n  data: ElementCreator<HTMLDataElement>\n  datalist: ElementCreator<HTMLDataListElement>\n  dd: ElementCreator\n  del: ElementCreator\n  details: ElementCreator<HTMLDetailsElement>\n  dfn: ElementCreator\n  dialog: ElementCreator<HTMLDialogElement>\n  div: ElementCreator<HTMLDivElement>\n  dl: ElementCreator\n  dt: ElementCreator\n  em: ElementCreator\n  embed: ElementCreator<HTMLEmbedElement>\n  fieldset: ElementCreator<HTMLFieldSetElement>\n  figcaption: ElementCreator\n  figure: ElementCreator\n  font: ElementCreator\n  footer: ElementCreator\n  form: ElementCreator<HTMLFormElement>\n  frame: ElementCreator\n  frameset: ElementCreator\n  head: ElementCreator<HTMLHeadElement>\n  header: ElementCreator\n  hgroup: ElementCreator\n  h1: ElementCreator<HTMLHeadingElement>\n  h2: ElementCreator<HTMLHeadingElement>\n  h3: ElementCreator<HTMLHeadingElement>\n  h4: ElementCreator<HTMLHeadingElement>\n  h5: ElementCreator<HTMLHeadingElement>\n  h6: ElementCreator<HTMLHeadingElement>\n  hr: ElementCreator<HTMLHRElement>\n  html: ElementCreator<HTMLHtmlElement>\n  i: ElementCreator\n  iframe: ElementCreator<HTMLIFrameElement>\n  img: ElementCreator<HTMLImageElement>\n  input: ElementCreator<HTMLInputElement>\n  ins: ElementCreator<HTMLModElement>\n  kbd: ElementCreator\n  keygen: ElementCreator<HTMLUnknownElement>\n  label: ElementCreator<HTMLLabelElement>\n  legend: ElementCreator<HTMLLegendElement>\n  li: ElementCreator<HTMLLIElement>\n  link: ElementCreator<HTMLLinkElement>\n  main: ElementCreator\n  map: ElementCreator<HTMLMapElement>\n  mark: ElementCreator\n  menu: ElementCreator<HTMLMenuElement>\n  menuitem: ElementCreator<HTMLUnknownElement>\n  meta: ElementCreator<HTMLMetaElement>\n  meter: ElementCreator<HTMLMeterElement>\n  nav: ElementCreator\n  noframes: ElementCreator\n  noscript: ElementCreator\n  object: ElementCreator<HTMLObjectElement>\n  ol: ElementCreator<HTMLOListElement>\n  optgroup: ElementCreator<HTMLOptGroupElement>\n  option: ElementCreator<HTMLOptionElement>\n  output: ElementCreator<HTMLOutputElement>\n  p: ElementCreator<HTMLParagraphElement>\n  param: ElementCreator\n  picture: ElementCreator<HTMLPictureElement>\n  pre: ElementCreator<HTMLPreElement>\n  progress: ElementCreator<HTMLProgressElement>\n  q: ElementCreator<HTMLQuoteElement>\n  rp: ElementCreator\n  rt: ElementCreator\n  ruby: ElementCreator\n  s: ElementCreator\n  samp: ElementCreator\n  script: ElementCreator<HTMLScriptElement>\n  section: ElementCreator\n  select: ElementCreator<HTMLSelectElement>\n  slot: ElementCreator<HTMLSlotElement>\n  small: ElementCreator\n  source: ElementCreator<HTMLSourceElement>\n  span: ElementCreator<HTMLSpanElement>\n  strike: ElementCreator\n  strong: ElementCreator\n  style: ElementCreator<HTMLStyleElement>\n  sub: ElementCreator\n  summary: ElementCreator\n  svg: ElementCreator<SVGElement>\n  table: ElementCreator<HTMLTableElement>\n  tbody: ElementCreator<HTMLTableSectionElement>\n  td: ElementCreator<HTMLTableCellElement>\n  template: ElementCreator<HTMLTemplateElement>\n  textarea: ElementCreator<HTMLTextAreaElement>\n  tfoot: ElementCreator<HTMLTableSectionElement>\n  th: ElementCreator<HTMLTableCellElement>\n  thead: ElementCreator<HTMLTableSectionElement>\n  time: ElementCreator<HTMLTimeElement>\n  title: ElementCreator<HTMLTitleElement>\n  tr: ElementCreator<HTMLTableRowElement>\n  track: ElementCreator<HTMLTrackElement>\n  tt: ElementCreator\n  u: ElementCreator\n  ul: ElementCreator<HTMLUListElement>\n  var: ElementCreator\n  video: ElementCreator<HTMLVideoElement>\n  wbr: ElementCreator\n  [key: string | symbol]: ElementCreator<any>\n}\n\nconst templates: { [key: string]: HTMLElement } = {}\n\nconst create = (tagType: string, ...contents: ElementPart[]): SwissArmyElement => {\n  if (templates[tagType] === undefined) {\n    templates[tagType] = globalThis.document.createElement(tagType)\n  }\n  const elt = templates[tagType].cloneNode() as SwissArmyElement\n  const elementProps: ElementProps = {}\n  for (const item of contents) {\n    if (item instanceof Element || item instanceof DocumentFragment || typeof item === 'string' || typeof item === 'number') {\n      if (elt instanceof HTMLTemplateElement) {\n        elt.content.append(item as Node)\n      } else {\n        elt.append(item as Node)\n      }\n    } else {\n      Object.assign(elementProps, item)\n    }\n  }\n  for (const key of Object.keys(elementProps)) {\n    const value: any = elementProps[key]\n    if (key === 'apply') {\n      value(elt)\n    } else if (key === 'style') {\n      if (typeof value === 'object') {\n        for (const prop of Object.keys(value)) {\n          if (prop.startsWith('--')) {\n            elt.style.setProperty(prop, value[prop])\n          } else {\n            // @ts-expect-error\n            elt.style[prop] = value[prop]\n          }\n        }\n      } else {\n        elt.setAttribute('style', value)\n      }\n    } else if (key.match(/^on[A-Z]/) != null) {\n      const eventType = key.substring(2).toLowerCase()\n      on(elt, eventType, value)\n    } else if (key.match(/^bind[A-Z]/) != null) {\n      const bindingType = key.substring(4, 5).toLowerCase() + key.substring(5)\n      const binding = bindings[bindingType]\n      if (binding !== undefined) {\n        bind(elt, value, binding)\n      } else {\n        throw new Error(`${key} is not allowed, bindings.${bindingType} is not defined`)\n      }\n    // @ts-expect-error\n    } else if (elt[key] !== undefined) {\n      // @ts-expect-error\n      elt[key] = value\n    } else {\n      const attr = camelToKabob(key)\n\n      if (attr === 'class') {\n        value.split(' ').forEach((className: string) => {\n          elt.classList.add(className)\n        })\n      // @ts-expect-error-error\n      } else if (elt[attr] !== undefined) {\n        // @ts-expect-error-error\n        elt[attr] = value\n      } else if (typeof value === 'boolean') {\n        value ? elt.setAttribute(attr, '') : elt.removeAttribute(attr)\n      } else {\n        elt.setAttribute(attr, value)\n      }\n    }\n  }\n  return elt\n}\n\nconst fragment: ElementCreator<DocumentFragment> = (...contents: ElementPart[]) => {\n  const frag = globalThis.document.createDocumentFragment()\n  for (const item of contents) {\n    frag.append(item as Node)\n  }\n  return frag\n}\n\n/**\n * elements is a proxy that produces ElementCreators, e.g.\n * elements.div() creates <div> elements and\n * elements.myElement() creatres <my-element> elements.\n */\nexport const elements = new Proxy({ fragment }, {\n  get (target, tagName: string) {\n    tagName = tagName.replace(/[A-Z]/g, c => `-${c.toLocaleLowerCase()}`)\n    if (tagName.match(/^\\w+(-\\w+)*$/) == null) {\n      throw new Error(`${tagName} does not appear to be a valid element tagName`)\n      // @ts-expect-error\n    } else if (target[tagName] === undefined) {\n      // @ts-expect-error\n      target[tagName] = (...contents: ElementPart[]) => create(tagName, ...contents)\n    }\n    // @ts-expect-error\n    return target[tagName]\n  },\n  set () {\n    throw new Error('You may not add new properties to elements')\n  }\n}) as unknown as ElementsProxy\n","export function camelToKabob (s: string): string {\n  return s.replace(/[A-Z]/g, (c: string): string => {\n    return `-${c.toLocaleLowerCase()}`\n  })\n}\n\nexport function kabobToCamel (s: string): string {\n  return s.replace(/-([a-z])/g, (_: string, c: string): string => {\n    return c.toLocaleUpperCase()\n  })\n}\n","import { css } from './css'\nimport { XinStyleSheet } from './css-types'\nimport { deepClone } from './deep-clone'\nimport { appendContentToElement, dispatch, resizeObserver } from './dom'\nimport { elements, ElementsProxy } from './elements'\nimport { camelToKabob, kabobToCamel } from './string-case'\nimport { ElementCreator, SwissArmyElement, ContentType } from './xin-types'\n\nlet instanceCount = 0\n\nexport abstract class Component extends HTMLElement {\n  static elements: ElementsProxy = elements\n  private static _elementCreator?: ElementCreator\n  instanceId: string\n  styleNode?: HTMLStyleElement\n  content: ContentType | (() => ContentType) | null = elements.slot()\n  value?: any\n  isSlotted?: boolean\n  [key: string]: any\n\n  static StyleNode (styleSpec: XinStyleSheet): HTMLStyleElement {\n    return elements.style(css(styleSpec))\n  }\n\n  static elementCreator (options?: ElementDefinitionOptions & { tag?: string }): ElementCreator {\n    if (this._elementCreator == null) {\n      let desiredTag = options != null ? options.tag : null\n      if (desiredTag == null) {\n        desiredTag = camelToKabob(this.name)\n        if (desiredTag.startsWith('-')) {\n          desiredTag = desiredTag.substring(1)\n        }\n        if (!desiredTag.includes('-')) {\n          desiredTag += '-elt'\n        }\n      }\n      let attempts = 0\n      while (this._elementCreator == null) {\n        attempts += 1\n        const tag = attempts === 1 ? desiredTag : `${desiredTag}-${attempts}`\n        try {\n          window.customElements.define(tag, this as unknown as CustomElementConstructor, options)\n          this._elementCreator = elements[tag]\n        } catch (e) {\n          throw new Error(`could not define ${this.name} as <${tag}>: ${String(e)}`)\n        }\n      }\n    }\n    return this._elementCreator\n  }\n\n  initAttributes (...attributeNames: string[]): void {\n    const attributes: { [key: string]: any } = {}\n    const attributeValues = {}\n    const observer = new MutationObserver((mutationsList) => {\n      let triggerRender = false\n      mutationsList.forEach((mutation) => {\n        // eslint-disable-next-line\n        triggerRender = !!(mutation.attributeName && attributeNames.includes(kabobToCamel(mutation.attributeName)))\n      })\n      if (triggerRender && this.queueRender !== undefined) this.queueRender(false)\n    })\n    observer.observe(this, { attributes: true })\n    attributeNames.forEach(attributeName => {\n      attributes[attributeName] = deepClone(this[attributeName])\n      const attributeKabob = camelToKabob(attributeName)\n      Object.defineProperty(this, attributeName, {\n        enumerable: false,\n        get () {\n          if (typeof attributes[attributeName] === 'boolean') {\n            return this.hasAttribute(attributeKabob)\n          } else {\n            // eslint-disable-next-line\n            if (this.hasAttribute(attributeKabob)) {\n              return typeof attributes[attributeName] === 'number'\n                ? parseFloat(this.getAttribute(attributeKabob))\n                : this.getAttribute(attributeKabob)\n            // @ts-expect-error\n            } else if (attributeValues[attributeName] !== undefined) {\n            // @ts-expect-error\n              return attributeValues[attributeName]\n            } else {\n              return attributes[attributeName]\n            }\n          }\n        },\n        set (value) {\n          if (typeof attributes[attributeName] === 'boolean') {\n            if (value !== this[attributeName]) {\n              // eslint-disable-next-line\n              if (value) {\n                this.setAttribute(attributeKabob, '')\n              } else {\n                this.removeAttribute(attributeKabob)\n              }\n              this.queueRender()\n            }\n          } else if (typeof attributes[attributeName] === 'number') {\n            if (value !== parseFloat(this[attributeName])) {\n              this.setAttribute(attributeKabob, value)\n              this.queueRender()\n            }\n          } else {\n            if (typeof value === 'object' || `${value as string}` !== `${this[attributeName] as string}`) {\n              if (value === null || value === undefined || typeof value === 'object') {\n                this.removeAttribute(attributeKabob)\n              } else {\n                this.setAttribute(attributeKabob, value)\n              }\n              this.queueRender()\n              // @ts-expect-error\n              attributeValues[attributeName] = value\n            }\n          }\n        }\n      })\n    })\n  }\n\n  private initValue (): void {\n    const valueDescriptor = Object.getOwnPropertyDescriptor(this, 'value')\n    if (valueDescriptor === undefined || valueDescriptor.get !== undefined || valueDescriptor.set !== undefined) {\n      return\n    }\n    let value = this.hasAttribute('value') ? this.getAttribute('value') : deepClone(this.value)\n    delete this.value\n    Object.defineProperty(this, 'value', {\n      enumerable: false,\n      get () {\n        return value\n      },\n      set (newValue: any) {\n        if (value !== newValue) {\n          value = newValue\n          this.queueRender(true)\n        }\n      }\n    })\n  }\n\n  private _refs?: { [key: string]: SwissArmyElement }\n  get refs (): { [key: string]: SwissArmyElement } {\n    const root = this.shadowRoot != null ? this.shadowRoot : this\n    if (this._refs == null) {\n      this._refs = new Proxy({}, {\n        get (target: { [key: string]: SwissArmyElement }, ref: string) {\n          if (target[ref] === undefined) {\n            let element = root.querySelector(`[data-ref=\"${ref}\"]`)\n            if (element == null) {\n              element = root.querySelector(ref)\n            }\n            if (element == null) throw new Error(`elementRef \"${ref}\" does not exist!`)\n            element.removeAttribute('data-ref')\n            target[ref] = element as SwissArmyElement\n          }\n          return target[ref]\n        }\n      })\n    }\n    return this._refs\n  }\n\n  constructor () {\n    super()\n    instanceCount += 1\n    this.initAttributes('hidden')\n    this.instanceId = `${this.tagName.toLocaleLowerCase()}-${instanceCount}`\n    this._value = deepClone(this.defaultValue)\n  }\n\n  connectedCallback (): void {\n    this.hydrate()\n    // super annoyingly, chrome loses its shit if you set *any* attributes in the constructor\n    if (this.role != null) this.setAttribute('role', this.role)\n    if (this.onResize !== undefined) {\n      resizeObserver.observe(this)\n      if (this._onResize == null) {\n        this._onResize = this.onResize.bind(this)\n      }\n      this.addEventListener('resize', this._onResize)\n    }\n    if (this.value != null && this.getAttribute('value') != null) {\n      this._value = this.getAttribute('value')\n    }\n    this.queueRender()\n  }\n\n  disconnectedCallback (): void {\n    resizeObserver.unobserve(this)\n  }\n\n  private _changeQueued = false\n  private _renderQueued = false\n  queueRender (triggerChangeEvent = false): void {\n    if (!this._hydrated) return\n    if (!this._changeQueued) this._changeQueued = triggerChangeEvent\n    if (!this._renderQueued) {\n      this._renderQueued = true\n      requestAnimationFrame(() => {\n        // TODO add mechanism to allow component developer to have more control over\n        // whether input vs. change events are emitted\n        if (this._changeQueued) dispatch(this, 'change')\n        this._changeQueued = false\n        this._renderQueued = false\n        this.render()\n      })\n    }\n  }\n\n  private _hydrated = false\n  private hydrate (): void {\n    if (!this._hydrated) {\n      this.initValue()\n      const _content: ContentType | null = typeof this.content === 'function' ? this.content() : this.content\n      if (this.styleNode !== undefined) {\n        const shadow = this.attachShadow({ mode: 'open' })\n        shadow.appendChild(this.styleNode)\n        appendContentToElement(shadow, _content)\n      } else {\n        const existingChildren = [...this.childNodes]\n        if (appendContentToElement(this as HTMLElement, _content) && (existingChildren.length > 0)) {\n          const slotMap: { [key: string]: Element } = { '': this }\n          ;[...this.querySelectorAll('xin-slot')].forEach(slot => {\n            // @ts-expect-error\n            slotMap[slot.name] = slot\n          })\n          existingChildren.forEach(child => {\n            const defaultSlot = slotMap['']\n            const destSlot = child instanceof Element ? slotMap[child.slot] : defaultSlot\n            ;(destSlot !== undefined ? destSlot : defaultSlot).append(child)\n          })\n        }\n      }\n      this._hydrated = true\n    }\n  }\n\n  render (): void {}\n}\n\nclass XinSlot extends Component {\n  name = ''\n  content = null\n\n  constructor () {\n    super()\n    this.initAttributes('name')\n  }\n}\n\nexport const xinSlot = XinSlot.elementCreator({ tag: 'xin-slot' })\n","import { xin, observe } from './xin'\nimport { XIN_VALUE } from './metadata'\nimport { XinObject, PathTestFunction, ObserverCallbackFunction } from './xin-types'\nimport { debounce } from './throttle'\n\n// TODO reimplement using IndexedDB\n\nexport const hotReload = (test: PathTestFunction = () => true): void => {\n  const savedState = localStorage.getItem('xin-state')\n  if (savedState != null) {\n    const state = JSON.parse(savedState)\n    for (const key of Object.keys(state).filter(test)) {\n      if (xin[key] !== undefined) {\n        Object.assign(xin[key], state[key])\n      } else {\n        xin[key] = state[key]\n      }\n    }\n  }\n\n  const saveState = debounce(() => {\n    const obj: XinObject = {}\n    const state = xin[XIN_VALUE] as XinObject\n    for (const key of Object.keys(state).filter(test)) {\n      obj[key] = state[key]\n    }\n    localStorage.setItem('xin-state', JSON.stringify(obj))\n    console.log('xin state saved to localStorage')\n  }, 500)\n\n  observe(test, saveState as ObserverCallbackFunction)\n}\n","import { XIN_PATH, XIN_VALUE } from './metadata'\nimport { XinStyleRule } from './css-types'\n\nexport type XinScalar = string | boolean | number | Function\n\nexport type XinArray = XinObject[] | XinScalar[]\n\nexport interface XinObject {\n  [key: string]: XinObject | XinArray | XinScalar\n}\n\nexport type XinProxyTarget = XinObject | XinArray\n\nexport type XinValue = XinObject | XinArray | XinScalar | null | undefined\n\nexport interface XinProps {\n  [XIN_VALUE]: XinObject | XinObject | XinScalar\n  [XIN_PATH]: string\n}\n\nexport type XinProxyObject = XinProps & {\n  [key: string]: XinProxyObject | XinProxyArray | XinObject | XinArray | XinScalar\n}\n\nexport type XinProxyArray = XinProps & { [key: string]: XinProxyObject } & (XinProxyObject[] | XinScalar[])\nexport type XinProxy = XinProps & (XinObject | XinArray)\nexport type XinProxyValue = XinProxy | XinScalar | null | undefined\nexport type XinTouchableType = string | XinProps\nexport type XinEventHandler<T=Event> = ((evt: T) => void) | ((evt: T) => Promise<void>) | string\nexport type XinBindingShortcut = XinTouchableType | XinBindingSpec\n\ntype _BooleanFunction = () => boolean\ntype _PathTestFunction = (path: string) => boolean | Symbol\nexport type PathTestFunction = _BooleanFunction | _PathTestFunction\n\ntype OptionalSymbol = Symbol | undefined\ntype _CallbackFunction = (() => void) | (() => OptionalSymbol)\ntype _PathCallbackFunction = ((path: string) => void) | ((path: string) => OptionalSymbol)\nexport type ObserverCallbackFunction = _PathCallbackFunction | _CallbackFunction\n\nexport interface XinBindingSpec {\n  value: XinTouchableType | any\n  [key: string]: any\n}\n\nexport interface XinBinding<T = HTMLElement> {\n  toDOM?: (element: T, value: any, options?: XinObject) => void\n  fromDOM?: (element: T, options?: XinObject) => any\n}\nexport interface ElementProps {\n  onClick?: XinEventHandler<MouseEvent>\n  onInput?: XinEventHandler\n  onChange?: XinEventHandler\n  onSubmit?: XinEventHandler\n  bindValue?: XinBindingShortcut\n  bindText?: XinBindingShortcut\n  bindList?: XinBindingShortcut\n  bindEnabled?: XinBindingShortcut\n  bindDisabled?: XinBindingShortcut\n  bindStyle?: XinBindingShortcut\n  style?: XinStyleRule\n  class?: string\n  apply?: (element: HTMLElement) => void | Promise<void>\n  [key: string]: any\n}\n\nexport type ValueElement = HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\nexport type SwissArmyElement = HTMLElement & HTMLInputElement & HTMLCanvasElement\nexport type ElementPart = HTMLElement | DocumentFragment | ElementProps | string | number\nexport type HTMLElementCreator<T extends Node = SwissArmyElement> = (...contents: ElementPart[]) => T\nexport type FragmentCreator = (...contents: ElementPart[]) => DocumentFragment\nexport type ElementCreator<T extends Node = SwissArmyElement> = (...contents: ElementPart[]) => T\nexport type ContentPart = HTMLElement | DocumentFragment | string\nexport type ContentType = ContentPart | ContentPart[]\n","import { XinProxyObject } from './xin-types'\nimport { xin } from './xin'\n\nexport function xinProxy<T extends {}> (obj: T): T {\n  const registered: { [key: string]: any } = {}\n  Object.keys(obj).forEach((key: string) => {\n    // eslint-disable-next-line\n    xin[key] = (obj as {[key: string]: any})[key]\n    registered[key] = xin[key] as XinProxyObject\n  })\n  return registered as T\n}\n"],"names":["$81aaff24fb9cd9f7$var$$f0b099915f91bd21$var$resolveUpdate","$38bb96f6372300b3$export$a01e6b5107f59da5","source","polygon","leftover","split","reduce","acc","num","p","x","undefined","Number","push","y","Error","$38bb96f6372300b3$export$bb3edc44842b5f2e","points","length","Math","abs","totalArea","index","q","a","b","$cc01f8693f40d7ee$export$2e2bcd8739ae039","$81aaff24fb9cd9f7$export$a5a6e0b888b2c992","debug","perf","$81aaff24fb9cd9f7$var$$5165f04a46b33615$export$b7d58db314e0ac27","obj","Array","isArray","map","clone","key","val","$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$c6592bbc1eebb717","$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$4c0223f67078aeac","$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$6a7099543a9795c7","$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$21d9322c3477441b","$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$a3622eb3b5dd592a","Symbol","$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$bdd0d039ad781534","$81aaff24fb9cd9f7$export$40700dafb97c3799","$81aaff24fb9cd9f7$export$5dcba2d45033d435","$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$fe712848e6e66613","WeakMap","$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$1f922de8d0ecbb7e","$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$fa8cc6a36b1ccd7f","element","cloned","cloneNode","HTMLElement","dataBindings","get","eventHandlers","set","node","HTMLTemplateElement","content","childNodes","DocumentFragment","appendChild","$81aaff24fb9cd9f7$var$$e921b0bd4f6415ab$export$86caed35dd837d06","$81aaff24fb9cd9f7$export$4c309843c07ce679","html","document","body","parentElement","item","$81aaff24fb9cd9f7$export$253d09664e30b967","$81aaff24fb9cd9f7$var$$f0b099915f91bd21$export$58bed631278dbc67","$81aaff24fb9cd9f7$var$$f0b099915f91bd21$var$touchedPaths","$81aaff24fb9cd9f7$var$$f0b099915f91bd21$var$updateTriggered","$81aaff24fb9cd9f7$var$$f0b099915f91bd21$export$c92b1d5f43586026","constructor","test","callback","testDescription","callbackDescription","name","t","startsWith","RegExp","bind","toString","Function","description","$81aaff24fb9cd9f7$var$$f0b099915f91bd21$var$update","console","time","paths","path","filter","listener","heard","e","$81aaff24fb9cd9f7$export$23a2283368c55ea2","forEach","outcome","error","splice","timeEnd","$81aaff24fb9cd9f7$export$d0b7ea69ab6056df","touchable","Promise","resolve","setTimeout","find","touchedPath","$81aaff24fb9cd9f7$var$$f0b099915f91bd21$export$d1203567a167490e","indexOf","$81aaff24fb9cd9f7$var$$31366a4b885eb48b$var$stringify","JSON","stringify","_","$81aaff24fb9cd9f7$var$$31366a4b885eb48b$export$5a4bb2b1c89bdce7","messages","join","$81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$now36","Date","parseInt","now","valueOf","slice","$81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$_seq","$81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$seq","$81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$id","$81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$_delete_","$81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$_newObject_","$81aaff24fb9cd9f7$var$$c62be31ef05b0c90$export$f5d2dd4cfd729958","parts","search","part","$81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$idPathMaps","$81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$buildIdPathValueMap","array","idPath","idx","_auto_","$81aaff24fb9cd9f7$var$$c62be31ef05b0c90$export$44b5bed83342a92f","$81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$byIdPath","idValue","valueToInsert","$81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$getIdPathMap","delete","$81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$expectArray","$81aaff24fb9cd9f7$var$$c62be31ef05b0c90$var$expectObject","Object","i","iMax","j","jMax","found","includes","tail","$81aaff24fb9cd9f7$var$$547f11326d897190$var$ARRAY_MUTATIONS","$81aaff24fb9cd9f7$var$$547f11326d897190$var$registry","$81aaff24fb9cd9f7$var$$547f11326d897190$var$validPath","$81aaff24fb9cd9f7$var$$547f11326d897190$export$a678af82bf766611","$81aaff24fb9cd9f7$var$$547f11326d897190$var$extendPath","prop","match","$81aaff24fb9cd9f7$var$$547f11326d897190$var$regHandler","target","_prop","compoundProp","basePath","subPath","currentPath","value","Proxy","endsWith","substring","needle","candidate","items","result","prototype","apply","fullPath","existing","$81aaff24fb9cd9f7$export$966034e6c6823eb0","$81aaff24fb9cd9f7$var$$c62be31ef05b0c90$export$f65a19d15516795e","orig","shift","equalsOffset","hasOwnProperty","call","$81aaff24fb9cd9f7$var$$b5796eaeba5c782e$var$document","MutationObserver","$81aaff24fb9cd9f7$var$$b5796eaeba5c782e$var$MutationObserver","globalThis","$81aaff24fb9cd9f7$var$$b5796eaeba5c782e$export$80bf2f765c31be6a","changedPath","dataBinding","binding","options","toDOM","dataSource","observer","mutationsList","mutation","addedNodes","querySelectorAll","observe","subtree","childList","$81aaff24fb9cd9f7$export$d1203567a167490e","func","boundElements","$81aaff24fb9cd9f7$var$$b5796eaeba5c782e$var$handleChange","event","closest","fromDOM","existingActual","valueActual","addEventListener","$81aaff24fb9cd9f7$var$$b5796eaeba5c782e$var$handledEventTypes","Set","$81aaff24fb9cd9f7$var$$b5796eaeba5c782e$var$handleBoundEvent","propagationStopped","wrappedEvent","stopPropagation","eventBindings","handlers","type","handler","$81aaff24fb9cd9f7$export$af631764ddc44097","eventType","eventHandler","classList","add","has","$81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$export$635e15bbd66f01ea","Event","dispatchEvent","$81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$var$valueType","HTMLInputElement","HTMLSelectElement","hasAttribute","$81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$export$80746c6bc6142fc8","newValue","checked","valueAsDate","option","selected","$81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$export$bf7199a9ebcb84a9","radio","querySelector","toISOString","ResizeObserver","$81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$var$ResizeObserver","$81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$export$b13421f1ae71d316","entries","entry","unobserve","$81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$var$convertToXinSlot","slot","xinSlot","createElement","setAttribute","replaceWith","$81aaff24fb9cd9f7$var$$f314c6851ceb0f9e$export$6bb13967611cdb1","elt","isSlotted","textContent","append","Node","slots","$81aaff24fb9cd9f7$export$de363e709c412c8a","origFn","minInterval","debounceId","previousCall","inFlight","args","clearTimeout","$81aaff24fb9cd9f7$var$$ea2c6a36710de0a8$var$listBindingRef","$81aaff24fb9cd9f7$var$$ea2c6a36710de0a8$var$updateRelativeBindings","boundElement","matches","unshift","bindings","$81aaff24fb9cd9f7$var$$ea2c6a36710de0a8$var$ListBinding","_array","itemToElement","children","template","remove","listTop","listBottom","virtual","_update","update","visibleSlice","hiddenProp","visibleProp","visibleArray","firstItem","lastItem","topBuffer","bottomBuffer","width","offsetWidth","height","offsetHeight","visibleColumns","max","floor","visibleRows","ceil","totalRows","topRow","scrollTop","isSlice","initInstance","updateInstance","arrayPath","toggle","previousSlice","_previousSlice","removed","moved","created","proxy","style","String","elements","insertBefore","itemPath","insertionPoint","previousElementSibling","nextElementSibling","log","$81aaff24fb9cd9f7$var$$ea2c6a36710de0a8$export$b0eb386be3b9fed8","listBinding","$81aaff24fb9cd9f7$export$97a1a3e6f39778d2","text","enabled","disabled","Boolean","keys","list","$81aaff24fb9cd9f7$var$$0e50e8a626908591$export$7d15b64cf5a3a4c4","min","v","$81aaff24fb9cd9f7$var$$0e50e8a626908591$export$3a89f8d6f6bf6c9f","$81aaff24fb9cd9f7$var$$72989831e95a2bab$var$hex2","n","round","$81aaff24fb9cd9f7$var$$72989831e95a2bab$var$HslColor","r","g","l","s","h","$81aaff24fb9cd9f7$var$$72989831e95a2bab$var$span","$81aaff24fb9cd9f7$export$892596cec99bc70e","fromCss","spec","converted","HTMLSpanElement","color","getComputedStyle","fromHsl","toFixed","inverse","inverseLuminance","_hsl","rgb","rgba","RGBA","ARGB","_hslCached","hsl","hsla","mono","brightness","brighten","amount","darken","saturate","desaturate","rotate","opacity","alpha","swatch","blend","otherColor","$81aaff24fb9cd9f7$var$$bed4bed3dcfb6f9a$export$87ae551bf60f4bb","replace","c","toLocaleLowerCase","$81aaff24fb9cd9f7$var$$9e0c0b8784c80412$var$templates","$81aaff24fb9cd9f7$var$$9e0c0b8784c80412$var$create","tagType","contents","elementProps","Element","assign","setProperty","toLowerCase","bindingType","$81aaff24fb9cd9f7$export$2385a24977818dd0","what","attr","className","removeAttribute","$81aaff24fb9cd9f7$export$7a5d735b2ab6389d","fragment","frag","createDocumentFragment","tagName","$81aaff24fb9cd9f7$var$$49cee7f7f866c751$var$numericProps","$81aaff24fb9cd9f7$var$$49cee7f7f866c751$var$renderProp","indentation","cssProp","$81aaff24fb9cd9f7$var$$49cee7f7f866c751$var$renderStatement","renderedRule","innerKey","$81aaff24fb9cd9f7$export$dbf350e5966cf602","selectors","selector","rule","varName","isNegative","scaleText","method","scale","baseColor","getPropertyValue","$81aaff24fb9cd9f7$var$$cd387b053feba574$var$instanceCount","$81aaff24fb9cd9f7$export$16fa2f45be04daa8","StyleNode","styleSpec","elementCreator","_elementCreator","desiredTag","tag","attempts","window","customElements","define","initAttributes","attributeNames","attributes","attributeValues","triggerRender","attributeName","toLocaleUpperCase","queueRender","attributeKabob","defineProperty","enumerable","parseFloat","getAttribute","initValue","valueDescriptor","getOwnPropertyDescriptor","refs","root","shadowRoot","_refs","ref","instanceId","_value","defaultValue","connectedCallback","hydrate","role","onResize","_onResize","disconnectedCallback","_changeQueued","_renderQueued","triggerChangeEvent","_hydrated","requestAnimationFrame","render","_content","styleNode","shadow","attachShadow","mode","existingChildren","slotMap","child","defaultSlot","destSlot","$81aaff24fb9cd9f7$var$$cd387b053feba574$var$XinSlot","$6f770befbae8ae1b$var$TITLE","$6f770befbae8ae1b$var$svgElements","createElementNS","attrs","head","$6f770befbae8ae1b$var$main","h1","$6f770befbae8ae1b$var$h1","div","$6f770befbae8ae1b$var$div","button","$6f770befbae8ae1b$var$button","input","$6f770befbae8ae1b$var$input","$6f770befbae8ae1b$var$a","img","$6f770befbae8ae1b$var$img","$6f770befbae8ae1b$var$textRef","$6f770befbae8ae1b$var$svgContainer","class","onMouseenter","onMouseleave","$6f770befbae8ae1b$var$randomPct","random","$6f770befbae8ae1b$var$setText","poly","message","zIndex","settings","$6f770befbae8ae1b$var$settings","$6f770befbae8ae1b$var$handlers","registered","threshold","loadSvg","innerHTML","randomColors","area","simplify","totalPoints","totalRemaining","origPointCount","reduction","href","alt","src","onClick","title","placeholder","step","bindValue","catch"],"version":3,"file":"index.43aaf3d1.js.map"}